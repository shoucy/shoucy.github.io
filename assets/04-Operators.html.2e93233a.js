import{_ as e,r as c,o as l,c as i,a as s,b as t,w as p,e as o,d as n}from"./app.205a3d76.js";const u={},r=o(`<p>[TOC]</p><h1 id="\u7B2C\u56DB\u7AE0-\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u56DB\u7AE0-\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> \u7B2C\u56DB\u7AE0 \u8FD0\u7B97\u7B26</h1><blockquote><p>\u8FD0\u7B97\u7B26\u64CD\u7EB5\u6570\u636E\u3002</p></blockquote><p>Java \u662F\u4ECE C++ \u7684\u57FA\u7840\u4E0A\u505A\u4E86\u4E00\u4E9B\u6539\u8FDB\u548C\u7B80\u5316\u53D1\u5C55\u800C\u6210\u7684\u3002\u5BF9\u4E8E C/C++ \u7A0B\u5E8F\u5458\u6765\u8BF4\uFF0CJava \u7684\u8FD0\u7B97\u7B26\u5E76\u4E0D\u964C\u751F\u3002\u5982\u679C\u4F60\u5DF2\u4E86\u89E3 C \u6216 C++\uFF0C\u5927\u53EF\u4EE5\u8DF3\u8FC7\u672C\u7AE0\u548C\u4E0B\u4E00\u7AE0\uFF0C\u76F4\u63A5\u9605\u8BFB Java \u4E0E C/C++ \u4E0D\u540C\u7684\u5730\u65B9\u3002</p><p>\u5982\u679C\u7406\u89E3\u8FD9\u4E24\u7AE0\u7684\u5185\u5BB9\u5BF9\u4F60\u6765\u8BF4\u8FD8\u6709\u70B9\u56F0\u96BE\uFF0C\u90A3\u4E48\u6211\u63A8\u8350\u4F60\u5148\u4E86\u89E3\u4E0B \u300AThinking in C\u300B \u518D\u7EE7\u7EED\u540E\u9762\u7684\u5B66\u4E60\u3002 \u8FD9\u672C\u4E66\u73B0\u5728\u53EF\u4EE5\u5728 <a href="http://www.OnJava8.com" target="_blank" rel="noopener noreferrer">www.OnJava8.com</a> \u4E0A\u514D\u8D39\u4E0B\u8F7D\u3002\u5B83\u7684\u5185\u5BB9\u5305\u542B\u97F3\u9891\u8BB2\u5EA7\u3001\u5E7B\u706F\u7247\u3001\u7EC3\u4E60\u548C\u89E3\u7B54\uFF0C\u4E13\u95E8\u7528\u4E8E\u5E2E\u52A9\u4F60\u5FEB\u901F\u638C\u63E1\u5B66\u4E60 Java \u6240\u9700\u7684\u57FA\u7840\u77E5\u8BC6\u3002</p><h2 id="\u5F00\u59CB\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#\u5F00\u59CB\u4F7F\u7528" aria-hidden="true">#</a> \u5F00\u59CB\u4F7F\u7528</h2><p>\u8FD0\u7B97\u7B26\u63A5\u53D7\u4E00\u4E2A\u6216\u591A\u4E2A\u53C2\u6570\u5E76\u751F\u6210\u65B0\u503C\u3002\u8FD9\u4E2A\u53C2\u6570\u4E0E\u666E\u901A\u65B9\u6CD5\u8C03\u7528\u7684\u5F62\u5F0F\u4E0D\u540C\uFF0C\u4F46\u6548\u679C\u662F\u76F8\u540C\u7684\u3002\u52A0\u6CD5 <code>+</code>\u3001\u51CF\u6CD5 <code>-</code>\u3001\u4E58\u6CD5 <code>*</code>\u3001\u9664\u6CD5 <code>/</code> \u4EE5\u53CA\u8D4B\u503C <code>=</code> \u5728\u4EFB\u4F55\u7F16\u7A0B\u8BED\u8A00\u4E2D\u7684\u5DE5\u4F5C\u65B9\u5F0F\u90FD\u662F\u7C7B\u4F3C\u7684\u3002\u6240\u6709\u8FD0\u7B97\u7B26\u90FD\u80FD\u6839\u636E\u81EA\u5DF1\u7684\u8FD0\u7B97\u5BF9\u8C61\u751F\u6210\u4E00\u4E2A\u503C\u3002\u9664\u6B64\u4EE5\u5916\uFF0C\u4E00\u4E9B\u8FD0\u7B97\u7B26\u53EF\u6539\u53D8\u8FD0\u7B97\u5BF9\u8C61\u7684\u503C\uFF0C\u8FD9\u53EB\u4F5C\u201C\u526F\u4F5C\u7528\u201D\uFF08<strong>Side Effect</strong>\uFF09\u3002\u8FD0\u7B97\u7B26\u6700\u5E38\u89C1\u7684\u7528\u9014\u5C31\u662F\u4FEE\u6539\u81EA\u5DF1\u7684\u8FD0\u7B97\u5BF9\u8C61\uFF0C\u4ECE\u800C\u4EA7\u751F\u526F\u4F5C\u7528\u3002\u4F46\u8981\u6CE8\u610F\u751F\u6210\u7684\u503C\u4EA6\u53EF\u7531\u6CA1\u6709\u526F\u4F5C\u7528\u7684\u8FD0\u7B97\u7B26\u751F\u6210\u3002</p><p>\u51E0\u4E4E\u6240\u6709\u8FD0\u7B97\u7B26\u90FD\u53EA\u80FD\u64CD\u4F5C\u57FA\u672C\u7C7B\u578B\uFF08Primitives\uFF09\u3002\u552F\u4E00\u7684\u4F8B\u5916\u662F <code>=</code>\u3001<code>==</code> \u548C <code>!=</code>\uFF0C\u5B83\u4EEC\u80FD\u64CD\u4F5C\u6240\u6709\u5BF9\u8C61\uFF08\u8FD9\u4E5F\u662F\u4EE4\u4EBA\u6DF7\u6DC6\u7684\u4E00\u4E2A\u5730\u65B9\uFF09\u3002\u9664\u6B64\u4EE5\u5916\uFF0C<strong>String</strong> \u7C7B\u652F\u6301 <code>+</code> \u548C <code>+=</code>\u3002</p><h2 id="\u4F18\u5148\u7EA7" tabindex="-1"><a class="header-anchor" href="#\u4F18\u5148\u7EA7" aria-hidden="true">#</a> \u4F18\u5148\u7EA7</h2><p>\u8FD0\u7B97\u7B26\u7684\u4F18\u5148\u7EA7\u51B3\u5B9A\u4E86\u5B58\u5728\u591A\u4E2A\u8FD0\u7B97\u7B26\u65F6\u4E00\u4E2A\u8868\u8FBE\u5F0F\u5404\u90E8\u5206\u7684\u8FD0\u7B97\u987A\u5E8F\u3002Java \u5BF9\u8FD0\u7B97\u987A\u5E8F\u4F5C\u51FA\u4E86\u7279\u522B\u7684\u89C4\u5B9A\u3002\u5176\u4E2D\uFF0C\u6700\u7B80\u5355\u7684\u89C4\u5219\u5C31\u662F\u4E58\u6CD5\u548C\u9664\u6CD5\u5728\u52A0\u6CD5\u548C\u51CF\u6CD5\u4E4B\u524D\u5B8C\u6210\u3002\u7A0B\u5E8F\u5458\u7ECF\u5E38\u90FD\u4F1A\u5FD8\u8BB0\u5176\u4ED6\u4F18\u5148\u7EA7\u89C4\u5219\uFF0C\u6240\u4EE5\u5E94\u8BE5\u7528\u62EC\u53F7\u660E\u786E\u89C4\u5B9A\u8FD0\u7B97\u987A\u5E8F\u3002\u4EE3\u7801\u793A\u4F8B:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// operators/Precedence.java</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Precedence</span> <span class="token punctuation">{</span>
    
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> z <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> a <span class="token operator">=</span> x <span class="token operator">+</span> y <span class="token operator">-</span> <span class="token number">2</span><span class="token operator">/</span><span class="token number">2</span> <span class="token operator">+</span> z<span class="token punctuation">;</span> <span class="token comment">// [1]</span>
        <span class="token keyword">int</span> b <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token punctuation">(</span>y <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">+</span> z<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [2]</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;a = &quot;</span> <span class="token operator">+</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;b = &quot;</span> <span class="token operator">+</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    a = 5
    b = 1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E9B\u8BED\u53E5\u770B\u8D77\u6765\u5927\u81F4\u76F8\u540C\uFF0C\u4F46\u4ECE\u8F93\u51FA\u4E2D\u6211\u4EEC\u53EF\u4EE5\u770B\u51FA\u5B83\u4EEC\u5177\u6709\u975E\u5E38\u4E0D\u540C\u7684\u542B\u4E49\uFF0C\u5177\u4F53\u53D6\u51B3\u4E8E\u62EC\u53F7\u7684\u4F7F\u7528\u3002</p><p>\u6211\u4EEC\u6CE8\u610F\u5230\uFF0C\u5728 <code>System.out.println()</code> \u8BED\u53E5\u4E2D\u4F7F\u7528\u4E86 <code>+</code> \u8FD0\u7B97\u7B26\u3002 \u4F46\u662F\u5728\u8FD9\u91CC <code>+</code> \u4EE3\u8868\u7684\u610F\u601D\u662F\u5B57\u7B26\u4E32\u8FDE\u63A5\u7B26\u3002\u7F16\u8BD1\u5668\u4F1A\u5C06 <code>+</code> \u8FDE\u63A5\u7684\u975E\u5B57\u7B26\u4E32\u5C1D\u8BD5\u8F6C\u6362\u4E3A\u5B57\u7B26\u4E32\u3002\u4E0A\u4F8B\u4E2D\u7684\u8F93\u51FA\u7ED3\u679C\u8BF4\u660E\u4E86 a \u548C b \u90FD\u5DF2\u7ECF\u88AB\u8F6C\u5316\u6210\u4E86\u5B57\u7B26\u4E32\u3002</p><h2 id="\u8D4B\u503C" tabindex="-1"><a class="header-anchor" href="#\u8D4B\u503C" aria-hidden="true">#</a> \u8D4B\u503C</h2><p>\u8FD0\u7B97\u7B26\u7684\u8D4B\u503C\u662F\u7531\u7B26\u53F7 <code>=</code> \u5B8C\u6210\u7684\u3002\u5B83\u4EE3\u8868\u7740\u83B7\u53D6 <code>=</code> \u53F3\u8FB9\u7684\u503C\u5E76\u8D4B\u7ED9\u5DE6\u8FB9\u7684\u53D8\u91CF\u3002\u53F3\u8FB9\u53EF\u4EE5\u662F\u4EFB\u4F55\u5E38\u91CF\u3001\u53D8\u91CF\u6216\u8005\u53EF\u4EA7\u751F\u4E00\u4E2A\u8FD4\u56DE\u503C\u7684\u8868\u8FBE\u5F0F\u3002\u4F46\u5DE6\u8FB9\u5FC5\u987B\u662F\u4E00\u4E2A\u660E\u786E\u7684\u3001\u5DF2\u547D\u540D\u7684\u53D8\u91CF\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u5FC5\u987B\u8981\u6709\u4E00\u4E2A\u7269\u7406\u7684\u7A7A\u95F4\u6765\u5B58\u653E\u53F3\u8FB9\u7684\u503C\u3002\u4E3E\u4E2A\u4F8B\u5B50\u6765\u8BF4\uFF0C\u53EF\u5C06\u4E00\u4E2A\u5E38\u6570\u8D4B\u7ED9\u4E00\u4E2A\u53D8\u91CF\uFF08A = 4\uFF09\uFF0C\u4F46\u4E0D\u53EF\u5C06\u4EFB\u4F55\u4E1C\u897F\u8D4B\u7ED9\u4E00\u4E2A\u5E38\u6570\uFF08\u6BD4\u5982\u4E0D\u80FD 4 = A\uFF09\u3002</p><p>\u57FA\u672C\u7C7B\u578B\u7684\u8D4B\u503C\u90FD\u662F\u76F4\u63A5\u7684\uFF0C\u800C\u4E0D\u50CF\u5BF9\u8C61\uFF0C\u8D4B\u4E88\u7684\u53EA\u662F\u5176\u5185\u5B58\u7684\u5F15\u7528\u3002\u4E3E\u4E2A\u4F8B\u5B50\uFF0Ca = b \uFF0C\u5982\u679C b \u662F\u57FA\u672C\u7C7B\u578B\uFF0C\u90A3\u4E48\u8D4B\u503C\u64CD\u4F5C\u4F1A\u5C06 b \u7684\u503C\u590D\u5236\u4E00\u4EFD\u7ED9\u53D8\u91CF a\uFF0C \u6B64\u540E\u82E5 a \u7684\u503C\u53D1\u751F\u6539\u53D8\u662F\u4E0D\u4F1A\u5F71\u54CD\u5230 b \u7684\u3002\u4F5C\u4E3A\u4E00\u540D\u7A0B\u5E8F\u5458\uFF0C\u8FD9\u5E94\u8BE5\u6210\u4E3A\u6211\u4EEC\u7684\u5E38\u8BC6\u3002</p><p>\u5982\u679C\u662F\u4E3A\u5BF9\u8C61\u8D4B\u503C\uFF0C\u90A3\u4E48\u7ED3\u679C\u5C31\u4E0D\u4E00\u6837\u4E86\u3002\u5BF9\u4E00\u4E2A\u5BF9\u8C61\u8FDB\u884C\u64CD\u4F5C\u65F6\uFF0C\u6211\u4EEC\u5B9E\u9645\u4E0A\u64CD\u4F5C\u7684\u662F\u5B83\u7684\u5F15\u7528\u3002\u6240\u4EE5\u6211\u4EEC\u5C06\u53F3\u8FB9\u7684\u5BF9\u8C61\u8D4B\u4E88\u7ED9\u5DE6\u8FB9\u65F6\uFF0C\u8D4B\u4E88\u7684\u53EA\u662F\u8BE5\u5BF9\u8C61\u7684\u5F15\u7528\u3002\u6B64\u65F6\uFF0C\u4E24\u8005\u6307\u5411\u7684\u5806\u4E2D\u7684\u5BF9\u8C61\u8FD8\u662F\u540C\u4E00\u4E2A\u3002\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// operators/Assignment.java</span>
<span class="token comment">// Assignment with objects is a bit tricky</span>
<span class="token keyword">class</span> <span class="token class-name">Tank</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> level<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Assignment</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Tank</span> t1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Tank</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Tank</span> t2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Tank</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        t1<span class="token punctuation">.</span>level <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span>
        t2<span class="token punctuation">.</span>level <span class="token operator">=</span> <span class="token number">47</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;1: t1.level: &quot;</span> <span class="token operator">+</span> t1<span class="token punctuation">.</span>level <span class="token operator">+</span>
            <span class="token string">&quot;, t2.level: &quot;</span> <span class="token operator">+</span> t2<span class="token punctuation">.</span>level<span class="token punctuation">)</span><span class="token punctuation">;</span>
        t1 <span class="token operator">=</span> t2<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;2: t1.level: &quot;</span> <span class="token operator">+</span> t1<span class="token punctuation">.</span>level <span class="token operator">+</span>
            <span class="token string">&quot;, t2.level: &quot;</span> <span class="token operator">+</span> t2<span class="token punctuation">.</span>level<span class="token punctuation">)</span><span class="token punctuation">;</span>
        t1<span class="token punctuation">.</span>level <span class="token operator">=</span> <span class="token number">27</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;3: t1.level: &quot;</span> <span class="token operator">+</span> t1<span class="token punctuation">.</span>level <span class="token operator">+</span>
            <span class="token string">&quot;, t2.level: &quot;</span> <span class="token operator">+</span> t2<span class="token punctuation">.</span>level<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>1: t1.level: 9, t2.level: 47
2: t1.level: 47, t2.level: 47
3: t1.level: 27, t2.level: 27
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u662F\u4E00\u4E2A\u7B80\u5355\u7684 <code>Tank</code> \u7C7B\uFF0C\u5728 <code>main()</code> \u65B9\u6CD5\u521B\u5EFA\u4E86\u4E24\u4E2A\u5B9E\u4F8B\u5BF9\u8C61\u3002 \u4E24\u4E2A\u5BF9\u8C61\u7684 <code>level</code> \u5C5E\u6027\u5206\u522B\u88AB\u8D4B\u4E88\u4E0D\u540C\u7684\u503C\u3002 \u7136\u540E\uFF0Ct2 \u7684\u503C\u88AB\u8D4B\u4E88\u7ED9 t1\u3002\u5728\u8BB8\u591A\u7F16\u7A0B\u8BED\u8A00\u91CC\uFF0C\u9884\u671F\u7684\u7ED3\u679C\u662F t1 \u548C t2 \u7684\u503C\u4F1A\u4E00\u76F4\u76F8\u5BF9\u72EC\u7ACB\u3002\u4F46\u662F\uFF0C\u5728 Java \u4E2D\uFF0C\u7531\u4E8E\u8D4B\u4E88\u7684\u53EA\u662F\u5BF9\u8C61\u7684\u5F15\u7528\uFF0C\u6539\u53D8 t1 \u4E5F\u5C31\u6539\u53D8\u4E86 t2\u3002 \u8FD9\u662F\u56E0\u4E3A t1 \u548C t2 \u6B64\u65F6\u6307\u5411\u7684\u662F\u5806\u4E2D\u540C\u4E00\u4E2A\u5BF9\u8C61\u3002\uFF08t1 \u539F\u59CB\u5BF9\u8C61\u7684\u5F15\u7528\u5728 t2 \u8D4B\u503C\u7ED9\u5176\u65F6\u4E22\u5931\uFF0C\u5B83\u5F15\u7528\u7684\u5BF9\u8C61\u4F1A\u5728\u5783\u573E\u56DE\u6536\u65F6\u88AB\u6E05\u7406\uFF09\u3002</p><p>\u8FD9\u79CD\u73B0\u8C61\u901A\u5E38\u79F0\u4E3A\u522B\u540D\uFF08aliasing\uFF09\uFF0C\u8FD9\u662F Java \u5904\u7406\u5BF9\u8C61\u7684\u4E00\u79CD\u57FA\u672C\u65B9\u5F0F\u3002\u4F46\u662F\u5047\u82E5\u4F60\u4E0D\u60F3\u51FA\u73B0\u8FD9\u91CC\u7684\u522B\u540D\u5F15\u8D77\u6DF7\u6DC6\u7684\u8BDD\uFF0C\u4F60\u53EF\u4EE5\u8FD9\u4E48\u505A\u3002\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>t1<span class="token punctuation">.</span>level <span class="token operator">=</span> t2<span class="token punctuation">.</span>level<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8F83\u4E4B\u524D\u7684\u505A\u6CD5\uFF0C\u8FD9\u6837\u505A\u4FDD\u7559\u4E86\u4E24\u4E2A\u5355\u72EC\u7684\u5BF9\u8C61\uFF0C\u800C\u4E0D\u662F\u4E22\u5F03\u4E00\u4E2A\u5E76\u5C06 t1 \u548C t2 \u7ED1\u5B9A\u5230\u540C\u4E00\u4E2A\u5BF9\u8C61\u3002\u4F46\u662F\u8FD9\u6837\u7684\u64CD\u4F5C\u6709\u70B9\u8FDD\u80CC Java \u7684\u8BBE\u8BA1\u539F\u5219\u3002\u5BF9\u8C61\u7684\u8D4B\u503C\u662F\u4E2A\u9700\u8981\u91CD\u89C6\u7684\u73AF\u8282\uFF0C\u5426\u5219\u4F60\u53EF\u80FD\u6536\u83B7\u610F\u5916\u7684\u201C\u60CA\u559C\u201D\u3002</p><h3 id="\u65B9\u6CD5\u8C03\u7528\u4E2D\u7684\u522B\u540D\u73B0\u8C61" tabindex="-1"><a class="header-anchor" href="#\u65B9\u6CD5\u8C03\u7528\u4E2D\u7684\u522B\u540D\u73B0\u8C61" aria-hidden="true">#</a> \u65B9\u6CD5\u8C03\u7528\u4E2D\u7684\u522B\u540D\u73B0\u8C61</h3><p>\u5F53\u6211\u4EEC\u628A\u5BF9\u8C61\u4F20\u9012\u7ED9\u65B9\u6CD5\u65F6\uFF0C\u4F1A\u53D1\u751F\u522B\u540D\u73B0\u8C61\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// operators/PassObject.java</span>
<span class="token comment">// \u6B63\u5728\u4F20\u9012\u7684\u5BF9\u8C61\u53EF\u80FD\u4E0D\u662F\u4F60\u4E4B\u524D\u4F7F\u7528\u7684</span>
<span class="token keyword">class</span> <span class="token class-name">Letter</span> <span class="token punctuation">{</span>
    <span class="token keyword">char</span> c<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PassObject</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token class-name">Letter</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        y<span class="token punctuation">.</span>c <span class="token operator">=</span> <span class="token char">&#39;z&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Letter</span> x <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Letter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        x<span class="token punctuation">.</span>c <span class="token operator">=</span> <span class="token char">&#39;a&#39;</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;1: x.c: &quot;</span> <span class="token operator">+</span> x<span class="token punctuation">.</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;2: x.c: &quot;</span> <span class="token operator">+</span> x<span class="token punctuation">.</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>1: x.c: a
2: x.c: z
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,31),k=n("\u5728\u8BB8\u591A\u7F16\u7A0B\u8BED\u8A00\u4E2D\uFF0C\u65B9\u6CD5 "),d=s("code",null,"f()",-1),v=n(" \u4F3C\u4E4E\u4F1A\u5728\u5185\u90E8\u590D\u5236\u5176\u53C2\u6570 "),m=s("strong",null,"Letter y",-1),b=n("\u3002\u4F46\u662F\u4E00\u65E6\u4F20\u9012\u4E86\u4E00\u4E2A\u5F15\u7528\uFF0C\u90A3\u4E48\u5B9E\u9645\u4E0A "),g=s("code",null,"y.c ='z';",-1),y=n(" \u662F\u5728\u65B9\u6CD5 "),x=s("code",null,"f()",-1),f=n(" \u4E4B\u5916\u6539\u53D8\u5BF9\u8C61\u3002\u522B\u540D\u73B0\u8C61\u4EE5\u53CA\u5176\u89E3\u51B3\u65B9\u6848\u662F\u4E2A\u590D\u6742\u7684\u95EE\u9898\uFF0C\u5728\u9644\u5F55\u4E2D\u6709\u5305\u542B\uFF1A"),w=n("\u5BF9\u8C61\u4F20\u9012\u548C\u8FD4\u56DE"),h=n("\u3002\u610F\u8BC6\u5230\u8FD9\u4E00\u70B9\uFF0C\u6211\u4EEC\u53EF\u4EE5\u8B66\u60D5\u7C7B\u4F3C\u7684\u9677\u9631\u3002"),q=o(`<h2 id="\u7B97\u672F\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#\u7B97\u672F\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> \u7B97\u672F\u8FD0\u7B97\u7B26</h2><p>Java \u7684\u57FA\u672C\u7B97\u672F\u8FD0\u7B97\u7B26\u4E0E\u5176\u4ED6\u5927\u591A\u7F16\u7A0B\u8BED\u8A00\u662F\u76F8\u540C\u7684\u3002\u5176\u4E2D\u5305\u62EC\u52A0\u53F7 <code>+</code>\u3001\u51CF\u53F7 <code>-</code>\u3001\u9664\u53F7 <code>/</code>\u3001\u4E58\u53F7 <code>*</code> \u4EE5\u53CA\u53D6\u6A21 <code>%</code>\uFF08\u4ECE\u6574\u6570\u9664\u6CD5\u4E2D\u83B7\u5F97\u4F59\u6570\uFF09\u3002\u6574\u6570\u9664\u6CD5\u4F1A\u76F4\u63A5\u780D\u6389\u5C0F\u6570\uFF0C\u800C\u4E0D\u662F\u8FDB\u4F4D\u3002</p><p>Java \u4E5F\u7528\u4E00\u79CD\u4E0E C++ \u76F8\u540C\u7684\u7B80\u5199\u5F62\u5F0F\u540C\u65F6\u8FDB\u884C\u8FD0\u7B97\u548C\u8D4B\u503C\u64CD\u4F5C\uFF0C\u7531\u8FD0\u7B97\u7B26\u540E\u8DDF\u7B49\u53F7\u8868\u793A\uFF0C\u5E76\u4E14\u4E0E\u8BED\u8A00\u4E2D\u7684\u6240\u6709\u8FD0\u7B97\u7B26\u4E00\u81F4\uFF08\u53EA\u8981\u6709\u610F\u4E49\uFF09\u3002 \u53EF\u7528 x += 4 \u6765\u8868\u793A\uFF1A\u5C06 x \u7684\u503C\u52A0\u4E0A4\u7684\u7ED3\u679C\u518D\u8D4B\u503C\u7ED9 x\u3002\u66F4\u591A\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// operators/MathOps.java</span>
<span class="token comment">// The mathematical operators</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MathOps</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Create a seeded random number generator:</span>
        <span class="token class-name">Random</span> rand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token number">47</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> k<span class="token punctuation">;</span>
        <span class="token comment">// Choose value from 1 to 100:</span>
        j <span class="token operator">=</span> rand<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;j : &quot;</span> <span class="token operator">+</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
        k <span class="token operator">=</span> rand<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;k : &quot;</span> <span class="token operator">+</span> k<span class="token punctuation">)</span><span class="token punctuation">;</span>
        i <span class="token operator">=</span> j <span class="token operator">+</span> k<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;j + k : &quot;</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        i <span class="token operator">=</span> j <span class="token operator">-</span> k<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;j - k : &quot;</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        i <span class="token operator">=</span> k <span class="token operator">/</span> j<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;k / j : &quot;</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        i <span class="token operator">=</span> k <span class="token operator">*</span> j<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;k * j : &quot;</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        i <span class="token operator">=</span> k <span class="token operator">%</span> j<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;k % j : &quot;</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        j <span class="token operator">%=</span> k<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;j %= k : &quot;</span> <span class="token operator">+</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u6D6E\u70B9\u8FD0\u7B97\u6D4B\u8BD5</span>
        <span class="token keyword">float</span> u<span class="token punctuation">,</span> v<span class="token punctuation">,</span> w<span class="token punctuation">;</span> <span class="token comment">// Applies to doubles, too</span>
        v <span class="token operator">=</span> rand<span class="token punctuation">.</span><span class="token function">nextFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;v : &quot;</span> <span class="token operator">+</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
        w <span class="token operator">=</span> rand<span class="token punctuation">.</span><span class="token function">nextFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;w : &quot;</span> <span class="token operator">+</span> w<span class="token punctuation">)</span><span class="token punctuation">;</span>
        u <span class="token operator">=</span> v <span class="token operator">+</span> w<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;v + w : &quot;</span> <span class="token operator">+</span> u<span class="token punctuation">)</span><span class="token punctuation">;</span>
        u <span class="token operator">=</span> v <span class="token operator">-</span> w<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;v - w : &quot;</span> <span class="token operator">+</span> u<span class="token punctuation">)</span><span class="token punctuation">;</span>
        u <span class="token operator">=</span> v <span class="token operator">*</span> w<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;v * w : &quot;</span> <span class="token operator">+</span> u<span class="token punctuation">)</span><span class="token punctuation">;</span>
        u <span class="token operator">=</span> v <span class="token operator">/</span> w<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;v / w : &quot;</span> <span class="token operator">+</span> u<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u4E0B\u9762\u7684\u64CD\u4F5C\u540C\u6837\u9002\u7528\u4E8E char, </span>
        <span class="token comment">// byte, short, int, long, and double:</span>
        u <span class="token operator">+=</span> v<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;u += v : &quot;</span> <span class="token operator">+</span> u<span class="token punctuation">)</span><span class="token punctuation">;</span>
        u <span class="token operator">-=</span> v<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;u -= v : &quot;</span> <span class="token operator">+</span> u<span class="token punctuation">)</span><span class="token punctuation">;</span>
        u <span class="token operator">*=</span> v<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;u *= v : &quot;</span> <span class="token operator">+</span> u<span class="token punctuation">)</span><span class="token punctuation">;</span>
        u <span class="token operator">/=</span> v<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;u /= v : &quot;</span> <span class="token operator">+</span> u<span class="token punctuation">)</span><span class="token punctuation">;</span>    
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>j : 59
k : 56
j + k : 115
j - k : 3
k / j : 0
k * j : 3304
k % j : 56
j %= k : 3
v : 0.5309454
w : 0.0534122
v + w : 0.5843576
v - w : 0.47753322
v * w : 0.028358962
v / w : 9.940527
u += v : 10.471473
u -= v : 9.940527
u *= v : 5.2778773
u /= v : 9.940527
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E3A\u4E86\u751F\u6210\u968F\u673A\u6570\u5B57\uFF0C\u7A0B\u5E8F\u9996\u5148\u521B\u5EFA\u4E00\u4E2A <strong>Random</strong> \u5BF9\u8C61\u3002\u4E0D\u5E26\u53C2\u6570\u7684 <strong>Random</strong> \u5BF9\u8C61\u4F1A\u5229\u7528\u5F53\u524D\u7684\u65F6\u95F4\u7528\u4F5C\u968F\u673A\u6570\u751F\u6210\u5668\u7684\u201C\u79CD\u5B50\u201D\uFF08seed\uFF09\uFF0C\u4ECE\u800C\u4E3A\u7A0B\u5E8F\u7684\u6BCF\u6B21\u6267\u884C\u751F\u6210\u4E0D\u540C\u7684\u8F93\u51FA\u3002\u5728\u672C\u4E66\u7684\u793A\u4F8B\u4E2D\uFF0C\u91CD\u8981\u7684\u662F\u6BCF\u4E2A\u793A\u4F8B\u672B\u5C3E\u7684\u8F93\u51FA\u5C3D\u53EF\u80FD\u4E00\u81F4\uFF0C\u4EE5\u4FBF\u53EF\u4EE5\u4F7F\u7528\u5916\u90E8\u5DE5\u5177\u8FDB\u884C\u9A8C\u8BC1\u3002\u6240\u4EE5\u6211\u4EEC\u901A\u8FC7\u5728\u521B\u5EFA <strong>Random</strong> \u5BF9\u8C61\u65F6\u63D0\u4F9B\u79CD\u5B50\uFF08\u968F\u673A\u6570\u751F\u6210\u5668\u7684\u521D\u59CB\u5316\u503C\uFF0C\u5176\u59CB\u7EC8\u4E3A\u7279\u5B9A\u79CD\u5B50\u503C\u4EA7\u751F\u76F8\u540C\u7684\u5E8F\u5217\uFF09\uFF0C\u8BA9\u7A0B\u5E8F\u6BCF\u6B21\u6267\u884C\u90FD\u751F\u6210\u76F8\u540C\u7684\u968F\u673A\u6570\uFF0C\u5982\u6B64\u4EE5\u6765\u8F93\u51FA\u7ED3\u679C\u5C31\u662F\u53EF\u9A8C\u8BC1\u7684 [^1]\u3002 \u82E5\u9700\u8981\u751F\u6210\u968F\u673A\u503C\uFF0C\u53EF\u5220\u9664\u4EE3\u7801\u793A\u4F8B\u4E2D\u7684\u79CD\u5B50\u53C2\u6570\u3002\u8BE5\u5BF9\u8C61\u901A\u8FC7\u8C03\u7528\u65B9\u6CD5 <code>nextInt()</code> \u548C <code>nextFloat()</code>\uFF08\u8FD8\u53EF\u4EE5\u8C03\u7528 <code>nextLong()</code> \u6216 <code>nextDouble()</code>\uFF09\uFF0C\u4F7F\u7528 <strong>Random</strong> \u5BF9\u8C61\u751F\u6210\u8BB8\u591A\u4E0D\u540C\u7C7B\u578B\u7684\u968F\u673A\u6570\u3002<code>nextInt()</code> \u7684\u53C2\u6570\u8BBE\u7F6E\u751F\u6210\u7684\u6570\u5B57\u7684\u4E0A\u9650\uFF0C\u4E0B\u9650\u4E3A\u96F6\uFF0C\u4E3A\u4E86\u907F\u514D\u96F6\u9664\u7684\u53EF\u80FD\u6027\uFF0C\u7ED3\u679C\u504F\u79FB1\u3002</p><h3 id="\u4E00\u5143\u52A0\u51CF\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#\u4E00\u5143\u52A0\u51CF\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> \u4E00\u5143\u52A0\u51CF\u8FD0\u7B97\u7B26</h3><p>\u4E00\u5143\u52A0 <code>+</code> \u51CF <code>-</code> \u8FD0\u7B97\u7B26\u7684\u64CD\u4F5C\u548C\u4E8C\u5143\u662F\u76F8\u540C\u7684\u3002\u7F16\u8BD1\u5668\u53EF\u81EA\u52A8\u8BC6\u522B\u4F7F\u7528\u4F55\u79CD\u65B9\u5F0F\u89E3\u6790\u8FD0\u7B97\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>x <span class="token operator">=</span> <span class="token operator">-</span>a<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4E0A\u4F8B\u7684\u4EE3\u7801\u8868\u610F\u6E05\u6670\uFF0C\u7F16\u8BD1\u5668\u53EF\u6B63\u786E\u8BC6\u522B\u3002\u4E0B\u9762\u518D\u770B\u4E00\u4E2A\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>x <span class="token operator">=</span> a <span class="token operator">*</span> <span class="token operator">-</span>b<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u867D\u7136\u7F16\u8BD1\u5668\u53EF\u4EE5\u6B63\u786E\u7684\u8BC6\u522B\uFF0C\u4F46\u662F\u7A0B\u5E8F\u5458\u53EF\u80FD\u4F1A\u8FF7\u60D1\u3002\u4E3A\u4E86\u907F\u514D\u6DF7\u6DC6\uFF0C\u63A8\u8350\u4E0B\u9762\u7684\u5199\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>x <span class="token operator">=</span> a <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token operator">-</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4E00\u5143\u51CF\u53F7\u53EF\u4EE5\u5F97\u5230\u6570\u636E\u7684\u8D1F\u503C\u3002\u4E00\u5143\u52A0\u53F7\u7684\u4F5C\u7528\u76F8\u53CD\uFF0C\u4E0D\u8FC7\u5B83\u552F\u4E00\u80FD\u5F71\u54CD\u7684\u5C31\u662F\u628A\u8F83\u5C0F\u7684\u6570\u503C\u7C7B\u578B\u81EA\u52A8\u8F6C\u6362\u4E3A <strong>int</strong> \u7C7B\u578B\u3002</p><h2 id="\u9012\u589E\u548C\u9012\u51CF" tabindex="-1"><a class="header-anchor" href="#\u9012\u589E\u548C\u9012\u51CF" aria-hidden="true">#</a> \u9012\u589E\u548C\u9012\u51CF</h2><p>\u548C C \u8BED\u8A00\u7C7B\u4F3C\uFF0CJava \u63D0\u4F9B\u4E86\u8BB8\u591A\u5FEB\u6377\u8FD0\u7B97\u65B9\u5F0F\u3002\u5FEB\u6377\u8FD0\u7B97\u53EF\u4F7F\u4EE3\u7801\u53EF\u8BFB\u6027\uFF0C\u53EF\u5199\u6027\u90FD\u66F4\u5F3A\u3002\u5176\u4E2D\u5305\u62EC\u9012\u589E <code>++</code> \u548C\u9012\u51CF <code>--</code>\uFF0C\u610F\u4E3A\u201C\u589E\u52A0\u6216\u51CF\u5C11\u4E00\u4E2A\u5355\u4F4D\u201D\u3002\u4E3E\u4E2A\u4F8B\u5B50\u6765\u8BF4\uFF0C\u5047\u8BBE a \u662F\u4E00\u4E2A <strong>int</strong> \u7C7B\u578B\u7684\u503C\uFF0C\u5219\u8868\u8FBE\u5F0F <code>++a</code> \u5C31\u7B49\u4EF7\u4E8E <code>a = a + 1</code>\u3002 \u9012\u589E\u548C\u9012\u51CF\u8FD0\u7B97\u7B26\u4E0D\u4EC5\u53EF\u4EE5\u4FEE\u6539\u53D8\u91CF\uFF0C\u8FD8\u53EF\u4EE5\u751F\u6210\u53D8\u91CF\u7684\u503C\u3002</p><p>\u6BCF\u79CD\u7C7B\u578B\u7684\u8FD0\u7B97\u7B26\uFF0C\u90FD\u6709\u4E24\u4E2A\u7248\u672C\u53EF\u4F9B\u9009\u7528\uFF1B\u901A\u5E38\u5C06\u5176\u79F0\u4E3A\u201C\u524D\u7F00\u201D\u548C\u201C\u540E\u7F00\u201D\u3002\u201C\u524D\u9012\u589E\u201D\u8868\u793A <code>++</code> \u8FD0\u7B97\u7B26\u4F4D\u4E8E\u53D8\u91CF\u6216\u8868\u8FBE\u5F0F\u7684\u524D\u9762\uFF1B\u800C\u201C\u540E\u9012\u589E\u201D\u8868\u793A <code>++</code> \u8FD0\u7B97\u7B26\u4F4D\u4E8E\u53D8\u91CF\u7684\u540E\u9762\u3002\u7C7B\u4F3C\u5730\uFF0C\u201C\u524D\u9012\u51CF\u201D\u610F\u5473\u7740 <code>--</code> \u8FD0\u7B97\u7B26\u4F4D\u4E8E\u53D8\u91CF\u7684\u524D\u9762\uFF1B\u800C\u201C\u540E\u9012\u51CF\u201D\u610F\u5473\u7740 <code>--</code> \u8FD0\u7B97\u7B26\u4F4D\u4E8E\u53D8\u91CF\u7684\u540E\u9762\u3002\u5BF9\u4E8E\u524D\u9012\u589E\u548C\u524D\u9012\u51CF\uFF08\u5982 <code>++a</code> \u6216 <code>--a</code>\uFF09\uFF0C\u4F1A\u5148\u6267\u884C\u9012\u589E/\u51CF\u8FD0\u7B97\uFF0C\u518D\u8FD4\u56DE\u503C\u3002\u800C\u5BF9\u4E8E\u540E\u9012\u589E\u548C\u540E\u9012\u51CF\uFF08\u5982 <code>a++</code> \u6216 <code>a--</code>\uFF09\uFF0C\u4F1A\u5148\u8FD4\u56DE\u503C\uFF0C\u518D\u6267\u884C\u9012\u589E/\u51CF\u8FD0\u7B97\u3002\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// operators/AutoInc.java</span>
<span class="token comment">// \u6F14\u793A ++ \u548C -- \u8FD0\u7B97\u7B26</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AutoInc</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;i: &quot;</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;++i: &quot;</span> <span class="token operator">+</span> <span class="token operator">++</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u524D\u9012\u589E</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;i++: &quot;</span> <span class="token operator">+</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u540E\u9012\u589E</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;i: &quot;</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;--i: &quot;</span> <span class="token operator">+</span> <span class="token operator">--</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u524D\u9012\u51CF</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;i--: &quot;</span> <span class="token operator">+</span> i<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u540E\u9012\u51CF</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;i: &quot;</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>i: 1
++i: 2
i++: 2
i: 3
--i: 2
i--: 2
i: 1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u4E8E\u524D\u7F00\u5F62\u5F0F\uFF0C\u6211\u4EEC\u5C06\u5728\u6267\u884C\u9012\u589E/\u51CF\u64CD\u4F5C\u540E\u83B7\u53D6\u503C\uFF1B\u4F7F\u7528\u540E\u7F00\u5F62\u5F0F\uFF0C\u6211\u4EEC\u5C06\u5728\u6267\u884C\u9012\u589E/\u51CF\u64CD\u4F5C\u4E4B\u524D\u83B7\u53D6\u503C\u3002\u5B83\u4EEC\u662F\u552F\u4E00\u5177\u6709\u201C\u526F\u4F5C\u7528\u201D\u7684\u8FD0\u7B97\u7B26\uFF08\u9664\u90A3\u4E9B\u6D89\u53CA\u8D4B\u503C\u7684\u4EE5\u5916\uFF09 \u2014\u2014 \u5B83\u4EEC\u4FEE\u6539\u4E86\u64CD\u4F5C\u6570\u7684\u503C\u3002</p><p>C++ \u540D\u79F0\u6765\u81EA\u4E8E\u9012\u589E\u8FD0\u7B97\u7B26\uFF0C\u6697\u793A\u7740\u201C\u6BD4 C \u66F4\u8FDB\u4E00\u6B65\u201D\u3002\u5728\u65E9\u671F\u7684 Java \u6F14\u8BB2\u4E2D\uFF0C<em>Bill Joy</em>\uFF08Java \u4F5C\u8005\u4E4B\u4E00\uFF09\u8BF4\u201C<strong>Java = C++ --</strong>\u201D\uFF08C++ \u51CF\u51CF\uFF09\uFF0C\u610F\u5473\u7740 Java \u5728 C++ \u7684\u57FA\u7840\u4E0A\u51CF\u5C11\u4E86\u8BB8\u591A\u4E0D\u5FC5\u8981\u7684\u4E1C\u897F\uFF0C\u56E0\u6B64\u8BED\u8A00\u66F4\u7B80\u5355\u3002\u968F\u7740\u8FDB\u4E00\u6B65\u5730\u5B66\u4E60\uFF0C\u6211\u4EEC\u4F1A\u53D1\u73B0 Java \u7684\u786E\u6709\u8BB8\u591A\u5730\u65B9\u76F8\u5BF9 C++ \u6765\u8BF4\u66F4\u7B80\u4FBF\uFF0C\u4F46\u662F\u5728\u5176\u4ED6\u65B9\u9762\uFF0C\u96BE\u5EA6\u5E76\u4E0D\u4F1A\u6BD4 C++ \u5C0F\u591A\u5C11\u3002</p><h2 id="\u5173\u7CFB\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#\u5173\u7CFB\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> \u5173\u7CFB\u8FD0\u7B97\u7B26</h2><p>\u5173\u7CFB\u8FD0\u7B97\u7B26\u4F1A\u901A\u8FC7\u4EA7\u751F\u4E00\u4E2A\u5E03\u5C14\uFF08<strong>boolean</strong>\uFF09\u7ED3\u679C\u6765\u8868\u793A\u64CD\u4F5C\u6570\u4E4B\u95F4\u7684\u5173\u7CFB\u3002\u5982\u679C\u5173\u7CFB\u4E3A\u771F\uFF0C\u5219\u7ED3\u679C\u4E3A <strong>true</strong>\uFF0C\u5982\u679C\u5173\u7CFB\u4E3A\u5047\uFF0C\u5219\u7ED3\u679C\u4E3A <strong>false</strong>\u3002\u5173\u7CFB\u8FD0\u7B97\u7B26\u5305\u62EC\u5C0F\u4E8E <code>&lt;</code>\uFF0C\u5927\u4E8E <code>&gt;</code>\uFF0C\u5C0F\u4E8E\u6216\u7B49\u4E8E <code>&lt;=</code>\uFF0C\u5927\u4E8E\u6216\u7B49\u4E8E <code>&gt;=</code>\uFF0C\u7B49\u4E8E <code>==</code> \u548C\u4E0D\u7B49\u4E8E <code>\uFF01=</code>\u3002<code>==</code> \u548C <code>!=</code> \u53EF\u7528\u4E8E\u6240\u6709\u57FA\u672C\u7C7B\u578B\uFF0C\u4F46\u5176\u4ED6\u8FD0\u7B97\u7B26\u4E0D\u80FD\u7528\u4E8E\u57FA\u672C\u7C7B\u578B <strong>boolean</strong>\uFF0C\u56E0\u4E3A\u5E03\u5C14\u503C\u53EA\u80FD\u8868\u793A <strong>true</strong> \u6216 <strong>false</strong>\uFF0C\u6240\u4EE5\u6BD4\u8F83\u5B83\u4EEC\u4E4B\u95F4\u7684\u201C\u5927\u4E8E\u201D\u6216\u201C\u5C0F\u4E8E\u201D\u6CA1\u6709\u610F\u4E49\u3002</p><h3 id="\u6D4B\u8BD5\u5BF9\u8C61\u7B49\u4EF7" tabindex="-1"><a class="header-anchor" href="#\u6D4B\u8BD5\u5BF9\u8C61\u7B49\u4EF7" aria-hidden="true">#</a> \u6D4B\u8BD5\u5BF9\u8C61\u7B49\u4EF7</h3><p>\u5173\u7CFB\u8FD0\u7B97\u7B26 <code>==</code> \u548C <code>!=</code> \u540C\u6837\u9002\u7528\u4E8E\u6240\u6709\u5BF9\u8C61\u4E4B\u95F4\u7684\u6BD4\u8F83\u8FD0\u7B97\uFF0C\u4F46\u5B83\u4EEC\u6BD4\u8F83\u7684\u5185\u5BB9\u5374\u7ECF\u5E38\u56F0\u6270 Java \u7684\u521D\u5B66\u8005\u3002\u4E0B\u9762\u662F\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// operators/Equivalence.java</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Equivalence</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Integer</span> n1 <span class="token operator">=</span> <span class="token number">47</span><span class="token punctuation">;</span>
        <span class="token class-name">Integer</span> n2 <span class="token operator">=</span> <span class="token number">47</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>n1 <span class="token operator">==</span> n2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>n1 <span class="token operator">!=</span> n2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>true
false
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8868\u8FBE\u5F0F <code>System.out.println(n1 == n2)</code> \u5C06\u4F1A\u8F93\u51FA\u6BD4\u8F83\u7684\u7ED3\u679C\u3002\u56E0\u4E3A\u4E24\u4E2A <strong>Integer</strong> \u5BF9\u8C61\u76F8\u540C\uFF0C\u6240\u4EE5\u5148\u8F93\u51FA <strong>true</strong>\uFF0C\u518D\u8F93\u51FA <strong>false</strong>\u3002\u4F46\u662F\uFF0C\u5C3D\u7BA1\u5BF9\u8C61\u7684\u5185\u5BB9\u4E00\u6837\uFF0C\u5BF9\u8C61\u7684\u5F15\u7528\u5374\u4E0D\u4E00\u6837\u3002<code>==</code> \u548C <code>!=</code> \u6BD4\u8F83\u7684\u662F\u5BF9\u8C61\u5F15\u7528\uFF0C\u6240\u4EE5\u8F93\u51FA\u5B9E\u9645\u4E0A\u5E94\u8BE5\u662F\u5148\u8F93\u51FA <strong>false</strong>\uFF0C\u518D\u8F93\u51FA <strong>true</strong>\uFF08\u8BD1\u8005\u6CE8\uFF1A\u5982\u679C\u4F60\u628A 47 \u6539\u6210 128\uFF0C\u90A3\u4E48\u6253\u5370\u7684\u7ED3\u679C\u5C31\u662F\u8FD9\u6837\uFF0C\u56E0\u4E3A Integer \u5185\u90E8\u7EF4\u62A4\u7740\u4E00\u4E2A IntegerCache \u7684\u7F13\u5B58\uFF0C\u9ED8\u8BA4\u7F13\u5B58\u8303\u56F4\u662F [-128, 127]\uFF0C\u6240\u4EE5 [-128, 127] \u4E4B\u95F4\u7684\u503C\u7528 <code>==</code> \u548C <code>!=</code> \u6BD4\u8F83\u4E5F\u80FD\u80FD\u5230\u6B63\u786E\u7684\u7ED3\u679C\uFF0C\u4F46\u662F\u4E0D\u63A8\u8350\u7528\u5173\u7CFB\u8FD0\u7B97\u7B26\u6BD4\u8F83\uFF0C\u5177\u4F53\u89C1 JDK \u4E2D\u7684 Integer \u7C7B\u6E90\u7801\uFF09\u3002</p><p>\u90A3\u4E48\u600E\u4E48\u6BD4\u8F83\u4E24\u4E2A\u5BF9\u8C61\u7684\u5185\u5BB9\u662F\u5426\u76F8\u540C\u5462\uFF1F\u4F60\u5FC5\u987B\u4F7F\u7528\u6240\u6709\u5BF9\u8C61\uFF08\u4E0D\u5305\u62EC\u57FA\u672C\u7C7B\u578B\uFF09\u4E2D\u90FD\u5B58\u5728\u7684 <code>equals()</code> \u65B9\u6CD5\uFF0C\u4E0B\u9762\u662F\u5982\u4F55\u4F7F\u7528 <code>equals()</code> \u65B9\u6CD5\u7684\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// operators/EqualsMethod.java</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EqualsMethod</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Integer</span> n1 <span class="token operator">=</span> <span class="token number">47</span><span class="token punctuation">;</span>
        <span class="token class-name">Integer</span> n2 <span class="token operator">=</span> <span class="token number">47</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>n1<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>n2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token boolean">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4E0A\u4F8B\u7684\u7ED3\u679C\u770B\u8D77\u6765\u662F\u6211\u4EEC\u6240\u671F\u671B\u7684\u3002\u4F46\u5176\u5B9E\u4E8B\u60C5\u5E76\u975E\u90A3\u4E48\u7B80\u5355\u3002\u4E0B\u9762\u6211\u4EEC\u6765\u521B\u5EFA\u81EA\u5DF1\u7684\u7C7B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// operators/EqualsMethod2.java</span>
<span class="token comment">// \u9ED8\u8BA4\u7684 equals() \u65B9\u6CD5\u6CA1\u6709\u6BD4\u8F83\u5185\u5BB9</span>
<span class="token keyword">class</span> <span class="token class-name">Value</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> i<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EqualsMethod2</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Value</span> v1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Value</span> v2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        v1<span class="token punctuation">.</span>i <span class="token operator">=</span> v2<span class="token punctuation">.</span>i <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>v1<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>v2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token boolean">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,39),j=n("\u4E0A\u4F8B\u7684\u7ED3\u679C\u518D\u6B21\u4EE4\u4EBA\u56F0\u60D1\uFF1A\u7ED3\u679C\u662F "),S=s("strong",null,"false",-1),_=n("\u3002\u539F\u56E0\uFF1A "),B=s("code",null,"equals()",-1),I=n(" \u7684\u9ED8\u8BA4\u884C\u4E3A\u662F\u6BD4\u8F83\u5BF9\u8C61\u7684\u5F15\u7528\u800C\u975E\u5177\u4F53\u5185\u5BB9\u3002\u56E0\u6B64\uFF0C\u9664\u975E\u4F60\u5728\u65B0\u7C7B\u4E2D\u8986\u5199 "),C=s("code",null,"equals()",-1),J=n(" \u65B9\u6CD5\uFF0C\u5426\u5219\u6211\u4EEC\u5C06\u83B7\u53D6\u4E0D\u5230\u60F3\u8981\u7684\u7ED3\u679C\u3002\u4E0D\u5E78\u7684\u662F\uFF0C\u5728\u5B66\u4E60 "),L=n("\u590D\u7528"),R=n("\uFF08"),T=s("strong",null,"Reuse",-1),M=n("\uFF09 \u7AE0\u8282\u540E\u6211\u4EEC\u624D\u80FD\u63A5\u89E6\u5230\u201C\u8986\u5199\u201D\uFF08"),O=s("strong",null,"Override",-1),E=n("\uFF09\uFF0C\u5E76\u4E14\u76F4\u5230 "),z=n("\u9644\u5F55:\u96C6\u5408\u4E3B\u9898"),A=n("\uFF0C\u624D\u80FD\u77E5\u9053\u5B9A\u4E49 "),N=s("code",null,"equals()",-1),F=n(" \u65B9\u6CD5\u7684\u6B63\u786E\u65B9\u5F0F\uFF0C\u4F46\u662F\u73B0\u5728\u660E\u767D "),D=s("code",null,"equals()",-1),V=n(" \u884C\u4E3A\u65B9\u5F0F\u4E5F\u53EF\u80FD\u4E3A\u4F60\u8282\u7701\u4E00\u4E9B\u65F6\u95F4\u3002"),P=o(`<p>\u5927\u591A\u6570 Java \u5E93\u7C7B\u901A\u8FC7\u8986\u5199 <code>equals()</code> \u65B9\u6CD5\u6BD4\u8F83\u5BF9\u8C61\u7684\u5185\u5BB9\u800C\u4E0D\u662F\u5176\u5F15\u7528\u3002</p><h2 id="\u903B\u8F91\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#\u903B\u8F91\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> \u903B\u8F91\u8FD0\u7B97\u7B26</h2><p>\u6BCF\u4E2A\u903B\u8F91\u8FD0\u7B97\u7B26 <code>&amp;&amp;</code> \uFF08<strong>AND</strong>\uFF09\u3001<code>||</code>\uFF08<strong>OR</strong>\uFF09\u548C <code>!</code>\uFF08<strong>\u975E</strong>\uFF09\u6839\u636E\u53C2\u6570\u7684\u903B\u8F91\u5173\u7CFB\u751F\u6210\u5E03\u5C14\u503C <code>true</code> \u6216 <code>false</code>\u3002\u4E0B\u9762\u7684\u4EE3\u7801\u793A\u4F8B\u4F7F\u7528\u4E86\u5173\u7CFB\u8FD0\u7B97\u7B26\u548C\u903B\u8F91\u8FD0\u7B97\u7B26\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// operators/Bool.java</span>
<span class="token comment">// \u5173\u7CFB\u8FD0\u7B97\u7B26\u548C\u903B\u8F91\u8FD0\u7B97\u7B26</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Bool</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Random</span> rand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token number">47</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> rand<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> j <span class="token operator">=</span> rand<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;i = &quot;</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;j = &quot;</span> <span class="token operator">+</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;i &gt; j is &quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;i &lt; j is &quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;i &gt;= j is &quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;=</span> j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;i &lt;= j is &quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;i == j is &quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;i != j is &quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>i <span class="token operator">!=</span> j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u5C06 int \u4F5C\u4E3A\u5E03\u5C14\u5904\u7406\u4E0D\u662F\u5408\u6CD5\u7684 Java \u5199\u6CD5</span>
        <span class="token comment">//- System.out.println(&quot;i &amp;&amp; j is &quot; + (i &amp;&amp; j));</span>
        <span class="token comment">//- System.out.println(&quot;i || j is &quot; + (i || j));</span>
        <span class="token comment">//- System.out.println(&quot;!i is &quot; + !i);</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;(i &lt; 10) &amp;&amp; (j &lt; 10) is &quot;</span>
        <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>j <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;(i &lt; 10) || (j &lt; 10) is &quot;</span>
        <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>j <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>i = 58
j = 55
i &gt; j is true
i &lt; j is false
i &gt;= j is true
i &lt;= j is false
i == j is false
i != j is true
(i &lt; 10) &amp;&amp; (j &lt; 10) is false
(i &lt; 10) || (j &lt; 10) is false
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728 Java \u903B\u8F91\u8FD0\u7B97\u4E2D\uFF0C\u6211\u4EEC\u4E0D\u80FD\u50CF C/C++ \u90A3\u6837\u4F7F\u7528\u975E\u5E03\u5C14\u503C\uFF0C \u800C\u4EC5\u80FD\u4F7F\u7528 <strong>AND</strong>\u3001 <strong>OR</strong>\u3001 <strong>NOT</strong>\u3002\u4E0A\u9762\u7684\u4F8B\u5B50\u4E2D\uFF0C\u6211\u4EEC\u5C06\u4F7F\u7528\u975E\u5E03\u5C14\u503C\u7684\u8868\u8FBE\u5F0F\u6CE8\u91CA\u6389\u4E86\uFF08\u4F60\u53EF\u4EE5\u770B\u5230\u8868\u8FBE\u5F0F\u524D\u9762\u662F //-\uFF09\u3002\u4F46\u662F\uFF0C\u540E\u7EED\u7684\u8868\u8FBE\u5F0F\u4F7F\u7528\u5173\u7CFB\u6BD4\u8F83\u751F\u6210\u5E03\u5C14\u503C\uFF0C\u7136\u540E\u5BF9\u7ED3\u679C\u4F7F\u7528\u4E86\u903B\u8F91\u8FD0\u7B97\u3002\u8BF7\u6CE8\u610F\uFF0C\u5982\u679C\u5728\u9884\u671F\u4E3A <strong>String</strong> \u7C7B\u578B\u7684\u4F4D\u7F6E\u4F7F\u7528 <strong>boolean</strong> \u7C7B\u578B\u7684\u503C\uFF0C\u5219\u7ED3\u679C\u4F1A\u81EA\u52A8\u8F6C\u4E3A\u9002\u5F53\u7684\u6587\u672C\u683C\u5F0F\uFF08\u5373 &quot;true&quot; \u6216 &quot;false&quot; \u5B57\u7B26\u4E32\uFF09\u3002</p><p>\u6211\u4EEC\u53EF\u4EE5\u5C06\u524D\u4E00\u4E2A\u7A0B\u5E8F\u4E2D <strong>int</strong> \u7684\u5B9A\u4E49\u66FF\u6362\u4E3A\u9664 <strong>boolean</strong> \u4E4B\u5916\u7684\u4EFB\u4F55\u5176\u4ED6\u57FA\u672C\u6570\u636E\u7C7B\u578B\u3002\u4F46\u8BF7\u6CE8\u610F\uFF0C<strong>float</strong> \u7C7B\u578B\u7684\u6570\u503C\u6BD4\u8F83\u975E\u5E38\u4E25\u683C\uFF0C\u53EA\u8981\u4E24\u4E2A\u6570\u5B57\u7684\u6700\u5C0F\u4F4D\u4E0D\u540C\u5219\u4E24\u4E2A\u6570\u4ECD\u7136\u4E0D\u76F8\u7B49\uFF1B\u53EA\u8981\u6570\u5B57\u6700\u5C0F\u4F4D\u662F\u5927\u4E8E 0 \u7684\uFF0C\u90A3\u4E48\u5B83\u5C31\u4E0D\u7B49\u4E8E 0\u3002</p><h3 id="\u77ED\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u77ED\u8DEF" aria-hidden="true">#</a> \u77ED\u8DEF</h3><p>\u903B\u8F91\u8FD0\u7B97\u7B26\u652F\u6301\u4E00\u79CD\u79F0\u4E3A\u201C\u77ED\u8DEF\u201D\uFF08short-circuiting\uFF09\u7684\u73B0\u8C61\u3002\u6574\u4E2A\u8868\u8FBE\u5F0F\u4F1A\u5728\u8FD0\u7B97\u5230\u53EF\u4EE5\u660E\u786E\u7ED3\u679C\u65F6\u5C31\u505C\u6B62\u5E76\u8FD4\u56DE\u7ED3\u679C\uFF0C\u8FD9\u610F\u5473\u7740\u8BE5\u903B\u8F91\u8868\u8FBE\u5F0F\u7684\u540E\u534A\u90E8\u5206\u4E0D\u4F1A\u88AB\u6267\u884C\u5230\u3002\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// operators / ShortCircuit.java </span>
<span class="token comment">// \u903B\u8F91\u8FD0\u7B97\u7B26\u7684\u77ED\u8DEF\u884C\u4E3A</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ShortCircuit</span> <span class="token punctuation">{</span>

    <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token keyword">int</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test1(&quot;</span> <span class="token operator">+</span> val <span class="token operator">+</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;result: &quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>val <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> val <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token keyword">int</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test2(&quot;</span> <span class="token operator">+</span> val <span class="token operator">+</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;result: &quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>val <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> val <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">test3</span><span class="token punctuation">(</span><span class="token keyword">int</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;test3(&quot;</span> <span class="token operator">+</span> val <span class="token operator">+</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;result: &quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>val <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> val <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">boolean</span> b <span class="token operator">=</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">test3</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;expression is &quot;</span> <span class="token operator">+</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>test1(0)
result: true
test2(2)
result: false
expression is false
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6BCF\u4E2A\u6D4B\u8BD5\u90FD\u5BF9\u53C2\u6570\u6267\u884C\u6BD4\u8F83\u5E76\u8FD4\u56DE <code>true</code> \u6216 <code>false</code>\u3002\u540C\u65F6\u63A7\u5236\u53F0\u4E5F\u4F1A\u5728\u65B9\u6CD5\u6267\u884C\u65F6\u6253\u5370\u4ED6\u4EEC\u7684\u6267\u884C\u72B6\u6001\u3002 \u4E0B\u9762\u7684\u8868\u8FBE\u5F0F\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>test1\uFF08<span class="token number">0</span>\uFF09<span class="token operator">&amp;&amp;</span> test2\uFF08<span class="token number">2</span>\uFF09<span class="token operator">&amp;&amp;</span> test3\uFF08<span class="token number">2</span>\uFF09
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u53EF\u80FD\u4F60\u7684\u9884\u671F\u662F\u7A0B\u5E8F\u4F1A\u6267\u884C 3 \u4E2A <strong>test</strong> \u65B9\u6CD5\u5E76\u8FD4\u56DE\u3002\u6211\u4EEC\u6765\u5206\u6790\u4E00\u4E0B\uFF1A\u7B2C\u4E00\u4E2A\u65B9\u6CD5\u7684\u7ED3\u679C\u8FD4\u56DE <code>true</code>\uFF0C\u56E0\u6B64\u8868\u8FBE\u5F0F\u4F1A\u7EE7\u7EED\u8D70\u4E0B\u53BB\u3002\u7D27\u63A5\u7740\uFF0C\u7B2C\u4E8C\u4E2A\u65B9\u6CD5\u7684\u8FD4\u56DE\u7ED3\u679C\u662F <code>false</code>\u3002\u8FD9\u5C31\u4EE3\u8868\u8FD9\u6574\u4E2A\u8868\u8FBE\u5F0F\u7684\u7ED3\u679C\u80AF\u5B9A\u4E3A <code>false</code>\uFF0C\u6240\u4EE5\u5C31\u6CA1\u6709\u5FC5\u8981\u518D\u5224\u65AD\u5269\u4E0B\u7684\u8868\u8FBE\u5F0F\u90E8\u5206\u4E86\u3002</p><p>\u6240\u4EE5\uFF0C\u8FD0\u7528\u201C\u77ED\u8DEF\u201D\u53EF\u4EE5\u8282\u7701\u90E8\u5206\u4E0D\u5FC5\u8981\u7684\u8FD0\u7B97\uFF0C\u4ECE\u800C\u63D0\u9AD8\u7A0B\u5E8F\u6F5C\u5728\u7684\u6027\u80FD\u3002</p><h2 id="\u5B57\u9762\u503C\u5E38\u91CF" tabindex="-1"><a class="header-anchor" href="#\u5B57\u9762\u503C\u5E38\u91CF" aria-hidden="true">#</a> \u5B57\u9762\u503C\u5E38\u91CF</h2><p>\u901A\u5E38\uFF0C\u5F53\u6211\u4EEC\u5411\u7A0B\u5E8F\u4E2D\u63D2\u5165\u4E00\u4E2A\u5B57\u9762\u503C\u5E38\u91CF\uFF08<strong>Literal</strong>\uFF09\u65F6\uFF0C\u7F16\u8BD1\u5668\u4F1A\u786E\u5207\u5730\u8BC6\u522B\u5B83\u7684\u7C7B\u578B\u3002\u5F53\u7C7B\u578B\u4E0D\u660E\u786E\u65F6\uFF0C\u5FC5\u987B\u8F85\u4EE5\u5B57\u9762\u503C\u5E38\u91CF\u5173\u8054\u6765\u5E2E\u52A9\u7F16\u8BD1\u5668\u8BC6\u522B\u3002\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// operators/Literals.java</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Literals</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> i1 <span class="token operator">=</span> <span class="token number">0x2f</span><span class="token punctuation">;</span> <span class="token comment">// 16\u8FDB\u5236 (\u5C0F\u5199)</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
        <span class="token string">&quot;i1: &quot;</span> <span class="token operator">+</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span>i1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> i2 <span class="token operator">=</span> <span class="token number">0X2F</span><span class="token punctuation">;</span> <span class="token comment">// 16\u8FDB\u5236 (\u5927\u5199)</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
        <span class="token string">&quot;i2: &quot;</span> <span class="token operator">+</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span>i2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> i3 <span class="token operator">=</span> <span class="token number">0177</span><span class="token punctuation">;</span> <span class="token comment">// 8\u8FDB\u5236 (\u524D\u5BFC0)</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
        <span class="token string">&quot;i3: &quot;</span> <span class="token operator">+</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span>i3<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">char</span> c <span class="token operator">=</span> <span class="token number">0xffff</span><span class="token punctuation">;</span> <span class="token comment">// \u6700\u5927 char \u578B16\u8FDB\u5236\u503C</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
        <span class="token string">&quot;c: &quot;</span> <span class="token operator">+</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">byte</span> b <span class="token operator">=</span> <span class="token number">0x7f</span><span class="token punctuation">;</span> <span class="token comment">// \u6700\u5927 byte \u578B16\u8FDB\u5236\u503C  01111111;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
        <span class="token string">&quot;b: &quot;</span> <span class="token operator">+</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">short</span> s <span class="token operator">=</span> <span class="token number">0x7fff</span><span class="token punctuation">;</span> <span class="token comment">// \u6700\u5927 short \u578B16\u8FDB\u5236\u503C</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
        <span class="token string">&quot;s: &quot;</span> <span class="token operator">+</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> n1 <span class="token operator">=</span> <span class="token number">200L</span><span class="token punctuation">;</span> <span class="token comment">// long \u578B\u540E\u7F00</span>
        <span class="token keyword">long</span> n2 <span class="token operator">=</span> <span class="token number">200l</span><span class="token punctuation">;</span> <span class="token comment">// long \u578B\u540E\u7F00 (\u5BB9\u6613\u4E0E\u6570\u503C1\u6DF7\u6DC6)</span>
        <span class="token keyword">long</span> n3 <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>
    
        <span class="token comment">// Java 7 \u4E8C\u8FDB\u5236\u5B57\u9762\u503C\u5E38\u91CF:</span>
        <span class="token keyword">byte</span> blb <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span><span class="token number">0b00110101</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
        <span class="token string">&quot;blb: &quot;</span> <span class="token operator">+</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span>blb<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">short</span> bls <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span><span class="token number">0B0010111110101111</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
        <span class="token string">&quot;bls: &quot;</span> <span class="token operator">+</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span>bls<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> bli <span class="token operator">=</span> <span class="token number">0b00101111101011111010111110101111</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
        <span class="token string">&quot;bli: &quot;</span> <span class="token operator">+</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span>bli<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> bll <span class="token operator">=</span> <span class="token number">0b00101111101011111010111110101111</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
        <span class="token string">&quot;bll: &quot;</span> <span class="token operator">+</span> <span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span>bll<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">float</span> f1 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">float</span> f2 <span class="token operator">=</span> <span class="token number">1F</span><span class="token punctuation">;</span> <span class="token comment">// float \u578B\u540E\u7F00</span>
        <span class="token keyword">float</span> f3 <span class="token operator">=</span> <span class="token number">1f</span><span class="token punctuation">;</span> <span class="token comment">// float \u578B\u540E\u7F00</span>
        <span class="token keyword">double</span> d1 <span class="token operator">=</span> <span class="token number">1d</span><span class="token punctuation">;</span> <span class="token comment">// double \u578B\u540E\u7F00</span>
        <span class="token keyword">double</span> d2 <span class="token operator">=</span> <span class="token number">1D</span><span class="token punctuation">;</span> <span class="token comment">// double \u578B\u540E\u7F00</span>
        <span class="token comment">// (long \u578B\u7684\u5B57\u9762\u503C\u540C\u6837\u9002\u7528\u4E8E\u5341\u516D\u8FDB\u5236\u548C8\u8FDB\u5236 )</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>i1: 101111
i2: 101111
i3: 1111111
c: 1111111111111111
b: 1111111
s: 111111111111111
blb: 110101
bls: 10111110101111
bli: 101111101011111010111110101111
bll: 101111101011111010111110101111
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u6587\u672C\u503C\u7684\u540E\u9762\u6DFB\u52A0\u5B57\u7B26\u53EF\u4EE5\u8BA9\u7F16\u8BD1\u5668\u8BC6\u522B\u8BE5\u6587\u672C\u503C\u7684\u7C7B\u578B\u3002\u5BF9\u4E8E <strong>Long</strong> \u578B\u6570\u503C\uFF0C\u7ED3\u5C3E\u4F7F\u7528\u5927\u5199 <code>L</code> \u6216\u5C0F\u5199 <code>l</code> \u7686\u53EF\uFF08\u4E0D\u63A8\u8350\u4F7F\u7528 <code>l</code>\uFF0C\u56E0\u4E3A\u5BB9\u6613\u4E0E\u963F\u62C9\u4F2F\u6570\u503C 1 \u6DF7\u6DC6\uFF09\u3002\u5927\u5199 <code>F</code> \u6216\u5C0F\u5199 <code>f</code> \u8868\u793A <strong>float</strong> \u6D6E\u70B9\u6570\u3002\u5927\u5199 <code>D</code> \u6216\u5C0F\u5199 <code>d</code> \u8868\u793A <strong>double</strong> \u53CC\u7CBE\u5EA6\u3002</p><p>\u5341\u516D\u8FDB\u5236\uFF08\u4EE5 16 \u4E3A\u57FA\u6570\uFF09\uFF0C\u9002\u7528\u4E8E\u6240\u6709\u6574\u578B\u6570\u636E\u7C7B\u578B\uFF0C\u7531\u524D\u5BFC <code>0x</code> \u6216 <code>0X</code> \u8868\u793A\uFF0C\u540E\u8DDF 0-9 \u6216 a-f \uFF08\u5927\u5199\u6216\u5C0F\u5199\uFF09\u3002\u5982\u679C\u6211\u4EEC\u5728\u521D\u59CB\u5316\u67D0\u4E2A\u7C7B\u578B\u7684\u6570\u503C\u65F6\uFF0C\u8D4B\u503C\u8D85\u51FA\u5176\u8303\u56F4\uFF0C\u90A3\u4E48\u7F16\u8BD1\u5668\u4F1A\u62A5\u9519\uFF08\u4E0D\u7BA1\u503C\u7684\u6570\u5B57\u5F62\u5F0F\u5982\u4F55\uFF09\u3002\u5728\u4E0A\u4F8B\u7684\u4EE3\u7801\u4E2D\uFF0C<strong>char</strong>\u3001<strong>byte</strong> \u548C <strong>short</strong> \u7684\u503C\u5DF2\u7ECF\u662F\u6700\u5927\u4E86\u3002\u5982\u679C\u8D85\u8FC7\u8FD9\u4E9B\u503C\uFF0C\u7F16\u8BD1\u5668\u5C06\u81EA\u52A8\u8F6C\u578B\u4E3A <strong>int</strong>\uFF0C\u5E76\u4E14\u63D0\u793A\u6211\u4EEC\u9700\u8981\u58F0\u660E\u5F3A\u5236\u8F6C\u6362\uFF08\u5F3A\u5236\u8F6C\u6362\u5C06\u5728\u672C\u7AE0\u540E\u9762\u5B9A\u4E49\uFF09\uFF0C\u610F\u5473\u7740\u6211\u4EEC\u5DF2\u8D8A\u8FC7\u8BE5\u7C7B\u578B\u7684\u8303\u56F4\u754C\u9650\u3002</p><p>\u516B\u8FDB\u5236\uFF08\u4EE5 8 \u4E3A\u57FA\u6570\uFF09\u7531 0~7 \u4E4B\u95F4\u7684\u6570\u5B57\u548C\u524D\u5BFC\u96F6 <code>0</code> \u8868\u793A\u3002</p><p>Java 7 \u5F15\u5165\u4E86\u4E8C\u8FDB\u5236\u7684\u5B57\u9762\u503C\u5E38\u91CF\uFF0C\u7531\u524D\u5BFC <code>0b</code> \u6216 <code>0B</code> \u8868\u793A\uFF0C\u5B83\u53EF\u4EE5\u521D\u59CB\u5316\u6240\u6709\u7684\u6574\u6570\u7C7B\u578B\u3002</p><p>\u4F7F\u7528\u6574\u578B\u6570\u503C\u7C7B\u578B\u65F6\uFF0C\u663E\u793A\u5176\u4E8C\u8FDB\u5236\u5F62\u5F0F\u4F1A\u5F88\u6709\u7528\u3002\u5728 Long \u578B\u548C Integer \u578B\u4E2D\u8FD9\u5F88\u5BB9\u6613\u5B9E\u73B0\uFF0C\u8C03\u7528\u5176\u9759\u6001\u7684 <code>toBinaryString()</code> \u65B9\u6CD5\u5373\u53EF\u3002 \u4F46\u662F\u8BF7\u6CE8\u610F\uFF0C\u82E5\u5C06\u8F83\u5C0F\u7684\u7C7B\u578B\u4F20\u9012\u7ED9 <strong>Integer.</strong><code>toBinaryString()</code> \u65F6\uFF0C\u7C7B\u578B\u5C06\u81EA\u52A8\u8F6C\u6362\u4E3A <strong>int</strong>\u3002</p><h3 id="\u4E0B\u5212\u7EBF" tabindex="-1"><a class="header-anchor" href="#\u4E0B\u5212\u7EBF" aria-hidden="true">#</a> \u4E0B\u5212\u7EBF</h3><p>Java 7 \u4E2D\u6709\u4E00\u4E2A\u6DF1\u601D\u719F\u8651\u7684\u8865\u5145\uFF1A\u6211\u4EEC\u53EF\u4EE5\u5728\u6570\u5B57\u5B57\u9762\u91CF\u4E2D\u5305\u542B\u4E0B\u5212\u7EBF <code>_</code>\uFF0C\u4EE5\u4F7F\u7ED3\u679C\u66F4\u6E05\u6670\u3002\u8FD9\u5BF9\u4E8E\u5927\u6570\u503C\u7684\u5206\u7EC4\u7279\u522B\u6709\u7528\u3002\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// operators/Underscores.java</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Underscores</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">double</span> d <span class="token operator">=</span> <span class="token number">341_435_936.445_667</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> bin <span class="token operator">=</span> <span class="token number">0b0010_1111_1010_1111_1010_1111_1010_1111</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span>bin<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%x%n&quot;</span><span class="token punctuation">,</span> bin<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1]</span>
        <span class="token keyword">long</span> hex <span class="token operator">=</span> <span class="token number">0x7f_e9_b7_aa</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%x%n&quot;</span><span class="token punctuation">,</span> hex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>3.41435936445667E8
101111101011111010111110101111
2fafafaf
7fe9b7aa
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u662F\u5408\u7406\u4F7F\u7528\u7684\u89C4\u5219\uFF1A</p><ol><li>\u4EC5\u9650\u5355 <code>_</code>\uFF0C\u4E0D\u80FD\u591A\u6761\u76F8\u8FDE\u3002</li><li>\u6570\u503C\u5F00\u5934\u548C\u7ED3\u5C3E\u4E0D\u5141\u8BB8\u51FA\u73B0 <code>_</code>\u3002</li><li><code>F</code>\u3001<code>D</code> \u548C <code>L</code>\u7684\u524D\u540E\u7981\u6B62\u51FA\u73B0 <code>_</code>\u3002</li><li>\u4E8C\u8FDB\u5236\u524D\u5BFC <code>b</code> \u548C \u5341\u516D\u8FDB\u5236 <code>x</code> \u524D\u540E\u7981\u6B62\u51FA\u73B0 <code>_</code>\u3002</li></ol><p>[1] \u6CE8\u610F <code>%n</code>\u7684\u4F7F\u7528\u3002\u719F\u6089 C \u98CE\u683C\u7684\u7A0B\u5E8F\u5458\u53EF\u80FD\u4E60\u60EF\u4E8E\u770B\u5230 <code>\\n</code> \u6765\u8868\u793A\u6362\u884C\u7B26\u3002\u95EE\u9898\u5728\u4E8E\u5B83\u7ED9\u4F60\u7684\u662F\u4E00\u4E2A\u201CUnix\u98CE\u683C\u201D\u7684\u6362\u884C\u7B26\u3002\u6B64\u5916\uFF0C\u5982\u679C\u6211\u4EEC\u4F7F\u7528\u7684\u662F Windows\uFF0C\u5219\u5FC5\u987B\u6307\u5B9A <code>\\r\\n</code>\u3002\u8FD9\u79CD\u5DEE\u5F02\u7684\u5305\u88B1\u5E94\u8BE5\u7531\u7F16\u7A0B\u8BED\u8A00\u6765\u89E3\u51B3\u3002\u8FD9\u5C31\u662F Java \u7528 <code>%n</code> \u5B9E\u73B0\u7684\u53EF\u4EE5\u5FFD\u7565\u5E73\u53F0\u95F4\u5DEE\u5F02\u800C\u751F\u6210\u9002\u5F53\u7684\u6362\u884C\u7B26\uFF0C\u4F46\u53EA\u6709\u5F53\u4F60\u4F7F\u7528 <code>System.out.printf()</code> \u6216 <code>System.out.format()</code> \u65F6\u3002\u5BF9\u4E8E <code>System.out.println()</code>\uFF0C\u6211\u4EEC\u4ECD\u7136\u5FC5\u987B\u4F7F\u7528 <code>\\n</code>\uFF1B\u5982\u679C\u4F60\u4F7F\u7528 <code>%n</code>\uFF0C<code>println()</code> \u53EA\u4F1A\u8F93\u51FA <code>%n</code> \u800C\u4E0D\u662F\u6362\u884C\u7B26\u3002</p><h3 id="\u6307\u6570\u8BA1\u6570\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u6307\u6570\u8BA1\u6570\u6CD5" aria-hidden="true">#</a> \u6307\u6570\u8BA1\u6570\u6CD5</h3><p>\u6307\u6570\u603B\u662F\u91C7\u7528\u4E00\u79CD\u6211\u8BA4\u4E3A\u5F88\u4E0D\u76F4\u89C2\u7684\u8BB0\u53F7\u65B9\u6CD5:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// operators/Exponents.java</span>
<span class="token comment">// &quot;e&quot; \u8868\u793A 10 \u7684\u51E0\u6B21\u5E42</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Exponents</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5927\u5199 E \u548C\u5C0F\u5199 e \u7684\u6548\u679C\u76F8\u540C:</span>
        <span class="token keyword">float</span> expFloat <span class="token operator">=</span> <span class="token number">1.39e-43f</span><span class="token punctuation">;</span>
        expFloat <span class="token operator">=</span> <span class="token number">1.39E-43f</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>expFloat<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">double</span> expDouble <span class="token operator">=</span> <span class="token number">47e47d</span><span class="token punctuation">;</span> <span class="token comment">// &#39;d&#39; \u662F\u53EF\u9009\u7684</span>
        <span class="token keyword">double</span> expDouble2 <span class="token operator">=</span> <span class="token number">47e47</span><span class="token punctuation">;</span> <span class="token comment">// \u81EA\u52A8\u8F6C\u6362\u4E3A double</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>expDouble<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>1.39E-43
4.7E48
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u79D1\u5B66\u4E0E\u5DE5\u7A0B\u5B66\u9886\u57DF\uFF0C<strong>e</strong> \u4EE3\u8868\u81EA\u7136\u5BF9\u6570\u7684\u57FA\u6570\uFF0C\u7EA6\u7B49\u4E8E 2.718 \uFF08Java \u91CC\u7528\u4E00\u79CD\u66F4\u7CBE\u786E\u7684 <strong>double</strong> \u503C <strong>Math.E</strong> \u6765\u8868\u793A\u81EA\u7136\u5BF9\u6570\uFF09\u3002\u6307\u6570\u8868\u8FBE\u5F0F &quot;1.39 x e-43&quot;\uFF0C\u610F\u5473\u7740 \u201C1.39 \xD7 2.718 \u7684 -43 \u6B21\u65B9\u201D\u3002\u7136\u800C\uFF0C\u81EA FORTRAN \u8BED\u8A00\u53D1\u660E\u540E\uFF0C\u4EBA\u4EEC\u81EA\u7136\u800C\u7136\u5730\u89C9\u5F97e \u4EE3\u8868 \u201C10 \u7684\u51E0\u6B21\u5E42\u201D\u3002\u8FD9\u79CD\u505A\u6CD5\u663E\u5F97\u9887\u4E3A\u53E4\u602A\uFF0C\u56E0\u4E3A FORTRAN \u6700\u521D\u662F\u4E3A\u79D1\u5B66\u4E0E\u5DE5\u7A0B\u9886\u57DF\u8BBE\u8BA1\u7684\u3002</p><p>\u7406\u6240\u5F53\u7136\uFF0C\u5B83\u7684\u8BBE\u8BA1\u8005\u5E94\u5BF9\u8FD9\u6837\u7684\u6DF7\u6DC6\u6982\u5FF5\u6301\u8C28\u614E\u6001\u5EA6 [^2]\u3002\u4F46\u4E0D\u7BA1\u600E\u6837\uFF0C\u8FD9\u79CD\u7279\u522B\u7684\u8868\u8FBE\u65B9\u6CD5\u5728 C\uFF0CC++ \u4EE5\u53CA\u73B0\u5728\u7684 Java \u4E2D\u987D\u56FA\u5730\u4FDD\u7559\u4E0B\u6765\u4E86\u3002\u6240\u4EE5\u5018\u82E5\u4E60\u60EF e \u4F5C\u4E3A\u81EA\u7136\u5BF9\u6570\u7684\u57FA\u6570\u4F7F\u7528\uFF0C\u90A3\u4E48\u5728 Java \u4E2D\u770B\u5230\u7C7B\u4F3C\u201C1.39e-43f\u201D\u8FD9\u6837\u7684\u8868\u8FBE\u5F0F\u65F6\uFF0C\u8BF7\u8F6C\u6362\u4F60\u7684\u601D\u7EF4\uFF0C\u4ECE\u7A0B\u5E8F\u8BBE\u8BA1\u7684\u89D2\u5EA6\u601D\u8003\u5B83\uFF1B\u5B83\u771F\u6B63\u7684\u542B\u4E49\u662F \u201C1.39 \xD7 10 \u7684 -43 \u6B21\u65B9\u201D\u3002</p><p>\u6CE8\u610F\u5982\u679C\u7F16\u8BD1\u5668\u80FD\u591F\u6B63\u786E\u5730\u8BC6\u522B\u7C7B\u578B\uFF0C\u5C31\u4E0D\u5FC5\u4F7F\u7528\u540E\u7F00\u5B57\u7B26\u3002\u5BF9\u4E8E\u4E0B\u8FF0\u8BED\u53E5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">long</span> n3 <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5B83\u5E76\u4E0D\u5B58\u5728\u542B\u7CCA\u4E0D\u6E05\u7684\u5730\u65B9\uFF0C\u6240\u4EE5 200 \u540E\u9762\u7684 L \u5927\u53EF\u7701\u53BB\u3002\u7136\u800C\uFF0C\u5BF9\u4E8E\u4E0B\u8FF0\u8BED\u53E5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">float</span> f4 <span class="token operator">=</span> <span class="token number">1e-43f</span><span class="token punctuation">;</span> <span class="token comment">//10 \u7684\u5E42\u6570</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u7F16\u8BD1\u5668\u901A\u5E38\u4F1A\u5C06\u6307\u6570\u4F5C\u4E3A <strong>double</strong> \u7C7B\u578B\u6765\u5904\u7406\uFF0C\u6240\u4EE5\u5047\u82E5\u6CA1\u6709\u8FD9\u4E2A\u540E\u7F00\u5B57\u7B26 <code>f</code>\uFF0C\u7F16\u8BD1\u5668\u5C31\u4F1A\u62A5\u9519\uFF0C\u63D0\u793A\u6211\u4EEC\u5E94\u8BE5\u5C06 <strong>double</strong> \u578B\u8F6C\u6362\u6210 <strong>float</strong> \u578B\u3002</p><h2 id="\u4F4D\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#\u4F4D\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> \u4F4D\u8FD0\u7B97\u7B26</h2><p>\u4F4D\u8FD0\u7B97\u7B26\u5141\u8BB8\u6211\u4EEC\u64CD\u4F5C\u4E00\u4E2A\u6574\u578B\u6570\u5B57\u4E2D\u7684\u5355\u4E2A\u4E8C\u8FDB\u5236\u4F4D\u3002\u4F4D\u8FD0\u7B97\u7B26\u4F1A\u5BF9\u4E24\u4E2A\u6574\u6570\u5BF9\u5E94\u7684\u4F4D\u6267\u884C\u5E03\u5C14\u4EE3\u6570\uFF0C\u4ECE\u800C\u4EA7\u751F\u7ED3\u679C\u3002</p><p>\u4F4D\u8FD0\u7B97\u6E90\u81EA C \u8BED\u8A00\u7684\u5E95\u5C42\u64CD\u4F5C\u3002\u6211\u4EEC\u7ECF\u5E38\u8981\u76F4\u63A5\u64CD\u7EB5\u786C\u4EF6\uFF0C\u9891\u7E41\u8BBE\u7F6E\u786C\u4EF6\u5BC4\u5B58\u5668\u5185\u7684\u4E8C\u8FDB\u5236\u4F4D\u3002Java \u7684\u8BBE\u8BA1\u521D\u8877\u662F\u7535\u89C6\u673A\u9876\u76D2\u5D4C\u5165\u5F0F\u5F00\u53D1\uFF0C\u6240\u4EE5\u8FD9\u79CD\u5E95\u5C42\u7684\u64CD\u4F5C\u4ECD\u88AB\u4FDD\u7559\u4E86\u4E0B\u6765\u3002\u4F46\u662F\uFF0C\u4F60\u53EF\u80FD\u4E0D\u4F1A\u4F7F\u7528\u592A\u591A\u4F4D\u8FD0\u7B97\u3002</p><p>\u82E5\u4E24\u4E2A\u8F93\u5165\u4F4D\u90FD\u662F 1\uFF0C\u5219\u6309\u4F4D\u201C\u4E0E\u8FD0\u7B97\u7B26\u201D <code>&amp;</code> \u8FD0\u7B97\u540E\u7ED3\u679C\u662F 1\uFF0C\u5426\u5219\u7ED3\u679C\u662F 0\u3002\u82E5\u4E24\u4E2A\u8F93\u5165\u4F4D\u91CC\u81F3\u5C11\u6709\u4E00\u4E2A\u662F 1\uFF0C\u5219\u6309\u4F4D\u201C\u6216\u8FD0\u7B97\u7B26\u201D <code>|</code> \u8FD0\u7B97\u540E\u7ED3\u679C\u662F 1\uFF1B\u53EA\u6709\u5728\u4E24\u4E2A\u8F93\u5165\u4F4D\u90FD\u662F 0 \u7684\u60C5\u51B5\u4E0B\uFF0C\u8FD0\u7B97\u7ED3\u679C\u624D\u662F 0\u3002\u82E5\u4E24\u4E2A\u8F93\u5165\u4F4D\u7684\u67D0\u4E00\u4E2A\u662F 1\uFF0C\u53E6\u4E00\u4E2A\u4E0D\u662F 1\uFF0C\u90A3\u4E48\u6309\u4F4D\u201C\u5F02\u6216\u8FD0\u7B97\u7B26\u201D <code>^</code> \u8FD0\u7B97\u540E\u7ED3\u679C\u624D\u662F 1\u3002\u6309\u4F4D\u201C\u975E\u8FD0\u7B97\u7B26\u201D <code>~</code> \u5C5E\u4E8E\u4E00\u5143\u8FD0\u7B97\u7B26\uFF1B\u5B83\u53EA\u5BF9\u4E00\u4E2A\u81EA\u53D8\u91CF\u8FDB\u884C\u64CD\u4F5C\uFF08\u5176\u4ED6\u6240\u6709\u8FD0\u7B97\u7B26\u90FD\u662F\u4E8C\u5143\u8FD0\u7B97\u7B26\uFF09\u3002\u6309\u4F4D\u975E\u8FD0\u7B97\u540E\u7ED3\u679C\u4E0E\u8F93\u5165\u4F4D\u76F8\u53CD\u3002\u4F8B\u5982\u8F93\u5165 0\uFF0C\u5219\u8F93\u51FA 1\uFF1B\u8F93\u5165 1\uFF0C\u5219\u8F93\u51FA 0\u3002</p><p>\u4F4D\u8FD0\u7B97\u7B26\u548C\u903B\u8F91\u8FD0\u7B97\u7B26\u90FD\u4F7F\u7528\u4E86\u540C\u6837\u7684\u5B57\u7B26\uFF0C\u53EA\u4E0D\u8FC7\u6570\u91CF\u4E0D\u540C\u3002\u4F4D\u77ED\uFF0C\u6240\u4EE5\u4F4D\u8FD0\u7B97\u7B26\u53EA\u6709\u4E00\u4E2A\u5B57\u7B26\u3002\u4F4D\u8FD0\u7B97\u7B26\u53EF\u4E0E\u7B49\u53F7 <code>=</code> \u8054\u5408\u4F7F\u7528\u4EE5\u63A5\u6536\u7ED3\u679C\u53CA\u8D4B\u503C\uFF1A<code>&amp;=</code>\uFF0C<code>|=</code> \u548C <code>^=</code> \u90FD\u662F\u5408\u6CD5\u7684\uFF08\u7531\u4E8E <code>~</code> \u662F\u4E00\u5143\u8FD0\u7B97\u7B26\uFF0C\u6240\u4EE5\u4E0D\u53EF\u4E0E <code>=</code> \u8054\u5408\u4F7F\u7528\uFF09\u3002</p><p>\u6211\u4EEC\u5C06 <strong>Boolean</strong> \u7C7B\u578B\u88AB\u89C6\u4E3A\u201C\u5355\u4F4D\u503C\u201D\uFF08one-bit value\uFF09\uFF0C\u6240\u4EE5\u5B83\u591A\u5C11\u6709\u4E9B\u72EC\u7279\u7684\u5730\u65B9\u3002\u6211\u4EEC\u53EF\u4EE5\u5BF9 boolean \u578B\u53D8\u91CF\u6267\u884C\u4E0E\u3001\u6216\u3001\u5F02\u6216\u8FD0\u7B97\uFF0C\u4F46\u4E0D\u80FD\u6267\u884C\u975E\u8FD0\u7B97\uFF08\u5927\u6982\u662F\u4E3A\u4E86\u907F\u514D\u4E0E\u903B\u8F91\u201C\u975E\u201D\u6DF7\u6DC6\uFF09\u3002\u5BF9\u4E8E\u5E03\u5C14\u503C\uFF0C\u4F4D\u8FD0\u7B97\u7B26\u5177\u6709\u4E0E\u903B\u8F91\u8FD0\u7B97\u7B26\u76F8\u540C\u7684\u6548\u679C\uFF0C\u53EA\u662F\u5B83\u4EEC\u4E0D\u4F1A\u4E2D\u9014\u201C\u77ED\u8DEF\u201D\u3002\u6B64\u5916\uFF0C\u9488\u5BF9\u5E03\u5C14\u503C\u8FDB\u884C\u7684\u4F4D\u8FD0\u7B97\u4E3A\u6211\u4EEC\u65B0\u589E\u4E86\u4E00\u4E2A\u201C\u5F02\u6216\u201D\u903B\u8F91\u8FD0\u7B97\u7B26\uFF0C\u5B83\u5E76\u672A\u5305\u62EC\u5728\u903B\u8F91\u8FD0\u7B97\u7B26\u7684\u5217\u8868\u4E2D\u3002\u5728\u79FB\u4F4D\u8868\u8FBE\u5F0F\u4E2D\uFF0C\u7981\u6B62\u4F7F\u7528\u5E03\u5C14\u503C\uFF0C\u539F\u56E0\u5C06\u5728\u4E0B\u9762\u89E3\u91CA\u3002</p><h2 id="\u79FB\u4F4D\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#\u79FB\u4F4D\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> \u79FB\u4F4D\u8FD0\u7B97\u7B26</h2><p>\u79FB\u4F4D\u8FD0\u7B97\u7B26\u9762\u5411\u7684\u8FD0\u7B97\u5BF9\u8C61\u4E5F\u662F\u4E8C\u8FDB\u5236\u7684\u201C\u4F4D\u201D\u3002\u5B83\u4EEC\u53EA\u80FD\u7528\u4E8E\u5904\u7406\u6574\u6570\u7C7B\u578B\uFF08\u57FA\u672C\u7C7B\u578B\u7684\u4E00\u79CD\uFF09\u3002\u5DE6\u79FB\u4F4D\u8FD0\u7B97\u7B26 <code>&lt;&lt;</code> \u80FD\u5C06\u5176\u5DE6\u8FB9\u7684\u8FD0\u7B97\u5BF9\u8C61\u5411\u5DE6\u79FB\u52A8\u53F3\u4FA7\u6307\u5B9A\u7684\u4F4D\u6570\uFF08\u5728\u4F4E\u4F4D\u8865 0\uFF09\u3002\u53F3\u79FB\u4F4D\u8FD0\u7B97\u7B26 <code>&gt;&gt;</code> \u5219\u76F8\u53CD\u3002\u53F3\u79FB\u4F4D\u8FD0\u7B97\u7B26\u6709\u201C\u6B63\u201D\u3001\u201C\u8D1F\u201D\u503C\uFF1A\u82E5\u503C\u4E3A\u6B63\uFF0C\u5219\u5728\u9AD8\u4F4D\u63D2\u5165 0\uFF1B\u82E5\u503C\u4E3A\u8D1F\uFF0C\u5219\u5728\u9AD8\u4F4D\u63D2\u5165 1\u3002Java \u4E5F\u6DFB\u52A0\u4E86\u4E00\u79CD\u201C\u4E0D\u5206\u6B63\u8D1F\u201D\u7684\u53F3\u79FB\u4F4D\u8FD0\u7B97\u7B26\uFF08&gt;&gt;&gt;\uFF09\uFF0C\u5B83\u4F7F\u7528\u4E86\u201C\u96F6\u6269\u5C55\u201D\uFF08zero extension\uFF09\uFF1A\u65E0\u8BBA\u6B63\u8D1F\uFF0C\u90FD\u5728\u9AD8\u4F4D\u63D2\u5165 0\u3002\u8FD9\u4E00\u8FD0\u7B97\u7B26\u662F C/C++ \u6CA1\u6709\u7684\u3002</p><p>\u5982\u679C\u79FB\u52A8 <strong>char</strong>\u3001<strong>byte</strong> \u6216 <strong>short</strong>\uFF0C\u5219\u4F1A\u5728\u79FB\u52A8\u53D1\u751F\u4E4B\u524D\u5C06\u5176\u63D0\u5347\u4E3A <strong>int</strong>\uFF0C\u7ED3\u679C\u4E3A <strong>int</strong>\u3002\u4EC5\u4F7F\u7528\u53F3\u503C\uFF08rvalue\uFF09\u7684 5 \u4E2A\u4F4E\u9636\u4F4D\u3002\u8FD9\u53EF\u4EE5\u9632\u6B62\u6211\u4EEC\u79FB\u52A8\u8D85\u8FC7 <strong>int</strong> \u8303\u56F4\u7684\u4F4D\u6570\u3002\u82E5\u5BF9\u4E00\u4E2A <strong>long</strong> \u503C\u8FDB\u884C\u5904\u7406\uFF0C\u6700\u540E\u5F97\u5230\u7684\u7ED3\u679C\u4E5F\u662F <strong>long</strong>\u3002</p><p>\u79FB\u4F4D\u53EF\u4EE5\u4E0E\u7B49\u53F7 <code>&lt;&lt;=</code> \u6216 <code>&gt;&gt;=</code> \u6216 <code>&gt;&gt;&gt;=</code> \u7EC4\u5408\u4F7F\u7528\u3002\u5DE6\u503C\u88AB\u66FF\u6362\u4E3A\u5176\u79FB\u4F4D\u8FD0\u7B97\u540E\u7684\u503C\u3002\u4F46\u662F\uFF0C\u95EE\u9898\u6765\u4E86\uFF0C\u5F53\u65E0\u7B26\u53F7\u53F3\u79FB\u4E0E\u8D4B\u503C\u76F8\u7ED3\u5408\u65F6\uFF0C\u82E5\u5C06\u5176\u4E0E <strong>byte</strong> \u6216 <strong>short</strong> \u4E00\u8D77\u4F7F\u7528\u7684\u8BDD\uFF0C\u5219\u7ED3\u679C\u9519\u8BEF\u3002\u53D6\u800C\u4EE3\u4E4B\u7684\u662F\uFF0C\u5B83\u4EEC\u88AB\u63D0\u5347\u4E3A <strong>int</strong> \u578B\u5E76\u53F3\u79FB\uFF0C\u4F46\u5728\u91CD\u65B0\u8D4B\u503C\u65F6\u88AB\u622A\u65AD\u3002\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u7ED3\u679C\u4E3A -1\u3002\u4E0B\u9762\u662F\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// operators/URShift.java</span>
<span class="token comment">// \u6D4B\u8BD5\u65E0\u7B26\u53F7\u53F3\u79FB</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">URShift</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        i <span class="token operator">&gt;&gt;&gt;=</span> <span class="token number">10</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> l <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        l <span class="token operator">&gt;&gt;&gt;=</span> <span class="token number">10</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">short</span> s <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        s <span class="token operator">&gt;&gt;&gt;=</span> <span class="token number">10</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">byte</span> b <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        b <span class="token operator">&gt;&gt;&gt;=</span> <span class="token number">10</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        b <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span>b<span class="token operator">&gt;&gt;&gt;</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>11111111111111111111111111111111
1111111111111111111111
1111111111111111111111111111111111111111111111111111111111111111
111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111
11111111111111111111111111111111
11111111111111111111111111111111
11111111111111111111111111111111
11111111111111111111111111111111
1111111111111111111111
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u4E0A\u4F8B\u4E2D\uFF0C\u7ED3\u679C\u5E76\u672A\u91CD\u65B0\u8D4B\u503C\u7ED9\u53D8\u91CF <strong>b</strong> \uFF0C\u800C\u662F\u76F4\u63A5\u6253\u5370\u51FA\u6765\uFF0C\u56E0\u6B64\u4E00\u5207\u6B63\u5E38\u3002\u4E0B\u9762\u662F\u4E00\u4E2A\u6D89\u53CA\u6240\u6709\u4F4D\u8FD0\u7B97\u7B26\u7684\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// operators/BitManipulation.java</span>
<span class="token comment">// \u4F7F\u7528\u4F4D\u8FD0\u7B97\u7B26</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BitManipulation</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Random</span> rand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token number">47</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> rand<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> j <span class="token operator">=</span> rand<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printBinaryInt</span><span class="token punctuation">(</span><span class="token string">&quot;-1&quot;</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printBinaryInt</span><span class="token punctuation">(</span><span class="token string">&quot;+1&quot;</span><span class="token punctuation">,</span> <span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> maxpos <span class="token operator">=</span> <span class="token number">2147483647</span><span class="token punctuation">;</span>
        <span class="token function">printBinaryInt</span><span class="token punctuation">(</span><span class="token string">&quot;maxpos&quot;</span><span class="token punctuation">,</span> maxpos<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> maxneg <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2147483648</span><span class="token punctuation">;</span>
        <span class="token function">printBinaryInt</span><span class="token punctuation">(</span><span class="token string">&quot;maxneg&quot;</span><span class="token punctuation">,</span> maxneg<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printBinaryInt</span><span class="token punctuation">(</span><span class="token string">&quot;i&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printBinaryInt</span><span class="token punctuation">(</span><span class="token string">&quot;~i&quot;</span><span class="token punctuation">,</span> <span class="token operator">~</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printBinaryInt</span><span class="token punctuation">(</span><span class="token string">&quot;-i&quot;</span><span class="token punctuation">,</span> <span class="token operator">-</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printBinaryInt</span><span class="token punctuation">(</span><span class="token string">&quot;j&quot;</span><span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printBinaryInt</span><span class="token punctuation">(</span><span class="token string">&quot;i &amp; j&quot;</span><span class="token punctuation">,</span> i <span class="token operator">&amp;</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printBinaryInt</span><span class="token punctuation">(</span><span class="token string">&quot;i | j&quot;</span><span class="token punctuation">,</span> i <span class="token operator">|</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printBinaryInt</span><span class="token punctuation">(</span><span class="token string">&quot;i ^ j&quot;</span><span class="token punctuation">,</span> i <span class="token operator">^</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printBinaryInt</span><span class="token punctuation">(</span><span class="token string">&quot;i &lt;&lt; 5&quot;</span><span class="token punctuation">,</span> i <span class="token operator">&lt;&lt;</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printBinaryInt</span><span class="token punctuation">(</span><span class="token string">&quot;i &gt;&gt; 5&quot;</span><span class="token punctuation">,</span> i <span class="token operator">&gt;&gt;</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printBinaryInt</span><span class="token punctuation">(</span><span class="token string">&quot;(~i) &gt;&gt; 5&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">~</span>i<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printBinaryInt</span><span class="token punctuation">(</span><span class="token string">&quot;i &gt;&gt;&gt; 5&quot;</span><span class="token punctuation">,</span> i <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printBinaryInt</span><span class="token punctuation">(</span><span class="token string">&quot;(~i) &gt;&gt;&gt; 5&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">~</span>i<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> l <span class="token operator">=</span> rand<span class="token punctuation">.</span><span class="token function">nextLong</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> m <span class="token operator">=</span> rand<span class="token punctuation">.</span><span class="token function">nextLong</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printBinaryLong</span><span class="token punctuation">(</span><span class="token string">&quot;-1L&quot;</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printBinaryLong</span><span class="token punctuation">(</span><span class="token string">&quot;+1L&quot;</span><span class="token punctuation">,</span> <span class="token operator">+</span><span class="token number">1L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> ll <span class="token operator">=</span> <span class="token number">9223372036854775807L</span><span class="token punctuation">;</span>
        <span class="token function">printBinaryLong</span><span class="token punctuation">(</span><span class="token string">&quot;maxpos&quot;</span><span class="token punctuation">,</span> ll<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> lln <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">9223372036854775808L</span><span class="token punctuation">;</span>
        <span class="token function">printBinaryLong</span><span class="token punctuation">(</span><span class="token string">&quot;maxneg&quot;</span><span class="token punctuation">,</span> lln<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printBinaryLong</span><span class="token punctuation">(</span><span class="token string">&quot;l&quot;</span><span class="token punctuation">,</span> l<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printBinaryLong</span><span class="token punctuation">(</span><span class="token string">&quot;~l&quot;</span><span class="token punctuation">,</span> <span class="token operator">~</span>l<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printBinaryLong</span><span class="token punctuation">(</span><span class="token string">&quot;-l&quot;</span><span class="token punctuation">,</span> <span class="token operator">-</span>l<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printBinaryLong</span><span class="token punctuation">(</span><span class="token string">&quot;m&quot;</span><span class="token punctuation">,</span> m<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printBinaryLong</span><span class="token punctuation">(</span><span class="token string">&quot;l &amp; m&quot;</span><span class="token punctuation">,</span> l <span class="token operator">&amp;</span> m<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printBinaryLong</span><span class="token punctuation">(</span><span class="token string">&quot;l | m&quot;</span><span class="token punctuation">,</span> l <span class="token operator">|</span> m<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printBinaryLong</span><span class="token punctuation">(</span><span class="token string">&quot;l ^ m&quot;</span><span class="token punctuation">,</span> l <span class="token operator">^</span> m<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printBinaryLong</span><span class="token punctuation">(</span><span class="token string">&quot;l &lt;&lt; 5&quot;</span><span class="token punctuation">,</span> l <span class="token operator">&lt;&lt;</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printBinaryLong</span><span class="token punctuation">(</span><span class="token string">&quot;l &gt;&gt; 5&quot;</span><span class="token punctuation">,</span> l <span class="token operator">&gt;&gt;</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printBinaryLong</span><span class="token punctuation">(</span><span class="token string">&quot;(~l) &gt;&gt; 5&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">~</span>l<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printBinaryLong</span><span class="token punctuation">(</span><span class="token string">&quot;l &gt;&gt;&gt; 5&quot;</span><span class="token punctuation">,</span> l <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">printBinaryLong</span><span class="token punctuation">(</span><span class="token string">&quot;(~l) &gt;&gt;&gt; 5&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">~</span>l<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">printBinaryInt</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
        s <span class="token operator">+</span> <span class="token string">&quot;, int: &quot;</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">&quot;, binary:\\n &quot;</span> <span class="token operator">+</span>
        <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">printBinaryLong</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">,</span> <span class="token keyword">long</span> l<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
        s <span class="token operator">+</span> <span class="token string">&quot;, long: &quot;</span> <span class="token operator">+</span> l <span class="token operator">+</span> <span class="token string">&quot;, binary:\\n &quot;</span> <span class="token operator">+</span>
        <span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF08\u524D 32 \u884C\uFF09\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>-1, int: -1, binary:
11111111111111111111111111111111
+1, int: 1, binary:
1
maxpos, int: 2147483647, binary:
1111111111111111111111111111111
maxneg, int: -2147483648, binary:
10000000000000000000000000000000
i, int: -1172028779, binary:
10111010001001000100001010010101
~i, int: 1172028778, binary:
 1000101110110111011110101101010
-i, int: 1172028779, binary:
1000101110110111011110101101011
j, int: 1717241110, binary:
1100110010110110000010100010110
i &amp; j, int: 570425364, binary:
100010000000000000000000010100
i | j, int: -25213033, binary:
11111110011111110100011110010111
i ^ j, int: -595638397, binary:
11011100011111110100011110000011
i &lt;&lt; 5, int: 1149784736, binary:
1000100100010000101001010100000
i &gt;&gt; 5, int: -36625900, binary:
11111101110100010010001000010100
(~i) &gt;&gt; 5, int: 36625899, binary:
10001011101101110111101011
i &gt;&gt;&gt; 5, int: 97591828, binary:
101110100010010001000010100
(~i) &gt;&gt;&gt; 5, int: 36625899, binary:
10001011101101110111101011
    ...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7ED3\u5C3E\u7684\u4E24\u4E2A\u65B9\u6CD5 <code>printBinaryInt()</code> \u548C <code>printBinaryLong()</code> \u5206\u522B\u64CD\u4F5C\u4E00\u4E2A <strong>int</strong> \u548C <strong>long</strong> \u503C\uFF0C\u5E76\u8F6C\u6362\u4E3A\u4E8C\u8FDB\u5236\u683C\u5F0F\u8F93\u51FA\uFF0C\u540C\u65F6\u9644\u6709\u7B80\u8981\u7684\u6587\u5B57\u8BF4\u660E\u3002\u9664\u4E86\u6F14\u793A <strong>int</strong> \u548C <strong>long</strong> \u7684\u6240\u6709\u4F4D\u8FD0\u7B97\u7B26\u7684\u6548\u679C\u4E4B\u5916\uFF0C\u672C\u793A\u4F8B\u8FD8\u663E\u793A <strong>int</strong> \u548C <strong>long</strong> \u7684\u6700\u5C0F\u503C\u3001\u6700\u5927\u503C\u3001+1 \u548C -1 \u503C\uFF0C\u4EE5\u4FBF\u6211\u4EEC\u4E86\u89E3\u5B83\u4EEC\u7684\u5F62\u5F0F\u3002\u6CE8\u610F\u9AD8\u4F4D\u4EE3\u8868\u7B26\u53F7\uFF1A0 \u8868\u793A\u6B63\uFF0C1 \u8868\u793A\u8D1F\u3002\u4E0A\u9762\u663E\u793A\u4E86 <strong>int</strong> \u90E8\u5206\u7684\u8F93\u51FA\u3002\u4EE5\u4E0A\u6570\u5B57\u7684\u4E8C\u8FDB\u5236\u8868\u793A\u5F62\u5F0F\u662F\u5E26\u7B26\u53F7\u7684\u8865\u7801\uFF082&#39;s complement\uFF09\u3002</p><h2 id="\u4E09\u5143\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#\u4E09\u5143\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> \u4E09\u5143\u8FD0\u7B97\u7B26</h2><p>\u4E09\u5143\u8FD0\u7B97\u7B26\uFF0C\u4E5F\u79F0\u4E3A\u6761\u4EF6\u8FD0\u7B97\u7B26\u3002\u8FD9\u79CD\u8FD0\u7B97\u7B26\u6BD4\u8F83\u7F55\u89C1\uFF0C\u56E0\u4E3A\u5B83\u6709\u4E09\u4E2A\u8FD0\u7B97\u5BF9\u8C61\u3002\u4F46\u5B83\u786E\u5B9E\u5C5E\u4E8E\u8FD0\u7B97\u7B26\u7684\u4E00\u79CD\uFF0C\u56E0\u4E3A\u5B83\u6700\u7EC8\u4E5F\u4F1A\u751F\u6210\u4E00\u4E2A\u503C\u3002\u8FD9\u4E0E\u672C\u7AE0\u540E\u4E00\u8282\u8981\u8BB2\u8FF0\u7684\u666E\u901A <strong>if-else</strong> \u8BED\u53E5\u662F\u4E0D\u540C\u7684\u3002\u4E0B\u9762\u662F\u5B83\u7684\u8868\u8FBE\u5F0F\u683C\u5F0F\uFF1A</p><p><strong>\u5E03\u5C14\u8868\u8FBE\u5F0F ? \u503C 1 : \u503C 2</strong></p><p>\u82E5\u8868\u8FBE\u5F0F\u8BA1\u7B97\u4E3A <strong>true</strong>\uFF0C\u5219\u8FD4\u56DE\u7ED3\u679C <strong>\u503C 1</strong> \uFF1B\u5982\u679C\u8868\u8FBE\u5F0F\u7684\u8BA1\u7B97\u4E3A <strong>false</strong>\uFF0C\u5219\u8FD4\u56DE\u7ED3\u679C <strong>\u503C 2</strong>\u3002</p><p>\u5F53\u7136\uFF0C\u4E5F\u53EF\u4EE5\u6362\u7528\u666E\u901A\u7684 <strong>if-else</strong> \u8BED\u53E5\uFF08\u5728\u540E\u9762\u4ECB\u7ECD\uFF09\uFF0C\u4F46\u4E09\u5143\u8FD0\u7B97\u7B26\u66F4\u52A0\u7B80\u6D01\u3002\u4F5C\u4E3A\u4E09\u5143\u8FD0\u7B97\u7B26\u7684\u521B\u9020\u8005\uFF0C C \u81EA\u8BE9\u4E3A\u4E00\u95E8\u7B80\u7EC3\u7684\u8BED\u8A00\u3002\u4E09\u5143\u8FD0\u7B97\u7B26\u7684\u5F15\u5165\u591A\u534A\u5C31\u662F\u4E3A\u4E86\u9AD8\u6548\u7F16\u7A0B\uFF0C\u4F46\u5047\u82E5\u6211\u4EEC\u6253\u7B97\u9891\u7E41\u4F7F\u7528\u5B83\u7684\u8BDD\uFF0C\u8FD8\u662F\u5148\u591A\u4F5C\u4E00\u4E9B\u601D\u91CF\uFF1A \u5B83\u6613\u4E8E\u4EA7\u751F\u53EF\u8BFB\u6027\u5DEE\u7684\u4EE3\u7801\u3002\u4E0E <strong>if-else</strong> \u4E0D\u540C\u7684\u662F\uFF0C\u4E09\u5143\u8FD0\u7B97\u7B26\u662F\u6709\u8FD4\u56DE\u7ED3\u679C\u7684\u3002\u8BF7\u770B\u4E0B\u9762\u7684\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// operators/TernaryIfElse.java</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TernaryIfElse</span> <span class="token punctuation">{</span>
    
<span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">ternary</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> i <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> i <span class="token operator">*</span> <span class="token number">100</span> <span class="token operator">:</span> i <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">standardIfElse</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> i <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        <span class="token keyword">return</span> i <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">ternary</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">ternary</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">standardIfElse</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">standardIfElse</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>900
100
900
100
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u51FA\uFF0C<code>ternary()</code> \u4E2D\u7684\u4EE3\u7801\u66F4\u7B80\u77ED\u3002\u7136\u800C\uFF0C<strong>standardIfElse()</strong> \u4E2D\u7684\u4EE3\u7801\u66F4\u6613\u7406\u89E3\u4E14\u4E0D\u8981\u6C42\u66F4\u591A\u7684\u5F55\u5165\u3002\u6240\u4EE5\u6211\u4EEC\u5728\u6311\u9009\u4E09\u5143\u8FD0\u7B97\u7B26\u65F6\uFF0C\u8BF7\u52A1\u5FC5\u6743\u8861\u4E00\u4E0B\u5229\u5F0A\u3002</p><h2 id="\u5B57\u7B26\u4E32\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u4E32\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> \u5B57\u7B26\u4E32\u8FD0\u7B97\u7B26</h2><p>\u8FD9\u4E2A\u8FD0\u7B97\u7B26\u5728 Java \u91CC\u6709\u4E00\u9879\u7279\u6B8A\u7528\u9014\uFF1A\u8FDE\u63A5\u5B57\u7B26\u4E32\u3002\u8FD9\u70B9\u5DF2\u5728\u524D\u9762\u5C55\u793A\u8FC7\u4E86\u3002\u5C3D\u7BA1\u4E0E <code>+</code> \u7684\u4F20\u7EDF\u610F\u4E49\u4E0D\u7B26\uFF0C\u4F46\u5982\u6B64\u4F7F\u7528\u4E5F\u8FD8\u662F\u6BD4\u8F83\u81EA\u7136\u7684\u3002\u8FD9\u4E00\u529F\u80FD\u770B\u8D77\u6765\u8FD8\u4E0D\u9519\uFF0C\u4E8E\u662F\u5728 C++ \u91CC\u5F15\u5165\u4E86\u201C\u8FD0\u7B97\u7B26\u91CD\u8F7D\u201D\u673A\u5236\uFF0C\u4EE5\u4FBF C++ \u7A0B\u5E8F\u5458\u4E3A\u51E0\u4E4E\u6240\u6709\u8FD0\u7B97\u7B26\u589E\u52A0\u7279\u6B8A\u7684\u542B\u4E49\u3002\u4F46\u9057\u61BE\u5F97\u662F\uFF0C\u4E0E C++ \u7684\u4E00\u4E9B\u9650\u5236\u7ED3\u5408\u4EE5\u540E\uFF0C\u5B83\u53D8\u5F97\u590D\u6742\u3002\u8FD9\u8981\u6C42\u7A0B\u5E8F\u5458\u5728\u8BBE\u8BA1\u81EA\u5DF1\u7684\u7C7B\u65F6\u5FC5\u987B\u5BF9\u6B64\u6709\u5468\u5168\u7684\u8003\u8651\u3002\u867D\u7136\u5728 Java \u4E2D\u5B9E\u73B0\u8FD0\u7B97\u7B26\u91CD\u8F7D\u673A\u5236\u5E76\u975E\u96BE\u4E8B\uFF08\u5982 C# \u6240\u5C55\u793A\u7684\uFF0C\u5B83\u5177\u6709\u7B80\u5355\u7684\u8FD0\u7B97\u7B26\u91CD\u8F7D\uFF09\uFF0C\u4F46\u56E0\u8BE5\u7279\u6027\u8FC7\u4E8E\u590D\u6742\uFF0C\u56E0\u6B64 Java \u5E76\u672A\u5B9E\u73B0\u5B83\u3002</p><p>\u6211\u4EEC\u6CE8\u610F\u5230\u8FD0\u7528 <code>String +</code> \u65F6\u6709\u4E00\u4E9B\u6709\u8DA3\u7684\u73B0\u8C61\u3002\u82E5\u8868\u8FBE\u5F0F\u4EE5\u4E00\u4E2A <strong>String</strong> \u7C7B\u578B\u5F00\u5934\uFF08\u7F16\u8BD1\u5668\u4F1A\u81EA\u52A8\u5C06\u53CC\u5F15\u53F7 <code>&quot;&quot;</code> \u6807\u6CE8\u7684\u7684\u5B57\u7B26\u5E8F\u5217\u8F6C\u6362\u4E3A\u5B57\u7B26\u4E32\uFF09\uFF0C\u90A3\u4E48\u540E\u7EED\u6240\u6709\u8FD0\u7B97\u5BF9\u8C61\u90FD\u5FC5\u987B\u662F\u5B57\u7B26\u4E32\u3002\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// operators/StringOperators.java</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StringOperators</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> z <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> s <span class="token operator">=</span> <span class="token string">&quot;x, y, z &quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s <span class="token operator">+</span> x <span class="token operator">+</span> y <span class="token operator">+</span> z<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u5C06 x \u8F6C\u6362\u4E3A\u5B57\u7B26\u4E32</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>x <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>
        s <span class="token operator">+=</span> <span class="token string">&quot;(summed) = &quot;</span><span class="token punctuation">;</span> 
        <span class="token comment">// \u7EA7\u8054\u64CD\u4F5C</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s <span class="token operator">+</span> <span class="token punctuation">(</span>x <span class="token operator">+</span> y <span class="token operator">+</span> z<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Integer.toString()\u65B9\u6CD5\u7684\u7B80\u5199:</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span> <span class="token operator">+</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>x, y, z 012
0 x, y, z
x, y, z (summed) = 3
0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u6CE8\u610F</strong>\uFF1A\u4E0A\u4F8B\u4E2D\u7B2C 1 \u8F93\u51FA\u8BED\u53E5\u7684\u6267\u884C\u7ED3\u679C\u662F <code>012</code> \u800C\u5E76\u975E <code>3</code>\uFF0C\u8FD9\u662F\u56E0\u4E3A\u7F16\u8BD1\u5668\u5C06\u5176\u5206\u522B\u8F6C\u6362\u4E3A\u5176\u5B57\u7B26\u4E32\u5F62\u5F0F\u7136\u540E\u4E0E\u5B57\u7B26\u4E32\u53D8\u91CF <strong>s</strong> \u8FDE\u63A5\u3002\u5728\u7B2C 2 \u6761\u8F93\u51FA\u8BED\u53E5\u4E2D\uFF0C\u7F16\u8BD1\u5668\u5C06\u5F00\u5934\u7684\u53D8\u91CF\u8F6C\u6362\u4E3A\u4E86\u5B57\u7B26\u4E32\uFF0C\u7531\u6B64\u53EF\u4EE5\u770B\u51FA\uFF0C\u8FD9\u79CD\u8F6C\u6362\u4E0E\u6570\u636E\u7684\u4F4D\u7F6E\u65E0\u5173\uFF0C\u53EA\u8981\u5F53\u4E2D\u6709\u4E00\u6761\u6570\u636E\u662F\u5B57\u7B26\u4E32\u7C7B\u578B\uFF0C\u5176\u4ED6\u975E\u5B57\u7B26\u4E32\u6570\u636E\u90FD\u5C06\u88AB\u8F6C\u6362\u4E3A\u5B57\u7B26\u4E32\u5F62\u5F0F\u5E76\u8FDE\u63A5\u3002\u6700\u540E\u4E00\u6761\u8F93\u51FA\u8BED\u53E5\uFF0C\u6211\u4EEC\u53EF\u4EE5\u770B\u51FA <code>+=</code> \u8FD0\u7B97\u7B26\u53EF\u4EE5\u62FC\u63A5\u5176\u53F3\u4FA7\u7684\u5B57\u7B26\u4E32\u8FDE\u63A5\u7ED3\u679C\u5E76\u91CD\u8D4B\u503C\u7ED9\u81EA\u8EAB\u53D8\u91CF <code>s</code>\u3002\u62EC\u53F7 <code>()</code> \u53EF\u4EE5\u63A7\u5236\u8868\u8FBE\u5F0F\u7684\u8BA1\u7B97\u987A\u5E8F\uFF0C\u4EE5\u4FBF\u5728\u663E\u793A <strong>int</strong> \u4E4B\u524D\u5BF9\u5176\u8FDB\u884C\u5B9E\u9645\u6C42\u548C\u3002</p><p>\u8BF7\u6CE8\u610F\u4E3B\u65B9\u6CD5\u4E2D\u7684\u6700\u540E\u4E00\u4E2A\u4F8B\u5B50\uFF1A\u6211\u4EEC\u7ECF\u5E38\u4F1A\u770B\u5230\u4E00\u4E2A\u7A7A\u5B57\u7B26\u4E32 <code>&quot;&quot;</code> \u8DDF\u7740\u4E00\u4E2A\u57FA\u672C\u7C7B\u578B\u7684\u6570\u636E\u3002\u8FD9\u6837\u53EF\u4EE5\u9690\u5F0F\u5730\u5C06\u5176\u8F6C\u6362\u4E3A\u5B57\u7B26\u4E32\uFF0C\u4EE5\u4EE3\u66FF\u7E41\u7410\u7684\u663E\u5F0F\u8C03\u7528\u65B9\u6CD5\uFF08\u5982\u8FD9\u91CC\u53EF\u4EE5\u4F7F\u7528 <strong>Integer.toString()</strong>\uFF09\u3002</p><h2 id="\u5E38\u89C1\u9677\u9631" tabindex="-1"><a class="header-anchor" href="#\u5E38\u89C1\u9677\u9631" aria-hidden="true">#</a> \u5E38\u89C1\u9677\u9631</h2><p>\u4F7F\u7528\u8FD0\u7B97\u7B26\u65F6\u5F88\u5BB9\u6613\u72AF\u7684\u4E00\u4E2A\u9519\u8BEF\u662F\uFF0C\u5728\u8FD8\u6CA1\u641E\u6E05\u695A\u8868\u8FBE\u5F0F\u7684\u8BA1\u7B97\u65B9\u5F0F\u65F6\u5C31\u8BD5\u56FE\u5FFD\u7565\u62EC\u53F7 <code>()</code>\u3002\u5728 Java \u4E2D\u4E5F\u4E00\u6837\u3002 \u5728 C++ \u4E2D\u4F60\u751A\u81F3\u53EF\u80FD\u72AF\u8FD9\u6837\u6781\u7AEF\u7684\u9519\u8BEF.\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">while</span><span class="token punctuation">(</span>x <span class="token operator">=</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u663E\u7136\uFF0C\u7A0B\u5E8F\u5458\u539F\u610F\u662F\u6D4B\u8BD5\u7B49\u4EF7\u6027 <code>==</code>\uFF0C\u800C\u975E\u8D4B\u503C <code>=</code>\u3002\u82E5\u53D8\u91CF <strong>y</strong> \u975E 0 \u7684\u8BDD\uFF0C\u5728 C/C++ \u4E2D\uFF0C\u8FD9\u6837\u7684\u8D4B\u503C\u64CD\u4F5C\u603B\u4F1A\u8FD4\u56DE <code>true</code>\u3002\u4E8E\u662F\uFF0C\u4E0A\u9762\u7684\u4EE3\u7801\u793A\u4F8B\u5C06\u4F1A\u65E0\u9650\u5FAA\u73AF\u3002\u800C\u5728 Java \u4E2D\uFF0C\u8FD9\u6837\u7684\u8868\u8FBE\u5F0F\u7ED3\u679C\u5E76\u4E0D\u4F1A\u8F6C\u5316\u4E3A\u4E00\u4E2A\u5E03\u5C14\u503C\u3002 \u800C\u7F16\u8BD1\u5668\u4F1A\u8BD5\u56FE\u628A\u8FD9\u4E2A <strong>int</strong> \u578B\u6570\u636E\u8F6C\u6362\u4E3A\u9884\u671F\u5E94\u63A5\u6536\u7684\u5E03\u5C14\u7C7B\u578B\u3002\u6700\u540E\uFF0C\u6211\u4EEC\u5C06\u4F1A\u5728\u8BD5\u56FE\u8FD0\u884C\u524D\u6536\u5230\u7F16\u8BD1\u671F\u9519\u8BEF\u3002\u56E0\u6B64\uFF0CJava \u5929\u751F\u907F\u514D\u4E86\u8FD9\u79CD\u9677\u9631\u53D1\u751F\u7684\u53EF\u80FD\u3002</p><p>\u552F\u4E00\u6709\u79CD\u60C5\u51B5\u4F8B\u5916\uFF1A\u5F53\u53D8\u91CF <code>x</code> \u548C <code>y</code> \u90FD\u662F\u5E03\u5C14\u503C\uFF0C\u4F8B\u5982 <code>x=y</code> \u662F\u4E00\u4E2A\u903B\u8F91\u8868\u8FBE\u5F0F\u3002\u9664\u6B64\u4E4B\u5916\uFF0C\u4E4B\u524D\u7684\u90A3\u4E2A\u4F8B\u5B50\uFF0C\u5F88\u5927\u53EF\u80FD\u662F\u9519\u8BEF\u3002</p><p>\u5728 C/C++ \u91CC\uFF0C\u7C7B\u4F3C\u7684\u4E00\u4E2A\u95EE\u9898\u8FD8\u6709\u4F7F\u7528\u6309\u4F4D\u201C\u4E0E\u201D <code>&amp;</code> \u548C\u201C\u6216\u201D <code>|</code> \u8FD0\u7B97\uFF0C\u800C\u975E\u903B\u8F91\u201C\u4E0E\u201D <code>&amp;&amp;</code> \u548C\u201C\u6216\u201D <code>||</code>\u3002\u5C31\u8C61 <code>=</code> \u548C <code>==</code> \u4E00\u6837\uFF0C\u952E\u5165\u4E00\u4E2A\u5B57\u7B26\u5F53\u7136\u8981\u6BD4\u952E\u5165\u4E24\u4E2A\u7B80\u5355\u3002\u5728 Java \u4E2D\uFF0C\u7F16\u8BD1\u5668\u540C\u6837\u53EF\u9632\u6B62\u8FD9\u4E00\u70B9\uFF0C\u56E0\u4E3A\u5B83\u4E0D\u5141\u8BB8\u6211\u4EEC\u5F3A\u884C\u4F7F\u7528\u53E6\u4E00\u79CD\u5E76\u4E0D\u7B26\u7684\u7C7B\u578B\u3002</p><h2 id="\u7C7B\u578B\u8F6C\u6362" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u8F6C\u6362" aria-hidden="true">#</a> \u7C7B\u578B\u8F6C\u6362</h2><p>\u201C\u7C7B\u578B\u8F6C\u6362\u201D\uFF08Casting\uFF09\u7684\u4F5C\u7528\u662F\u201C\u4E0E\u4E00\u4E2A\u6A21\u578B\u5339\u914D\u201D\u3002\u5728\u9002\u5F53\u7684\u65F6\u5019\uFF0CJava \u4F1A\u5C06\u4E00\u79CD\u6570\u636E\u7C7B\u578B\u81EA\u52A8\u8F6C\u6362\u6210\u53E6\u4E00\u79CD\u3002\u4F8B\u5982\uFF0C\u5047\u8BBE\u6211\u4EEC\u4E3A <strong>float</strong> \u53D8\u91CF\u8D4B\u503C\u4E00\u4E2A\u6574\u6570\u503C\uFF0C\u8BA1\u7B97\u673A\u4F1A\u5C06 <strong>int</strong> \u81EA\u52A8\u8F6C\u6362\u6210 <strong>float</strong>\u3002\u6211\u4EEC\u53EF\u4EE5\u5728\u7A0B\u5E8F\u672A\u81EA\u52A8\u8F6C\u6362\u65F6\u663E\u5F0F\u3001\u5F3A\u5236\u5730\u4F7F\u6B64\u7C7B\u578B\u53D1\u751F\u8F6C\u6362\u3002</p><p>\u8981\u6267\u884C\u5F3A\u5236\u8F6C\u6362\uFF0C\u9700\u8981\u5C06\u6240\u9700\u7684\u6570\u636E\u7C7B\u578B\u653E\u5728\u4EFB\u4F55\u503C\u5DE6\u4FA7\u7684\u62EC\u53F7\u5185\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// operators/Casting.java</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Casting</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span> lng <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span>i<span class="token punctuation">;</span>
        lng <span class="token operator">=</span> i<span class="token punctuation">;</span> <span class="token comment">// \u6CA1\u6709\u5FC5\u8981\u7684\u7C7B\u578B\u63D0\u5347</span>
        <span class="token keyword">long</span> lng2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span><span class="token number">200</span><span class="token punctuation">;</span>
        lng2 <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>
        <span class="token comment">// \u7C7B\u578B\u6536\u7F29</span>
        i <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>lng2<span class="token punctuation">;</span> <span class="token comment">// Cast required</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BDA\u7136\uFF0C\u4F60\u53EF\u4EE5\u8FD9\u6837\u5730\u53BB\u8F6C\u6362\u4E00\u4E2A\u6570\u503C\u7C7B\u578B\u7684\u53D8\u91CF\u3002\u4F46\u662F\u4E0A\u4F8B\u8FD9\u79CD\u505A\u6CD5\u662F\u591A\u4F59\u7684\uFF1A\u56E0\u4E3A\u7F16\u8BD1\u5668\u4F1A\u5728\u5FC5\u8981\u65F6\u81EA\u52A8\u63D0\u5347 <strong>int</strong> \u578B\u6570\u636E\u4E3A <strong>long</strong> \u578B\u3002</p><p>\u5F53\u7136\uFF0C\u4E3A\u4E86\u7A0B\u5E8F\u903B\u8F91\u6E05\u6670\u6216\u63D0\u9192\u81EA\u5DF1\u7559\u610F\uFF0C\u6211\u4EEC\u4E5F\u53EF\u4EE5\u663E\u5F0F\u5730\u7C7B\u578B\u8F6C\u6362\u3002\u5728\u5176\u4ED6\u60C5\u51B5\u4E0B\uFF0C\u7C7B\u578B\u8F6C\u6362\u53EA\u6709\u5728\u4EE3\u7801\u7F16\u8BD1\u65F6\u624D\u663E\u51FA\u5176\u91CD\u8981\u6027\u3002\u5728 C/C++ \u4E2D\uFF0C\u7C7B\u578B\u8F6C\u6362\u6709\u65F6\u4F1A\u8BA9\u4EBA\u5934\u75DB\u3002\u5728 Java \u91CC\uFF0C\u7C7B\u578B\u8F6C\u6362\u5219\u662F\u4E00\u79CD\u6BD4\u8F83\u5B89\u5168\u7684\u64CD\u4F5C\u3002\u4F46\u662F\uFF0C\u82E5\u5C06\u6570\u636E\u7C7B\u578B\u8FDB\u884C\u201C\u5411\u4E0B\u8F6C\u6362\u201D\uFF08<strong>Narrowing Conversion</strong>\uFF09\u7684\u64CD\u4F5C\uFF08\u5C06\u5BB9\u91CF\u8F83\u5927\u7684\u6570\u636E\u7C7B\u578B\u8F6C\u6362\u6210\u5BB9\u91CF\u8F83\u5C0F\u7684\u7C7B\u578B\uFF09\uFF0C\u53EF\u80FD\u4F1A\u53D1\u751F\u4FE1\u606F\u4E22\u5931\u7684\u5371\u9669\u3002\u6B64\u65F6\uFF0C\u7F16\u8BD1\u5668\u4F1A\u5F3A\u8FEB\u6211\u4EEC\u8FDB\u884C\u8F6C\u578B\uFF0C\u597D\u6BD4\u5728\u63D0\u9192\u6211\u4EEC\uFF1A\u8BE5\u64CD\u4F5C\u53EF\u80FD\u5371\u9669\uFF0C\u82E5\u4F60\u575A\u6301\u8BA9\u6211\u8FD9\u4E48\u505A\uFF0C\u90A3\u4E48\u5BF9\u4E0D\u8D77\uFF0C\u8BF7\u660E\u786E\u9700\u8981\u8F6C\u6362\u7684\u7C7B\u578B\u3002 \u5BF9\u4E8E\u201C\u5411\u4E0A\u8F6C\u6362\u201D\uFF08<strong>Widening conversion</strong>\uFF09\uFF0C\u5219\u4E0D\u5FC5\u8FDB\u884C\u663E\u5F0F\u7684\u7C7B\u578B\u8F6C\u6362\uFF0C\u56E0\u4E3A\u8F83\u5927\u7C7B\u578B\u7684\u6570\u636E\u80AF\u5B9A\u80FD\u5BB9\u7EB3\u8F83\u5C0F\u7C7B\u578B\u7684\u6570\u636E\uFF0C\u4E0D\u4F1A\u9020\u6210\u4EFB\u4F55\u4FE1\u606F\u7684\u4E22\u5931\u3002</p><p>\u9664\u4E86\u5E03\u5C14\u7C7B\u578B\u7684\u6570\u636E\uFF0CJava \u5141\u8BB8\u4EFB\u4F55\u57FA\u672C\u7C7B\u578B\u7684\u6570\u636E\u8F6C\u6362\u4E3A\u53E6\u4E00\u79CD\u57FA\u672C\u7C7B\u578B\u7684\u6570\u636E\u3002\u6B64\u5916\uFF0C\u7C7B\u662F\u4E0D\u80FD\u8FDB\u884C\u7C7B\u578B\u8F6C\u6362\u7684\u3002\u4E3A\u4E86\u5C06\u4E00\u4E2A\u7C7B\u8F6C\u6362\u4E3A\u53E6\u4E00\u4E2A\u7C7B\u578B\uFF0C\u9700\u8981\u4F7F\u7528\u7279\u6B8A\u7684\u65B9\u6CD5\uFF08\u540E\u9762\u5C06\u4F1A\u5B66\u4E60\u5230\u5982\u4F55\u5728\u7236\u5B50\u7C7B\u4E4B\u95F4\u8FDB\u884C\u5411\u4E0A/\u5411\u4E0B\u8F6C\u578B\uFF0C\u4F8B\u5982\uFF0C\u201C\u6A61\u6811\u201D\u53EF\u4EE5\u8F6C\u6362\u4E3A\u201C\u6811\u201D\uFF0C\u53CD\u4E4B\u4EA6\u7136\u3002\u800C\u5BF9\u4E8E\u201C\u5CA9\u77F3\u201D\u662F\u65E0\u6CD5\u8F6C\u6362\u4E3A\u201C\u6811\u201D\u7684\uFF09\u3002</p><h3 id="\u622A\u65AD\u548C\u820D\u5165" tabindex="-1"><a class="header-anchor" href="#\u622A\u65AD\u548C\u820D\u5165" aria-hidden="true">#</a> \u622A\u65AD\u548C\u820D\u5165</h3><p>\u5728\u6267\u884C\u201C\u5411\u4E0B\u8F6C\u6362\u201D\u65F6\uFF0C\u5FC5\u987B\u6CE8\u610F\u6570\u636E\u7684\u622A\u65AD\u548C\u820D\u5165\u95EE\u9898\u3002\u82E5\u4ECE\u6D6E\u70B9\u503C\u8F6C\u6362\u4E3A\u6574\u578B\u503C\uFF0CJava \u4F1A\u505A\u4EC0\u4E48\u5462\uFF1F\u4F8B\u5982\uFF1A\u6D6E\u70B9\u6570 29.7 \u88AB\u8F6C\u6362\u4E3A\u6574\u578B\u503C\uFF0C\u7ED3\u679C\u4F1A\u662F 29 \u8FD8\u662F 30 \u5462\uFF1F\u4E0B\u9762\u662F\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// operators/CastingNumbers.java</span>
<span class="token comment">// \u5C1D\u8BD5\u8F6C\u6362 float \u548C double \u578B\u6570\u636E\u4E3A\u6574\u578B\u6570\u636E</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CastingNumbers</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">double</span> above <span class="token operator">=</span> <span class="token number">0.7</span><span class="token punctuation">,</span> below <span class="token operator">=</span> <span class="token number">0.4</span><span class="token punctuation">;</span>
        <span class="token keyword">float</span> fabove <span class="token operator">=</span> <span class="token number">0.7f</span><span class="token punctuation">,</span> fbelow <span class="token operator">=</span> <span class="token number">0.4f</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;(int)above: &quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>above<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;(int)below: &quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>below<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;(int)fabove: &quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>fabove<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;(int)fbelow: &quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>fbelow<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>(int)above: 0
(int)below: 0
(int)fabove: 0
(int)fbelow: 0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56E0\u6B64\uFF0C\u7B54\u6848\u662F\uFF0C\u4ECE <strong>float</strong> \u548C <strong>double</strong> \u8F6C\u6362\u4E3A\u6574\u6570\u503C\u65F6\uFF0C\u5C0F\u6570\u4F4D\u5C06\u88AB\u622A\u65AD\u3002\u82E5\u4F60\u60F3\u5BF9\u7ED3\u679C\u8FDB\u884C\u56DB\u820D\u4E94\u5165\uFF0C\u53EF\u4EE5\u4F7F\u7528 <code>java.lang.Math</code> \u7684 <code> round()</code> \u65B9\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// operators/RoundingNumbers.java</span>
<span class="token comment">// float \u548C double \u7C7B\u578B\u6570\u636E\u7684\u56DB\u820D\u4E94\u5165</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RoundingNumbers</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">double</span> above <span class="token operator">=</span> <span class="token number">0.7</span><span class="token punctuation">,</span> below <span class="token operator">=</span> <span class="token number">0.4</span><span class="token punctuation">;</span>
        <span class="token keyword">float</span> fabove <span class="token operator">=</span> <span class="token number">0.7f</span><span class="token punctuation">,</span> fbelow <span class="token operator">=</span> <span class="token number">0.4f</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
        <span class="token string">&quot;Math.round(above): &quot;</span> <span class="token operator">+</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>above<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
        <span class="token string">&quot;Math.round(below): &quot;</span> <span class="token operator">+</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>below<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
        <span class="token string">&quot;Math.round(fabove): &quot;</span> <span class="token operator">+</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>fabove<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
        <span class="token string">&quot;Math.round(fbelow): &quot;</span> <span class="token operator">+</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>fbelow<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Math.round(above): 1
Math.round(below): 0
Math.round(fabove): 1
Math.round(fbelow): 0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56E0\u4E3A <code>round()</code> \u65B9\u6CD5\u662F <code>java.lang</code> \u7684\u4E00\u90E8\u5206\uFF0C\u6240\u4EE5\u6211\u4EEC\u65E0\u9700\u901A\u8FC7 <code>import</code> \u5C31\u53EF\u4EE5\u4F7F\u7528\u3002</p><h3 id="\u7C7B\u578B\u63D0\u5347" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u63D0\u5347" aria-hidden="true">#</a> \u7C7B\u578B\u63D0\u5347</h3><p>\u4F60\u4F1A\u53D1\u73B0\uFF0C\u5982\u679C\u6211\u4EEC\u5BF9\u5C0F\u4E8E <strong>int</strong> \u7684\u57FA\u672C\u6570\u636E\u7C7B\u578B\uFF08\u5373 <strong>char</strong>\u3001<strong>byte</strong> \u6216 <strong>short</strong>\uFF09\u6267\u884C\u4EFB\u4F55\u7B97\u672F\u6216\u6309\u4F4D\u64CD\u4F5C\uFF0C\u8FD9\u4E9B\u503C\u4F1A\u5728\u6267\u884C\u64CD\u4F5C\u4E4B\u524D\u7C7B\u578B\u63D0\u5347\u4E3A <strong>int</strong>\uFF0C\u5E76\u4E14\u7ED3\u679C\u503C\u7684\u7C7B\u578B\u4E3A <strong>int</strong>\u3002\u82E5\u60F3\u91CD\u65B0\u4F7F\u7528\u8F83\u5C0F\u7684\u7C7B\u578B\uFF0C\u5FC5\u987B\u4F7F\u7528\u5F3A\u5236\u8F6C\u6362\uFF08\u7531\u4E8E\u91CD\u65B0\u5206\u914D\u56DE\u4E00\u4E2A\u8F83\u5C0F\u7684\u7C7B\u578B\uFF0C\u7ED3\u679C\u53EF\u80FD\u4F1A\u4E22\u5931\u7CBE\u5EA6\uFF09\u3002\u901A\u5E38\uFF0C\u8868\u8FBE\u5F0F\u4E2D\u6700\u5927\u7684\u6570\u636E\u7C7B\u578B\u662F\u51B3\u5B9A\u8868\u8FBE\u5F0F\u7ED3\u679C\u7684\u6570\u636E\u7C7B\u578B\u3002<strong>float</strong> \u578B\u548C <strong>double</strong> \u578B\u76F8\u4E58\uFF0C\u7ED3\u679C\u662F <strong>double</strong> \u578B\u7684\uFF1B<strong>int</strong> \u548C <strong>long</strong> \u76F8\u52A0\uFF0C\u7ED3\u679C\u662F <strong>long</strong> \u578B\u3002</p><h2 id="java\u6CA1\u6709sizeof" tabindex="-1"><a class="header-anchor" href="#java\u6CA1\u6709sizeof" aria-hidden="true">#</a> Java\u6CA1\u6709sizeof</h2><p>\u5728 C/C++ \u4E2D\uFF0C\u7ECF\u5E38\u9700\u8981\u7528\u5230 <code>sizeof()</code> \u65B9\u6CD5\u6765\u83B7\u53D6\u6570\u636E\u9879\u88AB\u5206\u914D\u7684\u5B57\u8282\u5927\u5C0F\u3002C/C++ \u4E2D\u4F7F\u7528 <code>sizeof()</code> \u6700\u6709\u8BF4\u670D\u529B\u7684\u539F\u56E0\u662F\u4E3A\u4E86\u79FB\u690D\u6027\uFF0C\u4E0D\u540C\u6570\u636E\u5728\u4E0D\u540C\u673A\u5668\u4E0A\u53EF\u80FD\u6709\u4E0D\u540C\u7684\u5927\u5C0F\uFF0C\u6240\u4EE5\u5728\u8FDB\u884C\u5927\u5C0F\u654F\u611F\u7684\u8FD0\u7B97\u65F6\uFF0C\u7A0B\u5E8F\u5458\u5FC5\u987B\u5BF9\u8FD9\u4E9B\u7C7B\u578B\u6709\u591A\u5927\u505A\u5230\u5FC3\u4E2D\u6709\u6570\u3002\u4F8B\u5982\uFF0C\u4E00\u53F0\u8BA1\u7B97\u673A\u53EF\u7528 32 \u4F4D\u6765\u4FDD\u5B58\u6574\u6570\uFF0C\u800C\u53E6\u4E00\u53F0\u53EA\u7528 16 \u4F4D\u4FDD\u5B58\u3002\u663E\u7136\uFF0C\u5728\u7B2C\u4E00\u53F0\u673A\u5668\u4E2D\uFF0C\u7A0B\u5E8F\u53EF\u4FDD\u5B58\u66F4\u5927\u7684\u503C\u3002\u6240\u4EE5\uFF0C\u79FB\u690D\u662F\u4EE4 C/C++ \u7A0B\u5E8F\u5458\u9887\u4E3A\u5934\u75DB\u7684\u4E00\u4E2A\u95EE\u9898\u3002</p><p>Java \u4E0D\u9700\u8981 <code> sizeof()</code> \u65B9\u6CD5\u6765\u6EE1\u8DB3\u8FD9\u79CD\u9700\u6C42\uFF0C\u56E0\u4E3A\u6240\u6709\u7C7B\u578B\u7684\u5927\u5C0F\u5728\u4E0D\u540C\u5E73\u53F0\u4E0A\u662F\u76F8\u540C\u7684\u3002\u6211\u4EEC\u4E0D\u5FC5\u8003\u8651\u8FD9\u4E2A\u5C42\u6B21\u7684\u79FB\u690D\u95EE\u9898 \u2014\u2014 Java \u672C\u8EAB\u5C31\u662F\u4E00\u79CD\u201C\u4E0E\u5E73\u53F0\u65E0\u5173\u201D\u7684\u8BED\u8A00\u3002</p><h2 id="\u8FD0\u7B97\u7B26\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u8FD0\u7B97\u7B26\u603B\u7ED3" aria-hidden="true">#</a> \u8FD0\u7B97\u7B26\u603B\u7ED3</h2><p>\u4E0A\u8FF0\u793A\u4F8B\u5206\u522B\u5411\u6211\u4EEC\u5C55\u793A\u4E86\u54EA\u4E9B\u57FA\u672C\u7C7B\u578B\u80FD\u88AB\u7528\u4E8E\u7279\u5B9A\u7684\u8FD0\u7B97\u7B26\u3002\u57FA\u672C\u4E0A\uFF0C\u4E0B\u9762\u7684\u4EE3\u7801\u793A\u4F8B\u662F\u5BF9\u4E0A\u8FF0\u6240\u6709\u793A\u4F8B\u7684\u91CD\u590D\uFF0C\u53EA\u4E0D\u8FC7\u6982\u62EC\u4E86\u6240\u6709\u7684\u57FA\u672C\u7C7B\u578B\u3002\u8FD9\u4E2A\u6587\u4EF6\u80FD\u88AB\u6B63\u786E\u5730\u7F16\u8BD1\uFF0C\u56E0\u4E3A\u6211\u5DF2\u7ECF\u628A\u7F16\u8BD1\u4E0D\u901A\u8FC7\u7684\u90A3\u90E8\u5206\u7528\u6CE8\u91CA <code>//</code> \u8FC7\u6EE4\u4E86\u3002\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// operators/AllOps.java</span>
<span class="token comment">// \u6D4B\u8BD5\u6240\u6709\u57FA\u672C\u7C7B\u578B\u7684\u8FD0\u7B97\u7B26\u64CD\u4F5C</span>
<span class="token comment">// \u770B\u770B\u54EA\u4E9B\u662F\u80FD\u88AB Java \u7F16\u8BD1\u5668\u63A5\u53D7\u7684</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AllOps</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5E03\u5C14\u503C\u7684\u63A5\u6536\u6D4B\u8BD5\uFF1A</span>
    <span class="token keyword">void</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">void</span> <span class="token function">boolTest</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> x<span class="token punctuation">,</span> <span class="token keyword">boolean</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u7B97\u6570\u8FD0\u7B97\u7B26\uFF1A</span>
        <span class="token comment">//- x = x * y;</span>
        <span class="token comment">//- x = x / y;</span>
        <span class="token comment">//- x = x % y;</span>
        <span class="token comment">//- x = x + y;</span>
        <span class="token comment">//- x = x - y;</span>
        <span class="token comment">//- x++;</span>
        <span class="token comment">//- x--;</span>
        <span class="token comment">//- x = +y;</span>
        <span class="token comment">//- x = -y;</span>
        <span class="token comment">// \u5173\u7CFB\u8FD0\u7B97\u7B26\u548C\u903B\u8F91\u8FD0\u7B97\u7B26\uFF1A</span>
        <span class="token comment">//- f(x &gt; y);</span>
        <span class="token comment">//- f(x &gt;= y);</span>
        <span class="token comment">//- f(x &lt; y);</span>
        <span class="token comment">//- f(x &lt;= y);</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">==</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">!=</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">f</span><span class="token punctuation">(</span><span class="token operator">!</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        x <span class="token operator">=</span> x <span class="token operator">&amp;&amp;</span> y<span class="token punctuation">;</span>
        x <span class="token operator">=</span> x <span class="token operator">||</span> y<span class="token punctuation">;</span>
        <span class="token comment">// \u6309\u4F4D\u8FD0\u7B97\u7B26\uFF1A</span>
        <span class="token comment">//- x = ~y;</span>
        x <span class="token operator">=</span> x <span class="token operator">&amp;</span> y<span class="token punctuation">;</span>
        x <span class="token operator">=</span> x <span class="token operator">|</span> y<span class="token punctuation">;</span>
        x <span class="token operator">=</span> x <span class="token operator">^</span> y<span class="token punctuation">;</span>
        <span class="token comment">//- x = x &lt;&lt; 1;</span>
        <span class="token comment">//- x = x &gt;&gt; 1;</span>
        <span class="token comment">//- x = x &gt;&gt;&gt; 1;</span>
        <span class="token comment">// \u8054\u5408\u8D4B\u503C\uFF1A</span>
        <span class="token comment">//- x += y;</span>
        <span class="token comment">//- x -= y;</span>
        <span class="token comment">//- x *= y;</span>
        <span class="token comment">//- x /= y;</span>
        <span class="token comment">//- x %= y;</span>
        <span class="token comment">//- x &lt;&lt;= 1;</span>
        <span class="token comment">//- x &gt;&gt;= 1;</span>
        <span class="token comment">//- x &gt;&gt;&gt;= 1;</span>
        x <span class="token operator">&amp;=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">^=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">|=</span> y<span class="token punctuation">;</span>
        <span class="token comment">// \u7C7B\u578B\u8F6C\u6362\uFF1A</span>
        <span class="token comment">//- char c = (char)x;</span>
        <span class="token comment">//- byte b = (byte)x;</span>
        <span class="token comment">//- short s = (short)x;</span>
        <span class="token comment">//- int i = (int)x;</span>
        <span class="token comment">//- long l = (long)x;</span>
        <span class="token comment">//- float f = (float)x;</span>
        <span class="token comment">//- double d = (double)x;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">void</span> <span class="token function">charTest</span><span class="token punctuation">(</span><span class="token keyword">char</span> x<span class="token punctuation">,</span> <span class="token keyword">char</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u7B97\u6570\u8FD0\u7B97\u7B26\uFF1A</span>
        x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x <span class="token operator">*</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x <span class="token operator">/</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x <span class="token operator">%</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x <span class="token operator">+</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x <span class="token operator">-</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        x<span class="token operator">++</span><span class="token punctuation">;</span>
        x<span class="token operator">--</span><span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span> <span class="token operator">+</span> y<span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span> <span class="token operator">-</span> y<span class="token punctuation">;</span>
        <span class="token comment">// \u5173\u7CFB\u548C\u903B\u8F91\u8FD0\u7B97\u7B26\uFF1A</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">&gt;</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">&gt;=</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">&lt;</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">&lt;=</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">==</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">!=</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//- f(!x);</span>
        <span class="token comment">//- f(x &amp;&amp; y);</span>
        <span class="token comment">//- f(x || y);</span>
        <span class="token comment">// \u6309\u4F4D\u8FD0\u7B97\u7B26\uFF1A</span>
        x<span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span><span class="token operator">~</span>y<span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x <span class="token operator">&amp;</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x <span class="token operator">|</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x <span class="token operator">^</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u8054\u5408\u8D4B\u503C\uFF1A</span>
        x <span class="token operator">+=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">-=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">*=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">/=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">%=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">&lt;&lt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        x <span class="token operator">&gt;&gt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        x <span class="token operator">&gt;&gt;&gt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        x <span class="token operator">&amp;=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">^=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">|=</span> y<span class="token punctuation">;</span>
        <span class="token comment">// \u7C7B\u578B\u8F6C\u6362</span>
        <span class="token comment">//- boolean bl = (boolean)x;</span>
        <span class="token keyword">byte</span> b <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span>x<span class="token punctuation">;</span>
        <span class="token keyword">short</span> s <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span>x<span class="token punctuation">;</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>x<span class="token punctuation">;</span>
        <span class="token keyword">long</span> l <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span>x<span class="token punctuation">;</span>
        <span class="token keyword">float</span> f <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span>x<span class="token punctuation">;</span>
        <span class="token keyword">double</span> d <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span>x<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">void</span> <span class="token function">byteTest</span><span class="token punctuation">(</span><span class="token keyword">byte</span> x<span class="token punctuation">,</span> <span class="token keyword">byte</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u7B97\u6570\u8FD0\u7B97\u7B26\uFF1A</span>
        x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x<span class="token operator">*</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x <span class="token operator">/</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x <span class="token operator">%</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x <span class="token operator">+</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x <span class="token operator">-</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        x<span class="token operator">++</span><span class="token punctuation">;</span>
        x<span class="token operator">--</span><span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span> <span class="token operator">+</span> y<span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span> <span class="token operator">-</span> y<span class="token punctuation">;</span>
        <span class="token comment">// \u5173\u7CFB\u548C\u903B\u8F91\u8FD0\u7B97\u7B26\uFF1A</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">&gt;</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">&gt;=</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">&lt;</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">&lt;=</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">==</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">!=</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//- f(!x);</span>
        <span class="token comment">//- f(x &amp;&amp; y);</span>
        <span class="token comment">//- f(x || y);</span>
        <span class="token comment">//\u6309\u4F4D\u8FD0\u7B97\u7B26\uFF1A</span>
        x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span><span class="token operator">~</span>y<span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x <span class="token operator">&amp;</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x <span class="token operator">|</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x <span class="token operator">^</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u8054\u5408\u8D4B\u503C\uFF1A</span>
        x <span class="token operator">+=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">-=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">*=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">/=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">%=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">&lt;&lt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        x <span class="token operator">&gt;&gt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        x <span class="token operator">&gt;&gt;&gt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        x <span class="token operator">&amp;=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">^=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">|=</span> y<span class="token punctuation">;</span>
        <span class="token comment">// \u7C7B\u578B\u8F6C\u6362\uFF1A</span>
        <span class="token comment">//- boolean bl = (boolean)x;</span>
        <span class="token keyword">char</span> c <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span>x<span class="token punctuation">;</span>
        <span class="token keyword">short</span> s <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span>x<span class="token punctuation">;</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>x<span class="token punctuation">;</span>
        <span class="token keyword">long</span> l <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span>x<span class="token punctuation">;</span>
        <span class="token keyword">float</span> f <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span>x<span class="token punctuation">;</span>
        <span class="token keyword">double</span> d <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span>x<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">void</span> <span class="token function">shortTest</span><span class="token punctuation">(</span><span class="token keyword">short</span> x<span class="token punctuation">,</span> <span class="token keyword">short</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u7B97\u672F\u8FD0\u7B97\u7B26\uFF1A</span>
        x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x <span class="token operator">*</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x <span class="token operator">/</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x <span class="token operator">%</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x <span class="token operator">+</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x <span class="token operator">-</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        x<span class="token operator">++</span><span class="token punctuation">;</span>
        x<span class="token operator">--</span><span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token operator">+</span> y<span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token operator">-</span> y<span class="token punctuation">;</span>
        <span class="token comment">// \u5173\u7CFB\u548C\u903B\u8F91\u8FD0\u7B97\u7B26\uFF1A</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">&gt;</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">&gt;=</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">&lt;</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">&lt;=</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">==</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">!=</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//- f(!x);</span>
        <span class="token comment">//- f(x &amp;&amp; y);</span>
        <span class="token comment">//- f(x || y);</span>
        <span class="token comment">// \u6309\u4F4D\u8FD0\u7B97\u7B26\uFF1A</span>
        x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token operator">~</span> y<span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x <span class="token operator">&amp;</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x <span class="token operator">|</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x <span class="token operator">^</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Compound assignment:</span>
        x <span class="token operator">+=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">-=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">*=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">/=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">%=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">&lt;&lt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        x <span class="token operator">&gt;&gt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        x <span class="token operator">&gt;&gt;&gt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        x <span class="token operator">&amp;=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">^=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">|=</span> y<span class="token punctuation">;</span>
        <span class="token comment">// \u7C7B\u578B\u8F6C\u6362\uFF1A</span>
        <span class="token comment">//- boolean bl = (boolean)x;</span>
        <span class="token keyword">char</span> c <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span>x<span class="token punctuation">;</span>
        <span class="token keyword">byte</span> b <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span>x<span class="token punctuation">;</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>x<span class="token punctuation">;</span>
        <span class="token keyword">long</span> l <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span>x<span class="token punctuation">;</span>
        <span class="token keyword">float</span> f <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span>x<span class="token punctuation">;</span>
        <span class="token keyword">double</span> d <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span>x<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">void</span> <span class="token function">intTest</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u7B97\u672F\u8FD0\u7B97\u7B26\uFF1A</span>
        x <span class="token operator">=</span> x <span class="token operator">*</span> y<span class="token punctuation">;</span>
        x <span class="token operator">=</span> x <span class="token operator">/</span> y<span class="token punctuation">;</span>
        x <span class="token operator">=</span> x <span class="token operator">%</span> y<span class="token punctuation">;</span>
        x <span class="token operator">=</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>
        x <span class="token operator">=</span> x <span class="token operator">-</span> y<span class="token punctuation">;</span>
        x<span class="token operator">++</span><span class="token punctuation">;</span>
        x<span class="token operator">--</span><span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token operator">+</span>y<span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token operator">-</span>y<span class="token punctuation">;</span>
        <span class="token comment">// \u5173\u7CFB\u548C\u903B\u8F91\u8FD0\u7B97\u7B26\uFF1A</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">&gt;</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">&gt;=</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">&lt;</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">&lt;=</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">==</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">!=</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//- f(!x);</span>
        <span class="token comment">//- f(x &amp;&amp; y);</span>
        <span class="token comment">//- f(x || y);</span>
        <span class="token comment">// \u6309\u4F4D\u8FD0\u7B97\u7B26\uFF1A</span>
        x <span class="token operator">=</span> <span class="token operator">~</span>y<span class="token punctuation">;</span>
        x <span class="token operator">=</span> x <span class="token operator">&amp;</span> y<span class="token punctuation">;</span>
        x <span class="token operator">=</span> x <span class="token operator">|</span> y<span class="token punctuation">;</span>
        x <span class="token operator">=</span> x <span class="token operator">^</span> y<span class="token punctuation">;</span>
        x <span class="token operator">=</span> x <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">;</span>
        x <span class="token operator">=</span> x <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span>
        x <span class="token operator">=</span> x <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token comment">// \u8054\u5408\u8D4B\u503C\uFF1A</span>
        x <span class="token operator">+=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">-=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">*=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">/=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">%=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">&lt;&lt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        x <span class="token operator">&gt;&gt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        x <span class="token operator">&gt;&gt;&gt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        x <span class="token operator">&amp;=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">^=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">|=</span> y<span class="token punctuation">;</span>
        <span class="token comment">// \u7C7B\u578B\u8F6C\u6362\uFF1A</span>
        <span class="token comment">//- boolean bl = (boolean)x;</span>
        <span class="token keyword">char</span> c <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span>x<span class="token punctuation">;</span>
        <span class="token keyword">byte</span> b <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span>x<span class="token punctuation">;</span>
        <span class="token keyword">short</span> s <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span>x<span class="token punctuation">;</span>
        <span class="token keyword">long</span> l <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span>x<span class="token punctuation">;</span>
        <span class="token keyword">float</span> f <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span>x<span class="token punctuation">;</span>
        <span class="token keyword">double</span> d <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span>x<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">void</span> <span class="token function">longTest</span><span class="token punctuation">(</span><span class="token keyword">long</span> x<span class="token punctuation">,</span> <span class="token keyword">long</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u7B97\u6570\u8FD0\u7B97\u7B26\uFF1A</span>
        x <span class="token operator">=</span> x <span class="token operator">*</span> y<span class="token punctuation">;</span>
        x <span class="token operator">=</span> x <span class="token operator">/</span> y<span class="token punctuation">;</span>
        x <span class="token operator">=</span> x <span class="token operator">%</span> y<span class="token punctuation">;</span>
        x <span class="token operator">=</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>
        x <span class="token operator">=</span> x <span class="token operator">-</span> y<span class="token punctuation">;</span>
        x<span class="token operator">++</span><span class="token punctuation">;</span>
        x<span class="token operator">--</span><span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token operator">+</span>y<span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token operator">-</span>y<span class="token punctuation">;</span>
        <span class="token comment">// \u5173\u7CFB\u548C\u903B\u8F91\u8FD0\u7B97\u7B26\uFF1A</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">&gt;</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">&gt;=</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">&lt;</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">&lt;=</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">==</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">!=</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//- f(!x);</span>
        <span class="token comment">//- f(x &amp;&amp; y);</span>
        <span class="token comment">//- f(x || y);</span>
        <span class="token comment">// \u6309\u4F4D\u8FD0\u7B97\u7B26\uFF1A</span>
        x <span class="token operator">=</span> <span class="token operator">~</span>y<span class="token punctuation">;</span>
        x <span class="token operator">=</span> x <span class="token operator">&amp;</span> y<span class="token punctuation">;</span>
        x <span class="token operator">=</span> x <span class="token operator">|</span> y<span class="token punctuation">;</span>
        x <span class="token operator">=</span> x <span class="token operator">^</span> y<span class="token punctuation">;</span>
        x <span class="token operator">=</span> x <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">;</span>
        x <span class="token operator">=</span> x <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span>
        x <span class="token operator">=</span> x <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token comment">// \u8054\u5408\u8D4B\u503C\uFF1A</span>
        x <span class="token operator">+=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">-=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">*=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">/=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">%=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">&lt;&lt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        x <span class="token operator">&gt;&gt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        x <span class="token operator">&gt;&gt;&gt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        x <span class="token operator">&amp;=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">^=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">|=</span> y<span class="token punctuation">;</span>
        <span class="token comment">// \u7C7B\u578B\u8F6C\u6362\uFF1A</span>
        <span class="token comment">//- boolean bl = (boolean)x;</span>
        <span class="token keyword">char</span> c <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span>x<span class="token punctuation">;</span>
        <span class="token keyword">byte</span> b <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span>x<span class="token punctuation">;</span>
        <span class="token keyword">short</span> s <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span>x<span class="token punctuation">;</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>x<span class="token punctuation">;</span>
        <span class="token keyword">float</span> f <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span>x<span class="token punctuation">;</span>
        <span class="token keyword">double</span> d <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span>x<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">void</span> <span class="token function">floatTest</span><span class="token punctuation">(</span><span class="token keyword">float</span> x<span class="token punctuation">,</span> <span class="token keyword">float</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u7B97\u6570\u8FD0\u7B97\u7B26\uFF1A</span>
        x <span class="token operator">=</span> x <span class="token operator">*</span> y<span class="token punctuation">;</span>
        x <span class="token operator">=</span> x <span class="token operator">/</span> y<span class="token punctuation">;</span>
        x <span class="token operator">=</span> x <span class="token operator">%</span> y<span class="token punctuation">;</span>
        x <span class="token operator">=</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>
        x <span class="token operator">=</span> x <span class="token operator">-</span> y<span class="token punctuation">;</span>
        x<span class="token operator">++</span><span class="token punctuation">;</span>
        x<span class="token operator">--</span><span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token operator">+</span>y<span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token operator">-</span>y<span class="token punctuation">;</span>
        <span class="token comment">// \u5173\u7CFB\u548C\u903B\u8F91\u8FD0\u7B97\u7B26\uFF1A</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">&gt;</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">&gt;=</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">&lt;</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">&lt;=</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">==</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">!=</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//- f(!x);</span>
        <span class="token comment">//- f(x &amp;&amp; y);</span>
        <span class="token comment">//- f(x || y);</span>
        <span class="token comment">// \u6309\u4F4D\u8FD0\u7B97\u7B26\uFF1A</span>
        <span class="token comment">//- x = ~y;</span>
        <span class="token comment">//- x = x &amp; y;</span>
        <span class="token comment">//- x = x | y;</span>
        <span class="token comment">//- x = x ^ y;</span>
        <span class="token comment">//- x = x &lt;&lt; 1;</span>
        <span class="token comment">//- x = x &gt;&gt; 1;</span>
        <span class="token comment">//- x = x &gt;&gt;&gt; 1;</span>
        <span class="token comment">// \u8054\u5408\u8D4B\u503C\uFF1A</span>
        x <span class="token operator">+=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">-=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">*=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">/=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">%=</span> y<span class="token punctuation">;</span>
        <span class="token comment">//- x &lt;&lt;= 1;</span>
        <span class="token comment">//- x &gt;&gt;= 1;</span>
        <span class="token comment">//- x &gt;&gt;&gt;= 1;</span>
        <span class="token comment">//- x &amp;= y;</span>
        <span class="token comment">//- x ^= y;</span>
        <span class="token comment">//- x |= y;</span>
        <span class="token comment">// \u7C7B\u578B\u8F6C\u6362\uFF1A</span>
        <span class="token comment">//- boolean bl = (boolean)x;</span>
        <span class="token keyword">char</span> c <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span>x<span class="token punctuation">;</span>
        <span class="token keyword">byte</span> b <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span>x<span class="token punctuation">;</span>
        <span class="token keyword">short</span> s <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span>x<span class="token punctuation">;</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>x<span class="token punctuation">;</span>
        <span class="token keyword">long</span> l <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span>x<span class="token punctuation">;</span>
        <span class="token keyword">double</span> d <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span>x<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">void</span> <span class="token function">doubleTest</span><span class="token punctuation">(</span><span class="token keyword">double</span> x<span class="token punctuation">,</span> <span class="token keyword">double</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u7B97\u672F\u8FD0\u7B97\u7B26\uFF1A</span>
        x <span class="token operator">=</span> x <span class="token operator">*</span> y<span class="token punctuation">;</span>
        x <span class="token operator">=</span> x <span class="token operator">/</span> y<span class="token punctuation">;</span>
        x <span class="token operator">=</span> x <span class="token operator">%</span> y<span class="token punctuation">;</span>
        x <span class="token operator">=</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>
        x <span class="token operator">=</span> x <span class="token operator">-</span> y<span class="token punctuation">;</span>
        x<span class="token operator">++</span><span class="token punctuation">;</span>
        x<span class="token operator">--</span><span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token operator">+</span>y<span class="token punctuation">;</span>
        x <span class="token operator">=</span> <span class="token operator">-</span>y<span class="token punctuation">;</span>
        <span class="token comment">// \u5173\u7CFB\u548C\u903B\u8F91\u8FD0\u7B97\u7B26\uFF1A</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">&gt;</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">&gt;=</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">&lt;</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">&lt;=</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">==</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">!=</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//- f(!x);</span>
        <span class="token comment">//- f(x &amp;&amp; y);</span>
        <span class="token comment">//- f(x || y);</span>
        <span class="token comment">// \u6309\u4F4D\u8FD0\u7B97\u7B26\uFF1A</span>
        <span class="token comment">//- x = ~y;</span>
        <span class="token comment">//- x = x &amp; y;</span>
        <span class="token comment">//- x = x | y;</span>
        <span class="token comment">//- x = x ^ y;</span>
        <span class="token comment">//- x = x &lt;&lt; 1;</span>
        <span class="token comment">//- x = x &gt;&gt; 1;</span>
        <span class="token comment">//- x = x &gt;&gt;&gt; 1;</span>
        <span class="token comment">// \u8054\u5408\u8D4B\u503C\uFF1A</span>
        x <span class="token operator">+=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">-=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">*=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">/=</span> y<span class="token punctuation">;</span>
        x <span class="token operator">%=</span> y<span class="token punctuation">;</span>
        <span class="token comment">//- x &lt;&lt;= 1;</span>
        <span class="token comment">//- x &gt;&gt;= 1;</span>
        <span class="token comment">//- x &gt;&gt;&gt;= 1;</span>
        <span class="token comment">//- x &amp;= y;</span>
        <span class="token comment">//- x ^= y;</span>
        <span class="token comment">//- x |= y;</span>
        <span class="token comment">// \u7C7B\u578B\u8F6C\u6362\uFF1A</span>
        <span class="token comment">//- boolean bl = (boolean)x;</span>
        <span class="token keyword">char</span> c <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span>x<span class="token punctuation">;</span>
        <span class="token keyword">byte</span> b <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span>x<span class="token punctuation">;</span>
        <span class="token keyword">short</span> s <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span>x<span class="token punctuation">;</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>x<span class="token punctuation">;</span>
        <span class="token keyword">long</span> l <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span>x<span class="token punctuation">;</span>
        <span class="token keyword">float</span> f <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span>x<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u6CE8\u610F</strong> \uFF1A<strong>boolean</strong> \u7C7B\u578B\u7684\u8FD0\u7B97\u662F\u53D7\u9650\u7684\u3002\u4F60\u80FD\u4E3A\u5176\u8D4B\u503C <code>true</code> \u6216 <code>false</code>\uFF0C\u4E5F\u53EF\u6D4B\u8BD5\u5B83\u7684\u503C\u662F\u5426\u662F <code>true</code> \u6216 <code>false</code>\u3002\u4F46\u4F60\u4E0D\u80FD\u5BF9\u5176\u4F5C\u52A0\u51CF\u7B49\u5176\u4ED6\u8FD0\u7B97\u3002</p><p>\u5728 <strong>char</strong>\uFF0C<strong>byte</strong> \u548C <strong>short</strong> \u7C7B\u578B\u4E2D\uFF0C\u6211\u4EEC\u53EF\u4EE5\u770B\u5230\u7B97\u672F\u8FD0\u7B97\u7B26\u7684\u201C\u7C7B\u578B\u8F6C\u6362\u201D\u6548\u679C\u3002\u6211\u4EEC\u5FC5\u987B\u8981\u663E\u5F0F\u5F3A\u5236\u7C7B\u578B\u8F6C\u6362\u624D\u80FD\u5C06\u7ED3\u679C\u91CD\u65B0\u8D4B\u503C\u4E3A\u539F\u59CB\u7C7B\u578B\u3002\u5BF9\u4E8E <strong>int</strong> \u7C7B\u578B\u7684\u8FD0\u7B97\u5219\u4E0D\u7528\u8F6C\u6362\uFF0C\u56E0\u4E3A\u9ED8\u8BA4\u5C31\u662F <strong>int</strong> \u578B\u3002\u867D\u7136\u6211\u4EEC\u4E0D\u7528\u518D\u505C\u4E0B\u6765\u601D\u8003\u8FD9\u4E00\u5207\u662F\u5426\u5B89\u5168\uFF0C\u4F46\u662F\u4E24\u4E2A\u5927\u7684 int \u578B\u6574\u6570\u76F8\u4E58\u65F6\uFF0C\u7ED3\u679C\u6709\u53EF\u80FD\u8D85\u51FA <strong>int</strong> \u578B\u7684\u8303\u56F4\uFF0C\u8FD9\u79CD\u60C5\u51B5\u4E0B\u7ED3\u679C\u4F1A\u53D1\u751F\u6EA2\u51FA\u3002\u4E0B\u9762\u7684\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// operators/Overflow.java</span>
<span class="token comment">// \u5389\u5BB3\u4E86\uFF01\u6570\u636E\u6EA2\u51FA\u4E86\uFF01</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Overflow</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> big <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;big = &quot;</span> <span class="token operator">+</span> big<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> bigger <span class="token operator">=</span> big <span class="token operator">*</span> <span class="token number">4</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;bigger = &quot;</span> <span class="token operator">+</span> bigger<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>big = 2147483647
bigger = -4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7F16\u8BD1\u5668\u6CA1\u6709\u62A5\u9519\u6216\u8B66\u544A\uFF0C\u8FD0\u884C\u65F6\u4E00\u5207\u770B\u8D77\u6765\u90FD\u65E0\u5F02\u5E38\u3002\u8BDA\u7136\uFF0CJava \u662F\u4F18\u79C0\u7684\uFF0C\u4F46\u662F\u8FD8\u4E0D\u8DB3\u591F\u4F18\u79C0\u3002</p><p>\u5BF9\u4E8E <strong>char</strong>\uFF0C<strong>byte</strong> \u6216\u8005 <strong>short</strong>\uFF0C\u6DF7\u5408\u8D4B\u503C\u5E76\u4E0D\u9700\u8981\u7C7B\u578B\u8F6C\u6362\u3002\u5373\u4F7F\u4E3A\u5B83\u4EEC\u6267\u884C\u8F6C\u578B\u64CD\u4F5C\uFF0C\u4E5F\u4F1A\u83B7\u5F97\u4E0E\u76F4\u63A5\u7B97\u672F\u8FD0\u7B97\u76F8\u540C\u7684\u7ED3\u679C\u3002\u53E6\u5916\uFF0C\u7701\u7565\u7C7B\u578B\u8F6C\u6362\u53EF\u4EE5\u4F7F\u4EE3\u7801\u663E\u5F97\u66F4\u52A0\u7B80\u7EC3\u3002\u603B\u4E4B\uFF0C\u9664 <strong>boolean</strong> \u4EE5\u5916\uFF0C\u5176\u4ED6\u4EFB\u4F55\u4E24\u79CD\u57FA\u672C\u7C7B\u578B\u95F4\u90FD\u53EF\u8FDB\u884C\u7C7B\u578B\u8F6C\u6362\u3002\u5F53\u6211\u4EEC\u8FDB\u884C\u5411\u4E0B\u8F6C\u6362\u7C7B\u578B\u65F6\uFF0C\u9700\u8981\u6CE8\u610F\u7ED3\u679C\u7684\u8303\u56F4\u662F\u5426\u6EA2\u51FA\uFF0C\u5426\u5219\u6211\u4EEC\u5C31\u5F88\u53EF\u80FD\u5728\u4E0D\u77E5\u4E0D\u89C9\u4E2D\u4E22\u5931\u7CBE\u5EA6\u3002</p><h2 id="\u672C\u7AE0\u5C0F\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u672C\u7AE0\u5C0F\u7ED3" aria-hidden="true">#</a> \u672C\u7AE0\u5C0F\u7ED3</h2><p>\u5982\u679C\u4F60\u5DF2\u63A5\u89E6\u8FC7\u4E00\u95E8 C \u8BED\u6CD5\u98CE\u683C\u7F16\u7A0B\u8BED\u8A00\uFF0C\u90A3\u4E48\u4F60\u5728\u5B66\u4E60 Java \u7684\u8FD0\u7B97\u7B26\u65F6\u5B9E\u9645\u4E0A\u6CA1\u6709\u4EFB\u4F55\u66F2\u7EBF\u3002\u5982\u679C\u4F60\u89C9\u5F97\u6709\u96BE\u5EA6\uFF0C\u90A3\u4E48\u6211\u63A8\u8350\u4F60\u8981\u5148\u53BB www.OnJava8.com \u89C2\u770B \u300AThinking in C\u300B \u7684\u89C6\u9891\u6559\u7A0B\u6765\u8865\u5145\u4E00\u4E9B\u524D\u7F6E\u77E5\u8BC6\u50A8\u5907\u3002</p><p>[^1]: \u6211\u5728 <em>Pomona College</em> \u5927\u5B66\u8BFB\u8FC7\u4E24\u5E74\u672C\u79D1\uFF0C\u5728\u90A3\u91CC 47 \u88AB\u79F0\u4E4B\u4E3A\u201C\u9B54\u6CD5\u6570\u5B57\u201D\uFF08<em>magic number</em>\uFF09\uFF0C\u8BE6\u89C1 <a href="https://en.wikipedia.org/wiki/47_(number)" target="_blank" rel="noopener noreferrer">\u7EF4\u57FA\u767E\u79D1</a> \u3002</p><p>[^2]: <em>John Kirkham</em> \u8BF4\u8FC7\uFF1A\u201C\u81EA 1960 \u5E74\u6211\u5F00\u59CB\u5728 IBM 1620 \u4E0A\u5F00\u59CB\u7F16\u7A0B\u8D77\uFF0C\u81F3 1970 \u5E74\u4E4B\u95F4\uFF0CFORTRAN \u4E00\u76F4\u90FD\u662F\u4E00\u79CD\u5168\u5927\u5199\u7684\u7F16\u7A0B\u8BED\u8A00\u3002\u8FD9\u53EF\u80FD\u662F\u56E0\u4E3A\u8BB8\u591A\u65E9\u671F\u7684\u8F93\u5165\u8BBE\u5907\u90FD\u662F\u65E7\u7684\u7535\u4F20\u6253\u5B57\u673A\uFF0C\u4F7F\u7528\u4E86 5 \u4F4D\u6CE2\u7279\u7801\uFF0C\u6CA1\u6709\u5C0F\u5199\u5B57\u6BCD\u7684\u529F\u80FD\u3002\u6307\u6570\u7B26\u53F7\u4E2D\u7684 e \u4E5F\u603B\u662F\u5927\u5199\u7684\uFF0C\u5E76\u4E14\u4ECE\u672A\u4E0E\u81EA\u7136\u5BF9\u6570\u5E95\u6570 e \u6DF7\u6DC6\uFF0C\u81EA\u7136\u5BF9\u6570\u5E95\u6570 e \u603B\u662F\u5C0F\u5199\u7684\u3002 e \u7B80\u5355\u5730\u4EE3\u8868\u6307\u6570\uFF0C\u901A\u5E38 10 \u662F\u57FA\u6570\u3002\u90A3\u65F6\uFF0C\u516B\u8FDB\u5236\u4E5F\u88AB\u7A0B\u5E8F\u5458\u5E7F\u6CDB\u4F7F\u7528\u3002\u867D\u7136\u6211\u4ECE\u672A\u89C1\u8FC7\u5B83\u7684\u7528\u6CD5\uFF0C\u4F46\u5982\u679C\u6211\u770B\u5230\u4E00\u4E2A\u6307\u6570\u7B26\u53F7\u7684\u516B\u8FDB\u5236\u6570\uFF0C\u6211\u4F1A\u8BA4\u4E3A\u5B83\u662F\u4EE5 8 \u4E3A\u57FA\u6570\u7684\u3002\u6211\u8BB0\u5F97\u7B2C\u4E00\u6B21\u770B\u5230\u6307\u6570\u4F7F\u7528\u5C0F\u5199\u5B57\u6BCD e \u662F\u5728 20 \u4E16\u7EAA 70 \u5E74\u4EE3\u672B\uFF0C\u6211\u4E5F\u53D1\u73B0\u5B83\u4EE4\u4EBA\u56F0\u60D1\u3002\u8FD9\u4E2A\u95EE\u9898\u51FA\u73B0\u7684\u65F6\u5019\uFF0C\u5C0F\u5199\u5B57\u6BCD\u6084\u6084\u8FDB\u5165\u4E86 Fortran\u3002\u5982\u679C\u4F60\u771F\u7684\u60F3\u4F7F\u7528\u81EA\u7136\u5BF9\u6570\u5E95\uFF0C\u6211\u4EEC\u5B9E\u9645\u4E0A\u6709\u4E00\u4E9B\u51FD\u6570\u8981\u4F7F\u7528\uFF0C\u4F46\u662F\u5B83\u4EEC\u90FD\u662F\u5927\u5199\u7684\u3002\u201D</p><div style="page-break-after:always;"></div>`,125);function U(X,K){const a=c("RouterLink");return l(),i("div",null,[r,s("p",null,[k,d,v,m,b,g,y,x,f,t(a,{to:"/docs/reprint/onjava8/book/Appendix-Passing-and-Returning-Objects.html"},{default:p(()=>[w]),_:1}),h]),q,s("p",null,[j,S,_,B,I,C,J,t(a,{to:"/docs/reprint/onjava8/book/08-Reuse.html"},{default:p(()=>[L]),_:1}),R,T,M,O,E,t(a,{to:"/docs/reprint/onjava8/book/Appendix-Collection-Topics.html"},{default:p(()=>[z]),_:1}),A,N,F,D,V]),P])}var G=e(u,[["render",U],["__file","04-Operators.html.vue"]]);export{G as default};
