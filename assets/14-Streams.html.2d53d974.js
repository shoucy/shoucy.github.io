import{_ as o,r as c,o as l,c as i,a as s,b as t,w as p,e,d as n}from"./app.205a3d76.js";const u={},k=e(`<p>[TOC]</p><h1 id="\u7B2C\u5341\u56DB\u7AE0-\u6D41\u5F0F\u7F16\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u5341\u56DB\u7AE0-\u6D41\u5F0F\u7F16\u7A0B" aria-hidden="true">#</a> \u7B2C\u5341\u56DB\u7AE0 \u6D41\u5F0F\u7F16\u7A0B</h1><blockquote><p>\u96C6\u5408\u4F18\u5316\u4E86\u5BF9\u8C61\u7684\u5B58\u50A8\uFF0C\u800C\u6D41\uFF08Streams\uFF09\u5219\u662F\u5173\u4E8E\u4E00\u7EC4\u7EC4\u5BF9\u8C61\u7684\u5904\u7406\u3002</p></blockquote><p>\u6D41\uFF08Streams\uFF09\u662F\u4E0E\u4EFB\u4F55\u7279\u5B9A\u5B58\u50A8\u673A\u5236\u65E0\u5173\u7684\u5143\u7D20\u5E8F\u5217\u2014\u2014\u5B9E\u9645\u4E0A\uFF0C\u6211\u4EEC\u8BF4\u6D41\u662F &quot;\u6CA1\u6709\u5B58\u50A8 &quot;\u7684\u3002</p><p>\u53D6\u4EE3\u4E86\u5728\u96C6\u5408\u4E2D\u8FED\u4EE3\u5143\u7D20\u7684\u505A\u6CD5\uFF0C\u4F7F\u7528\u6D41\u5373\u53EF\u4ECE\u7BA1\u9053\u4E2D\u63D0\u53D6\u5143\u7D20\u5E76\u5BF9\u5176\u64CD\u4F5C\u3002\u8FD9\u4E9B\u7BA1\u9053\u901A\u5E38\u88AB\u4E32\u8054\u5728\u4E00\u8D77\u5F62\u6210\u4E00\u6574\u5957\u7684\u7BA1\u7EBF\uFF0C\u6765\u5BF9\u6D41\u8FDB\u884C\u64CD\u4F5C\u3002</p><p>\u5728\u5927\u591A\u6570\u60C5\u51B5\u4E0B\uFF0C\u5C06\u5BF9\u8C61\u5B58\u50A8\u5728\u96C6\u5408\u4E2D\u5C31\u662F\u4E3A\u4E86\u5904\u7406\u5B83\u4EEC\uFF0C\u56E0\u6B64\u4F60\u4F1A\u53D1\u73B0\u4F60\u628A\u7F16\u7A0B\u7684\u4E3B\u8981\u7126\u70B9\u4ECE\u96C6\u5408\u8F6C\u79FB\u5230\u4E86\u6D41\u4E0A\u3002</p><p>\u6D41\u7684\u4E00\u4E2A\u6838\u5FC3\u597D\u5904\u662F\uFF0C\u5B83\u4F7F\u5F97\u7A0B\u5E8F\u66F4\u52A0\u77ED\u5C0F\u5E76\u4E14\u66F4\u6613\u7406\u89E3\u3002\u5F53 Lambda \u8868\u8FBE\u5F0F\u548C\u65B9\u6CD5\u5F15\u7528\uFF08method references\uFF09\u548C\u6D41\u4E00\u8D77\u4F7F\u7528\u7684\u65F6\u5019\u4F1A\u8BA9\u4EBA\u611F\u89C9\u81EA\u6210\u4E00\u4F53\u3002\u6D41\u4F7F\u5F97 Java 8 \u66F4\u5177\u5438\u5F15\u529B\u3002</p><p>\u4E3E\u4E2A\u4F8B\u5B50\uFF0C\u5047\u5982\u4F60\u8981\u968F\u673A\u5C55\u793A 5 \u81F3 20 \u4E4B\u95F4\u4E0D\u91CD\u590D\u7684\u6574\u6570\u5E76\u8FDB\u884C\u6392\u5E8F\u3002\u4F60\u8981\u5BF9\u5B83\u4EEC\u8FDB\u884C\u6392\u5E8F\u7684\u4E8B\u5B9E\uFF0C\u4F1A\u4F7F\u4F60\u9996\u5148\u5173\u6CE8\u9009\u7528\u54EA\u4E2A\u6709\u5E8F\u96C6\u5408\uFF0C\u7136\u540E\u56F4\u7ED5\u8FD9\u4E2A\u96C6\u5408\u8FDB\u884C\u540E\u7EED\u7684\u64CD\u4F5C\u3002\u4F46\u662F\u4F7F\u7528\u6D41\u5F0F\u7F16\u7A0B\uFF0C\u4F60\u5C31\u53EF\u4EE5\u7B80\u5355\u9648\u8FF0\u4F60\u8981\u505A\u4EC0\u4E48\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/Randoms.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Randoms</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token number">47</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">ints</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">distinct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">sorted</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>6
10
13
16
17
18
19
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9996\u5148\uFF0C\u6211\u4EEC\u7ED9 <strong>Random</strong> \u5BF9\u8C61\u4E00\u4E2A\u79CD\u5B50\u503C47\uFF08\u4EE5\u4FBF\u7A0B\u5E8F\u518D\u6B21\u8FD0\u884C\u65F6\u4EA7\u751F\u76F8\u540C\u7684\u8F93\u51FA\uFF09\u3002<code>ints()</code> \u65B9\u6CD5\u4EA7\u751F\u4E00\u4E2A\u6D41\u5E76\u4E14 <code>ints()</code> \u65B9\u6CD5\u6709\u591A\u79CD\u65B9\u5F0F\u7684\u91CD\u8F7D \u2014\u2014 \u4E24\u4E2A\u53C2\u6570\u9650\u5B9A\u4E86\u4EA7\u751F\u7684\u6570\u503C\u7684\u8FB9\u754C\u3002\u8FD9\u5C06\u751F\u6210\u4E00\u4E2A\u968F\u673A\u6574\u6570\u6D41\u3002\u6211\u4EEC\u7528 <em>\u6D41\u7684\u4E2D\u95F4\u64CD\u4F5C</em>\uFF08intermediate stream operation\uFF09 <code>distinct()</code> \u4F7F\u6D41\u4E2D\u7684\u6574\u6570\u4E0D\u91CD\u590D\uFF0C\u7136\u540E\u4F7F\u7528 <code>limit()</code> \u65B9\u6CD5\u83B7\u53D6\u524D 7 \u4E2A\u5143\u7D20\u3002\u63A5\u4E0B\u6765\u4F7F\u7528 <code>sorted()</code> \u65B9\u6CD5\u6392\u5E8F\u3002\u6700\u7EC8\u4F7F\u7528 <code>forEach()</code> \u65B9\u6CD5\u904D\u5386\u8F93\u51FA\uFF0C\u5B83\u6839\u636E\u4F20\u9012\u7ED9\u5B83\u7684\u51FD\u6570\u5BF9\u6D41\u4E2D\u7684\u6BCF\u4E2A\u5BF9\u8C61\u6267\u884C\u64CD\u4F5C\u3002\u5728\u8FD9\u91CC\uFF0C\u6211\u4EEC\u4F20\u9012\u4E86\u4E00\u4E2A\u53EF\u4EE5\u5728\u63A7\u5236\u53F0\u663E\u793A\u6BCF\u4E2A\u5143\u7D20\u7684\u65B9\u6CD5\u5F15\u7528\uFF1A<code>System.out::println</code> \u3002</p><p>\u6CE8\u610F <code>Randoms.java</code> \u4E2D\u6CA1\u6709\u58F0\u660E\u4EFB\u4F55\u53D8\u91CF\u3002\u6D41\u53EF\u4EE5\u5728\u4E0D\u66FE\u4F7F\u7528\u8D4B\u503C\u6216\u53EF\u53D8\u6570\u636E\u7684\u60C5\u51B5\u4E0B\uFF0C\u5BF9\u6709\u72B6\u6001\u7684\u7CFB\u7EDF\u5EFA\u6A21\uFF0C\u8FD9\u975E\u5E38\u6709\u7528\u3002</p><p><em>\u58F0\u660E\u5F0F\u7F16\u7A0B</em>\uFF08Declarative programming\uFF09\u662F\u4E00\u79CD\u7F16\u7A0B\u98CE\u683C\u2014\u2014\u5B83\u58F0\u660E\u4E86\u8981\u505A\u4EC0\u4E48\uFF0C\u800C\u4E0D\u662F\u6307\u660E\uFF08\u6BCF\u4E00\u6B65\uFF09\u5982\u4F55\u505A\u3002\u800C\u8FD9\u6B63\u662F\u6211\u4EEC\u5728\u51FD\u6570\u5F0F\u7F16\u7A0B\u4E2D\u6240\u770B\u5230\u7684\uFF08\u7F16\u7A0B\u98CE\u683C\uFF09\u3002\u4F60\u4F1A\u6CE8\u610F\u5230\uFF0C\u547D\u4EE4\u5F0F\uFF08Imperative\uFF09\u7F16\u7A0B\u7684\u5F62\u5F0F\uFF08\u6307\u660E\u6BCF\u4E00\u6B65\u5982\u4F55\u505A\uFF09\u4F1A\u66F4\u96BE\u7406\u89E3\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/ImperativeRandoms.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ImperativeRandoms</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Random</span> rand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token number">47</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SortedSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> rints <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>rints<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">7</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> r <span class="token operator">=</span> rand<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>r <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>
            rints<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>rints<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>[7, 8, 9, 11, 13, 15, 18]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5728 <code>Randoms.java</code> \u4E2D\uFF0C\u6211\u4EEC\u65E0\u9700\u5B9A\u4E49\u4EFB\u4F55\u53D8\u91CF\uFF0C\u4F46\u5728\u8FD9\u91CC\u6211\u4EEC\u5B9A\u4E49\u4E86 3 \u4E2A\u53D8\u91CF\uFF1A <code>rand</code>\uFF0C<code>rints</code> \u548C <code>r</code>\u3002\u7531\u4E8E <code>nextInt()</code> \u65B9\u6CD5\u6CA1\u6709\u4E0B\u9650\u7684\u539F\u56E0\uFF08\u5176\u5185\u7F6E\u7684\u4E0B\u9650\u6C38\u8FDC\u4E3A 0\uFF09\uFF0C\u8FD9\u6BB5\u4EE3\u7801\u5B9E\u73B0\u8D77\u6765\u66F4\u590D\u6742\u3002\u6240\u4EE5\u6211\u4EEC\u8981\u751F\u6210\u989D\u5916\u7684\u503C\u6765\u8FC7\u6EE4\u5C0F\u4E8E 5 \u7684\u7ED3\u679C\u3002</p><p>\u6CE8\u610F\uFF0C\u4F60\u5FC5\u987B\u7814\u7A76\u4EE3\u7801\u624D\u80FD\u641E\u6E05\u695A<code>ImperativeRandoms.java</code>\u7A0B\u5E8F\u5728\u505A\u4EC0\u4E48\u3002\u800C\u5728 <code>Randoms.java</code> \u4E2D\uFF0C\u4EE3\u7801\u4F1A\u76F4\u63A5\u544A\u8BC9\u4F60\u5B83\u5728\u505A\u4EC0\u4E48\u3002\u8FD9\u79CD\u8BED\u4E49\u7684\u6E05\u6670\u6027\u662F\u4F7F\u7528Java 8 \u6D41\u5F0F\u7F16\u7A0B\u7684\u91CD\u8981\u539F\u56E0\u4E4B\u4E00\u3002</p>`,19),r=n("\u50CF\u5728 "),d=s("code",null,"ImperativeRandoms.java",-1),m=n(" \u4E2D\u90A3\u6837\u663E\u5F0F\u5730\u7F16\u5199\u8FED\u4EE3\u8FC7\u7A0B\u7684\u65B9\u5F0F\u79F0\u4E3A"),v=s("em",null,"\u5916\u90E8\u8FED\u4EE3\uFF08external iteration\uFF09",-1),b=n("\u3002\u800C\u5728 "),g=s("code",null,"Randoms.java",-1),f=n(" \u4E2D\uFF0C\u4F60\u770B\u4E0D\u5230\u4EFB\u4F55\u4E0A\u8FF0\u7684\u8FED\u4EE3\u8FC7\u7A0B\uFF0C\u6240\u4EE5\u5B83\u88AB\u79F0\u4E3A"),y=s("em",null,"\u5185\u90E8\u8FED\u4EE3\uFF08internal iteration\uFF09",-1),w=n("\uFF0C\u8FD9\u662F\u6D41\u5F0F\u7F16\u7A0B\u7684\u4E00\u4E2A\u6838\u5FC3\u7279\u5F81\u3002\u5185\u90E8\u8FED\u4EE3\u4EA7\u751F\u7684\u4EE3\u7801\u53EF\u8BFB\u6027\u66F4\u5F3A\uFF0C\u800C\u4E14\u80FD\u66F4\u7B80\u5355\u7684\u4F7F\u7528\u591A\u6838\u5904\u7406\u5668\u3002\u901A\u8FC7\u653E\u5F03\u5BF9\u8FED\u4EE3\u8FC7\u7A0B\u7684\u63A7\u5236\uFF0C\u53EF\u4EE5\u628A\u63A7\u5236\u6743\u4EA4\u7ED9\u5E76\u884C\u5316\u673A\u5236\u3002\u6211\u4EEC\u5C06\u5728"),h=n("\u5E76\u53D1\u7F16\u7A0B"),S=n("\u4E00\u7AE0\u4E2D\u5B66\u4E60\u8FD9\u90E8\u5206\u5185\u5BB9\u3002"),q=s("p",null,"\u53E6\u4E00\u4E2A\u91CD\u8981\u65B9\u9762\uFF0C\u6D41\u662F\u61D2\u52A0\u8F7D\u7684\u3002\u8FD9\u4EE3\u8868\u7740\u5B83\u53EA\u5728\u7EDD\u5BF9\u5FC5\u8981\u65F6\u624D\u8BA1\u7B97\u3002\u4F60\u53EF\u4EE5\u5C06\u6D41\u770B\u4F5C\u201C\u5EF6\u8FDF\u5217\u8868\u201D\u3002\u7531\u4E8E\u8BA1\u7B97\u5EF6\u8FDF\uFF0C\u6D41\u4F7F\u6211\u4EEC\u80FD\u591F\u8868\u793A\u975E\u5E38\u5927\uFF08\u751A\u81F3\u65E0\u9650\uFF09\u7684\u5E8F\u5217\uFF0C\u800C\u4E0D\u9700\u8981\u8003\u8651\u5185\u5B58\u95EE\u9898\u3002",-1),j=s("h2",{id:"\u6D41\u652F\u6301",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u6D41\u652F\u6301","aria-hidden":"true"},"#"),n(" \u6D41\u652F\u6301")],-1),x=s("p",null,"Java \u8BBE\u8BA1\u8005\u9762\u4E34\u7740\u8FD9\u6837\u4E00\u4E2A\u96BE\u9898\uFF1A\u73B0\u5B58\u7684\u5927\u91CF\u7C7B\u5E93\u4E0D\u4EC5\u4E3A Java \u6240\u7528\uFF0C\u540C\u65F6\u4E5F\u88AB\u5E94\u7528\u5728\u6574\u4E2A Java \u751F\u6001\u5708\u6570\u767E\u4E07\u884C\u7684\u4EE3\u7801\u4E2D\u3002\u5982\u4F55\u5C06\u4E00\u4E2A\u5168\u65B0\u7684\u6D41\u7684\u6982\u5FF5\u878D\u5165\u5230\u73B0\u6709\u7C7B\u5E93\u4E2D\u5462\uFF1F",-1),O=s("p",null,[n("\u6BD4\u5982\u5728 "),s("strong",null,"Random"),n(" \u4E2D\u6DFB\u52A0\u66F4\u591A\u7684\u65B9\u6CD5\u3002\u53EA\u8981\u4E0D\u6539\u53D8\u539F\u6709\u7684\u65B9\u6CD5\uFF0C\u73B0\u6709\u4EE3\u7801\u5C31\u4E0D\u4F1A\u53D7\u5230\u5E72\u6270\u3002")],-1),_=s("p",null,"\u4E00\u4E2A\u5927\u7684\u6311\u6218\u6765\u81EA\u4E8E\u4F7F\u7528\u63A5\u53E3\u7684\u5E93\u3002\u96C6\u5408\u7C7B\u662F\u5176\u4E2D\u5173\u952E\u7684\u4E00\u90E8\u5206\uFF0C\u56E0\u4E3A\u4F60\u60F3\u628A\u96C6\u5408\u8F6C\u4E3A\u6D41\u3002\u4F46\u662F\u5982\u679C\u4F60\u5C06\u4E00\u4E2A\u65B0\u65B9\u6CD5\u6DFB\u52A0\u5230\u63A5\u53E3\uFF0C\u90A3\u5C31\u7834\u574F\u4E86\u6BCF\u4E00\u4E2A\u5B9E\u73B0\u63A5\u53E3\u7684\u7C7B\uFF0C\u56E0\u4E3A\u8FD9\u4E9B\u7C7B\u90FD\u6CA1\u6709\u5B9E\u73B0\u4F60\u6DFB\u52A0\u7684\u65B0\u65B9\u6CD5\u3002",-1),E=n("Java 8 \u91C7\u7528\u7684\u89E3\u51B3\u65B9\u6848\u662F\uFF1A\u5728"),F=n("\u63A5\u53E3"),I=n("\u4E2D\u6DFB\u52A0\u88AB "),C=s("code",null,"default",-1),R=n("\uFF08"),T=s("code",null,"\u9ED8\u8BA4",-1),P=n("\uFF09\u4FEE\u9970\u7684\u65B9\u6CD5\u3002\u901A\u8FC7\u8FD9\u79CD\u65B9\u6848\uFF0C\u8BBE\u8BA1\u8005\u4EEC\u53EF\u4EE5\u5C06\u6D41\u5F0F\uFF08"),B=s("em",null,"stream",-1),M=n("\uFF09\u65B9\u6CD5\u5E73\u6ED1\u5730\u5D4C\u5165\u5230\u73B0\u6709\u7C7B\u4E2D\u3002\u6D41\u65B9\u6CD5\u9884\u7F6E\u7684\u64CD\u4F5C\u51E0\u4E4E\u5DF2\u6EE1\u8DB3\u4E86\u6211\u4EEC\u5E73\u5E38\u6240\u6709\u7684\u9700\u6C42\u3002\u6D41\u64CD\u4F5C\u7684\u7C7B\u578B\u6709\u4E09\u79CD\uFF1A\u521B\u5EFA\u6D41\uFF0C\u4FEE\u6539\u6D41\u5143\u7D20\uFF08\u4E2D\u95F4\u64CD\u4F5C\uFF0C Intermediate Operations\uFF09\uFF0C\u6D88\u8D39\u6D41\u5143\u7D20\uFF08\u7EC8\u7AEF\u64CD\u4F5C\uFF0C Terminal Operations\uFF09\u3002\u6700\u540E\u4E00\u79CD\u7C7B\u578B\u901A\u5E38\u610F\u5473\u7740\u6536\u96C6\u6D41\u5143\u7D20\uFF08\u901A\u5E38\u662F\u6C47\u5165\u4E00\u4E2A\u96C6\u5408\uFF09\u3002"),N=e(`<p>\u4E0B\u9762\u6211\u4EEC\u6765\u770B\u4E0B\u6BCF\u79CD\u7C7B\u578B\u7684\u6D41\u64CD\u4F5C\u3002</p><h2 id="\u6D41\u521B\u5EFA" tabindex="-1"><a class="header-anchor" href="#\u6D41\u521B\u5EFA" aria-hidden="true">#</a> \u6D41\u521B\u5EFA</h2><p>\u4F60\u53EF\u4EE5\u901A\u8FC7 <code>Stream.of()</code> \u5F88\u5BB9\u6613\u5730\u5C06\u4E00\u7EC4\u5143\u7D20\u8F6C\u5316\u6210\u4E3A\u6D41\uFF08<code>Bubble</code> \u7C7B\u5728\u672C\u7AE0\u7684\u540E\u9762\u5B9A\u4E49\uFF09\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/StreamOf.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StreamOf</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Bubble</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Bubble</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Bubble</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;It&#39;s &quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;a &quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;wonderful &quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;day &quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;for &quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;pie!&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">print</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">3.14159</span><span class="token punctuation">,</span> <span class="token number">2.718</span><span class="token punctuation">,</span> <span class="token number">1.618</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Bubble(1)
Bubble(2)
Bubble(3)
It&#39;s a wonderful day for pie!
3.14159
2.718
1.618
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9664\u6B64\u4E4B\u5916\uFF0C\u6BCF\u4E2A\u96C6\u5408\u90FD\u53EF\u4EE5\u901A\u8FC7\u8C03\u7528 <code>stream()</code> \u65B9\u6CD5\u6765\u4EA7\u751F\u4E00\u4E2A\u6D41\u3002\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/CollectionToStream.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CollectionToStream</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Bubble</span><span class="token punctuation">&gt;</span></span> bubbles <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Bubble</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Bubble</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Bubble</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>bubbles<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">mapToInt</span><span class="token punctuation">(</span>b <span class="token operator">-&gt;</span> b<span class="token punctuation">.</span>i<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> w <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">&quot;It&#39;s a wonderful day for pie!&quot;</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        w<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
         <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>x <span class="token operator">-&gt;</span> x <span class="token operator">+</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span>
         <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">print</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Double</span><span class="token punctuation">&gt;</span></span> m <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        m<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;pi&quot;</span><span class="token punctuation">,</span> <span class="token number">3.14159</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        m<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;e&quot;</span><span class="token punctuation">,</span> <span class="token number">2.718</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        m<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;phi&quot;</span><span class="token punctuation">,</span> <span class="token number">1.618</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        m<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>e <span class="token operator">-&gt;</span> e<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;: &quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>6
a pie! It&#39;s for wonderful day
phi: 1.618
e: 2.718
pi: 3.14159
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u521B\u5EFA <code>List&lt;Bubble&gt;</code> \u5BF9\u8C61\u4E4B\u540E\uFF0C\u6211\u4EEC\u53EA\u9700\u8981\u7B80\u5355\u5730\u8C03\u7528\u6240\u6709\u96C6\u5408\u4E2D\u90FD\u6709\u7684 <code>stream()</code>\u3002\u4E2D\u95F4\u64CD\u4F5C <code>map()</code> \u4F1A\u83B7\u53D6\u6D41\u4E2D\u7684\u6240\u6709\u5143\u7D20\uFF0C\u5E76\u4E14\u5BF9\u6D41\u4E2D\u5143\u7D20\u5E94\u7528\u64CD\u4F5C\u4ECE\u800C\u4EA7\u751F\u65B0\u7684\u5143\u7D20\uFF0C\u5E76\u5C06\u5176\u4F20\u9012\u5230\u540E\u7EED\u7684\u6D41\u4E2D\u3002\u901A\u5E38 <code>map()</code> \u4F1A\u83B7\u53D6\u5BF9\u8C61\u5E76\u4EA7\u751F\u65B0\u7684\u5BF9\u8C61\uFF0C\u4F46\u5728\u8FD9\u91CC\u4EA7\u751F\u4E86\u7279\u6B8A\u7684\u7528\u4E8E\u6570\u503C\u7C7B\u578B\u7684\u6D41\u3002\u4F8B\u5982\uFF0C<code>mapToInt()</code> \u65B9\u6CD5\u5C06\u4E00\u4E2A\u5BF9\u8C61\u6D41\uFF08object stream\uFF09\u8F6C\u6362\u6210\u4E3A\u5305\u542B\u6574\u578B\u6570\u5B57\u7684 <code>IntStream</code>\u3002\u540C\u6837\uFF0C\u9488\u5BF9 <code>Float</code> \u548C <code>Double</code> \u4E5F\u6709\u7C7B\u4F3C\u540D\u5B57\u7684\u64CD\u4F5C\u3002</p><p>\u6211\u4EEC\u901A\u8FC7\u8C03\u7528\u5B57\u7B26\u4E32\u7684 <code>split()</code>\uFF08\u8BE5\u65B9\u6CD5\u4F1A\u6839\u636E\u53C2\u6570\u6765\u62C6\u5206\u5B57\u7B26\u4E32\uFF09\u6765\u83B7\u53D6\u5143\u7D20\u7528\u4E8E\u5B9A\u4E49\u53D8\u91CF <code>w</code>\u3002\u7A0D\u540E\u4F60\u4F1A\u77E5\u9053 <code>split()</code> \u53C2\u6570\u53EF\u4EE5\u662F\u5341\u5206\u590D\u6742\uFF0C\u4F46\u5728\u8FD9\u91CC\u6211\u4EEC\u53EA\u662F\u6839\u636E\u7A7A\u683C\u6765\u5206\u5272\u5B57\u7B26\u4E32\u3002</p><p>\u4E3A\u4E86\u4ECE <strong>Map</strong> \u96C6\u5408\u4E2D\u4EA7\u751F\u6D41\u6570\u636E\uFF0C\u6211\u4EEC\u9996\u5148\u8C03\u7528 <code>entrySet()</code> \u4EA7\u751F\u4E00\u4E2A\u5BF9\u8C61\u6D41\uFF0C\u6BCF\u4E2A\u5BF9\u8C61\u90FD\u5305\u542B\u4E00\u4E2A <code>key</code> \u952E\u4EE5\u53CA\u4E0E\u5176\u76F8\u5173\u8054\u7684 <code>value</code> \u503C\u3002\u7136\u540E\u5206\u522B\u8C03\u7528 <code>getKey()</code> \u548C <code>getValue()</code> \u83B7\u53D6\u503C\u3002</p><h3 id="\u968F\u673A\u6570\u6D41" tabindex="-1"><a class="header-anchor" href="#\u968F\u673A\u6570\u6D41" aria-hidden="true">#</a> \u968F\u673A\u6570\u6D41</h3><p><code>Random</code> \u7C7B\u88AB\u4E00\u7EC4\u751F\u6210\u6D41\u7684\u65B9\u6CD5\u589E\u5F3A\u4E86\u3002\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/RandomGenerators.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RandomGenerators</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">void</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token class-name">Stream</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> stream<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        stream
        <span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;++++++++&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Random</span> rand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token number">47</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">show</span><span class="token punctuation">(</span>rand<span class="token punctuation">.</span><span class="token function">ints</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">boxed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">show</span><span class="token punctuation">(</span>rand<span class="token punctuation">.</span><span class="token function">longs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">boxed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">show</span><span class="token punctuation">(</span>rand<span class="token punctuation">.</span><span class="token function">doubles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">boxed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u63A7\u5236\u4E0A\u9650\u548C\u4E0B\u9650\uFF1A</span>
        <span class="token function">show</span><span class="token punctuation">(</span>rand<span class="token punctuation">.</span><span class="token function">ints</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">boxed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">show</span><span class="token punctuation">(</span>rand<span class="token punctuation">.</span><span class="token function">longs</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">boxed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">show</span><span class="token punctuation">(</span>rand<span class="token punctuation">.</span><span class="token function">doubles</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">boxed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u63A7\u5236\u6D41\u5927\u5C0F\uFF1A</span>
        <span class="token function">show</span><span class="token punctuation">(</span>rand<span class="token punctuation">.</span><span class="token function">ints</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">boxed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">show</span><span class="token punctuation">(</span>rand<span class="token punctuation">.</span><span class="token function">longs</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">boxed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">show</span><span class="token punctuation">(</span>rand<span class="token punctuation">.</span><span class="token function">doubles</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">boxed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u63A7\u5236\u6D41\u7684\u5927\u5C0F\u548C\u754C\u9650</span>
        <span class="token function">show</span><span class="token punctuation">(</span>rand<span class="token punctuation">.</span><span class="token function">ints</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">boxed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">show</span><span class="token punctuation">(</span>rand<span class="token punctuation">.</span><span class="token function">longs</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">boxed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">show</span><span class="token punctuation">(</span>rand<span class="token punctuation">.</span><span class="token function">doubles</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">11.5</span><span class="token punctuation">,</span> <span class="token number">12.3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">boxed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>-1172028779
1717241110
-2014573909
229403722
++++++++
2955289354441303771
3476817843704654257
-8917117694134521474
4941259272818818752
++++++++
0.2613610344283964
0.0508673570556899
0.8037155449603999
0.7620665811558285
++++++++
16
10
11
12
++++++++
65
99
54
58
++++++++
29.86777681078574
24.83968447804611
20.09247112332014
24.046793846338723
++++++++
1169976606
1947946283
++++++++
2970202997824602425
-2325326920272830366
++++++++
0.7024254510631527
0.6648552384607359
++++++++
6
7
7
++++++++
17
12
20
++++++++
12.27872414236691
11.732085449736195
12.196509449817267
++++++++
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E3A\u4E86\u6D88\u9664\u5197\u4F59\u4EE3\u7801\uFF0C\u6211\u521B\u5EFA\u4E86\u4E00\u4E2A\u6CDB\u578B\u65B9\u6CD5 <code>show(Stream&lt;T&gt; stream)</code> \uFF08\u5728\u8BB2\u89E3\u6CDB\u578B\u4E4B\u524D\u5C31\u4F7F\u7528\u8FD9\u4E2A\u7279\u6027\uFF0C\u786E\u5B9E\u6709\u70B9\u4F5C\u5F0A\uFF0C\u4F46\u662F\u56DE\u62A5\u662F\u503C\u5F97\u7684\uFF09\u3002\u7C7B\u578B\u53C2\u6570 <code>T</code> \u53EF\u4EE5\u662F\u4EFB\u4F55\u7C7B\u578B\uFF0C\u6240\u4EE5\u8FD9\u4E2A\u65B9\u6CD5\u5BF9 <strong>Integer</strong>\u3001<strong>Long</strong> \u548C <strong>Double</strong> \u7C7B\u578B\u90FD\u751F\u6548\u3002\u4F46\u662F <strong>Random</strong> \u7C7B\u53EA\u80FD\u751F\u6210\u57FA\u672C\u7C7B\u578B <strong>int</strong>\uFF0C <strong>long</strong>\uFF0C <strong>double</strong> \u7684\u6D41\u3002\u5E78\u8FD0\u7684\u662F\uFF0C <code>boxed()</code> \u6D41\u64CD\u4F5C\u5C06\u4F1A\u81EA\u52A8\u5730\u628A\u57FA\u672C\u7C7B\u578B\u5305\u88C5\u6210\u4E3A\u5BF9\u5E94\u7684\u88C5\u7BB1\u7C7B\u578B\uFF0C\u4ECE\u800C\u4F7F\u5F97 <code>show()</code> \u80FD\u591F\u63A5\u53D7\u6D41\u3002</p><p>\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528 <strong>Random</strong> \u4E3A\u4EFB\u610F\u5BF9\u8C61\u96C6\u5408\u521B\u5EFA <strong>Supplier</strong>\u3002\u4ECE\u6587\u672C\u6587\u4EF6\u63D0\u4F9B\u5B57\u7B26\u4E32\u5BF9\u8C61\u7684\u4F8B\u5B50\u5982\u4E0B\u3002</p><p>Cheese.dat \u6587\u4EF6\u5185\u5BB9\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>// streams/Cheese.dat
Not much of a cheese shop really, is it?
Finest in the district, sir.
And what leads you to that conclusion?
Well, it&#39;s so clean.
It&#39;s certainly uncontaminated by cheese.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u901A\u8FC7 <strong>File</strong> \u7C7B\u5C06 Cheese.dat \u6587\u4EF6\u7684\u6240\u6709\u884C\u8BFB\u53D6\u5230 <code>List&lt;String&gt;</code> \u4E2D\u3002\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/RandomWords.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>function<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RandomWords</span> <span class="token keyword">implements</span> <span class="token class-name">Supplier</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> words <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Random</span> rand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token number">47</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">RandomWords</span><span class="token punctuation">(</span><span class="token class-name">String</span> fname<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> lines <span class="token operator">=</span> <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">readAllLines</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>fname<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u7565\u8FC7\u7B2C\u4E00\u884C</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> line <span class="token operator">:</span> lines<span class="token punctuation">.</span><span class="token function">subList</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> lines<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> word <span class="token operator">:</span> line<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;[ .?,]+&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                words<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>word<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> words<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>rand<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span>words<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> words<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">joining</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
            <span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RandomWords</span><span class="token punctuation">(</span><span class="token string">&quot;Cheese.dat&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">joining</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>it shop sir the much cheese by conclusion district is
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5728\u8FD9\u91CC\u53EF\u4EE5\u770B\u5230 <code>split()</code> \u66F4\u590D\u6742\u7684\u8FD0\u7528\u3002\u5728\u6784\u9020\u5668\u91CC\uFF0C\u6BCF\u4E00\u884C\u90FD\u88AB <code>split()</code> \u901A\u8FC7\u65B9\u62EC\u53F7\u5185\u7684\u7A7A\u683C\u6216\u5176\u5B83\u6807\u70B9\u7B26\u53F7\u5206\u5272\u3002\u5728\u65B9\u62EC\u53F7\u540E\u9762\u7684 <code>+</code> \u8868\u793A <code>+</code> \u524D\u9762\u7684\u4E1C\u897F\u53EF\u4EE5\u51FA\u73B0\u4E00\u6B21\u6216\u8005\u591A\u6B21\uFF08\u6B63\u5219\u8868\u8FBE\u5F0F\uFF09\u3002</p><p>\u4F60\u4F1A\u53D1\u73B0\u6784\u9020\u51FD\u6570\u4F7F\u7528\u547D\u4EE4\u5F0F\u7F16\u7A0B\uFF08\u5916\u90E8\u8FED\u4EE3\uFF09\u8FDB\u884C\u5FAA\u73AF\u3002\u5728\u4EE5\u540E\u7684\u4F8B\u5B50\u4E2D\uFF0C\u4F60\u4F1A\u770B\u5230\u6211\u4EEC\u662F\u5982\u4F55\u53BB\u9664\u547D\u4EE4\u5F0F\u7F16\u7A0B\u3002\u8FD9\u79CD\u65E7\u7684\u5F62\u5F0F\u867D\u4E0D\u662F\u7279\u522B\u7CDF\u7CD5\uFF0C\u4F46\u4F7F\u7528\u6D41\u4F1A\u8BA9\u4EBA\u611F\u89C9\u66F4\u597D\u3002</p><p>\u5728<code>toString()</code> \u548C<code>main()</code>\u65B9\u6CD5\u4E2D\u4F60\u770B\u5230\u4E86 <code>collect()</code> \u64CD\u4F5C\uFF0C\u5B83\u6839\u636E\u53C2\u6570\u6765\u7ED3\u5408\u6240\u6709\u7684\u6D41\u5143\u7D20\u3002\u5F53\u4F60\u7528 <code>Collectors.joining()</code>\u4F5C\u4E3A <code>collect()</code> \u7684\u53C2\u6570\u65F6\uFF0C\u5C06\u5F97\u5230\u4E00\u4E2A<code>String</code> \u7C7B\u578B\u7684\u7ED3\u679C\uFF0C\u8BE5\u7ED3\u679C\u662F\u6D41\u4E2D\u7684\u6240\u6709\u5143\u7D20\u88AB<code>joining()</code>\u7684\u53C2\u6570\u9694\u5F00\u3002\u8FD8\u6709\u5F88\u591A\u4E0D\u540C\u7684 <code>Collectors</code> \u7528\u4E8E\u4EA7\u751F\u4E0D\u540C\u7684\u7ED3\u679C\u3002</p><p>\u5728\u4E3B\u65B9\u6CD5\u4E2D\uFF0C\u6211\u4EEC\u63D0\u524D\u770B\u5230\u4E86 <strong>Stream.</strong><code>generate()</code> \u7684\u7528\u6CD5\uFF0C\u5B83\u53EF\u4EE5\u628A\u4EFB\u610F <code>Supplier&lt;T&gt;</code> \u7528\u4E8E\u751F\u6210 <code>T</code> \u7C7B\u578B\u7684\u6D41\u3002</p><h3 id="int-\u7C7B\u578B\u7684\u8303\u56F4" tabindex="-1"><a class="header-anchor" href="#int-\u7C7B\u578B\u7684\u8303\u56F4" aria-hidden="true">#</a> int \u7C7B\u578B\u7684\u8303\u56F4</h3><p><code>IntStream</code> \u7C7B\u63D0\u4F9B\u4E86 <code>range()</code> \u65B9\u6CD5\u7528\u4E8E\u751F\u6210\u6574\u578B\u5E8F\u5217\u7684\u6D41\u3002\u7F16\u5199\u5FAA\u73AF\u65F6\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u4F1A\u66F4\u52A0\u4FBF\u5229\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/Ranges.java</span>
<span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token import static"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token class-name">IntStream</span><span class="token punctuation">.</span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Ranges</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4F20\u7EDF\u65B9\u6CD5:</span>
        <span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
            result <span class="token operator">+=</span> i<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// for-in \u5FAA\u73AF:</span>
        result <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">:</span> <span class="token function">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            result <span class="token operator">+=</span> i<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u4F7F\u7528\u6D41:</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>145
145
145
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u4E3B\u65B9\u6CD5\u4E2D\u7684\u7B2C\u4E00\u79CD\u65B9\u5F0F\u662F\u6211\u4EEC\u4F20\u7EDF\u7F16\u5199 <code>for</code> \u5FAA\u73AF\u7684\u65B9\u5F0F\uFF1B\u7B2C\u4E8C\u79CD\u65B9\u5F0F\uFF0C\u6211\u4EEC\u4F7F\u7528 <code>range()</code> \u521B\u5EFA\u4E86\u6D41\u5E76\u5C06\u5176\u8F6C\u5316\u4E3A\u6570\u7EC4\uFF0C\u7136\u540E\u5728 <code>for-in</code> \u4EE3\u7801\u5757\u4E2D\u4F7F\u7528\u3002\u4F46\u662F\uFF0C\u5982\u679C\u4F60\u80FD\u50CF\u7B2C\u4E09\u79CD\u65B9\u6CD5\u90A3\u6837\u5168\u7A0B\u4F7F\u7528\u6D41\u662F\u66F4\u597D\u7684\u3002\u6211\u4EEC\u5BF9\u8303\u56F4\u4E2D\u7684\u6570\u5B57\u8FDB\u884C\u6C42\u548C\u3002\u5728\u6D41\u4E2D\u53EF\u4EE5\u5F88\u65B9\u4FBF\u7684\u4F7F\u7528 <code>sum()</code> \u64CD\u4F5C\u6C42\u548C\u3002</p><p>\u6CE8\u610F <strong>IntStream.</strong><code>range()</code> \u76F8\u6BD4 <code>onjava.Range.range()</code> \u53D7\u66F4\u591A\u9650\u5236\u3002\u8FD9\u662F\u7531\u4E8E\u5176\u53EF\u9009\u7684\u7B2C\u4E09\u4E2A\u53C2\u6570\uFF0C\u540E\u8005\u5141\u8BB8\u6B65\u957F\u5927\u4E8E 1\uFF0C\u5E76\u4E14\u53EF\u4EE5\u4ECE\u5927\u5230\u5C0F\u6765\u751F\u6210\u3002</p><p>\u5B9E\u7528\u5C0F\u529F\u80FD <code>repeat()</code> \u53EF\u4EE5\u7528\u6765\u66FF\u6362\u7B80\u5355\u7684 <code>for</code> \u5FAA\u73AF\u3002\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// onjava/Repeat.java</span>
<span class="token keyword">package</span> <span class="token namespace">onjava</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token import static"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token class-name">IntStream</span><span class="token punctuation">.</span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Repeat</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">repeat</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">,</span> <span class="token class-name">Runnable</span> action<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>i <span class="token operator">-&gt;</span> action<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4EA7\u751F\u7684\u5FAA\u73AF\u66F4\u52A0\u6E05\u6670\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/Looping.java</span>
<span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token import static"><span class="token namespace">onjava<span class="token punctuation">.</span></span><span class="token class-name">Repeat</span><span class="token punctuation">.</span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Looping</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">hi</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Hi!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">repeat</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Looping!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">repeat</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token class-name">Looping</span><span class="token operator">::</span><span class="token function">hi</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Looping!
Looping!
Looping!
Hi!
Hi!
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u539F\u5219\u4E0A\uFF0C\u5728\u4EE3\u7801\u4E2D\u5305\u542B\u548C\u89E3\u91CA <code>repeat()</code> \u5E76\u4E0D\u503C\u5F97\u3002\u8BDA\u7136\u5B83\u662F\u4E00\u4E2A\u76F8\u5F53\u900F\u660E\u7684\u5DE5\u5177\uFF0C\u4F46\u8FD9\u53D6\u51B3\u4E8E\u4F60\u7684\u56E2\u961F\u548C\u516C\u53F8\u7684\u8FD0\u4F5C\u65B9\u5F0F\u3002</p><h3 id="generate" tabindex="-1"><a class="header-anchor" href="#generate" aria-hidden="true">#</a> generate()</h3><p>\u53C2\u7167 <code>RandomWords.java</code> \u4E2D <strong>Stream.</strong><code>generate()</code> \u642D\u914D <code>Supplier&lt;T&gt;</code> \u4F7F\u7528\u7684\u4F8B\u5B50\u3002\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/Generator.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>function<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Generator</span> <span class="token keyword">implements</span> <span class="token class-name">Supplier</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token class-name">Random</span> rand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token number">47</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> letters <span class="token operator">=</span> <span class="token string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span><span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span> <span class="token operator">+</span> letters<span class="token punctuation">[</span>rand<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span>letters<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> word <span class="token operator">=</span> <span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Generator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                            <span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span>
                            <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">joining</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>YNZBRNYGCFOWZNTCQRGSEGZMMJMROE
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4F7F\u7528 <code>Random.nextInt()</code> \u65B9\u6CD5\u6765\u6311\u9009\u5B57\u6BCD\u8868\u4E2D\u7684\u5927\u5199\u5B57\u6BCD\u3002<code>Random.nextInt()</code> \u7684\u53C2\u6570\u4EE3\u8868\u53EF\u4EE5\u63A5\u53D7\u7684\u6700\u5927\u7684\u968F\u673A\u6570\u8303\u56F4\uFF0C\u6240\u4EE5\u4F7F\u7528\u6570\u7EC4\u8FB9\u754C\u662F\u7ECF\u8FC7\u614E\u91CD\u8003\u8651\u7684\u3002</p><p>\u5982\u679C\u8981\u521B\u5EFA\u5305\u542B\u76F8\u540C\u5BF9\u8C61\u7684\u6D41\uFF0C\u53EA\u9700\u8981\u4F20\u9012\u4E00\u4E2A\u751F\u6210\u90A3\u4E9B\u5BF9\u8C61\u7684 <code>lambda</code> \u5230 <code>generate()</code> \u4E2D\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/Duplicator.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Duplicator</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;duplicate&quot;</span><span class="token punctuation">)</span>
              <span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
              <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>duplicate
duplicate
duplicate
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u4E0B\u662F\u5728\u672C\u7AE0\u4E4B\u524D\u4F8B\u5B50\u4E2D\u4F7F\u7528\u8FC7\u7684 <code>Bubble</code> \u7C7B\u3002<strong>\u6CE8\u610F</strong>\u5B83\u5305\u542B\u4E86\u81EA\u5DF1\u7684\u9759\u6001\u751F\u6210\u5668\uFF08Static generator\uFF09\u65B9\u6CD5\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/Bubble.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>function<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Bubble</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">int</span> i<span class="token punctuation">;</span>
    
    <span class="token keyword">public</span> <span class="token class-name">Bubble</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        i <span class="token operator">=</span> n<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;Bubble(&quot;</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Bubble</span> <span class="token function">bubbler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Bubble</span><span class="token punctuation">(</span>count<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7531\u4E8E <code>bubbler()</code> \u4E0E <code>Supplier&lt;Bubble&gt;</code> \u662F\u63A5\u53E3\u517C\u5BB9\u7684\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5C06\u5176\u65B9\u6CD5\u5F15\u7528\u76F4\u63A5\u4F20\u9012\u7ED9 <strong>Stream.</strong><code>generate()</code>\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/Bubbles.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Bubbles</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span><span class="token class-name">Bubble</span><span class="token operator">::</span><span class="token function">bubbler</span><span class="token punctuation">)</span>
              <span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
              <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Bubble(0)
Bubble(1)
Bubble(2)
Bubble(3)
Bubble(4)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u662F\u521B\u5EFA\u5355\u72EC\u5DE5\u5382\u7C7B\uFF08Separate Factory class\uFF09\u7684\u53E6\u4E00\u79CD\u65B9\u5F0F\u3002\u5728\u5F88\u591A\u65B9\u9762\u5B83\u66F4\u52A0\u6574\u6D01\uFF0C\u4F46\u662F\u8FD9\u662F\u4E00\u4E2A\u5173\u4E8E\u4EE3\u7801\u7EC4\u7EC7\u548C\u54C1\u5473\u7684\u95EE\u9898\u2014\u2014\u4F60\u603B\u662F\u53EF\u4EE5\u521B\u5EFA\u4E00\u4E2A\u5B8C\u5168\u4E0D\u540C\u7684\u5DE5\u5382\u7C7B\u3002</p><h3 id="iterate" tabindex="-1"><a class="header-anchor" href="#iterate" aria-hidden="true">#</a> iterate()</h3><p><code>Stream.iterate()</code> \u4EA7\u751F\u7684\u6D41\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\u662F\u79CD\u5B50\uFF08iterate\u65B9\u6CD5\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\uFF09\uFF0C\u7136\u540E\u5C06\u79CD\u5B50\u4F20\u9012\u7ED9\u65B9\u6CD5\uFF08iterate\u65B9\u6CD5\u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570\uFF09\u3002\u65B9\u6CD5\u8FD0\u884C\u7684\u7ED3\u679C\u88AB\u6DFB\u52A0\u5230\u6D41\uFF08\u4F5C\u4E3A\u6D41\u7684\u4E0B\u4E00\u4E2A\u5143\u7D20\uFF09\uFF0C\u5E76\u88AB\u5B58\u50A8\u8D77\u6765\uFF0C\u4F5C\u4E3A\u4E0B\u6B21\u8C03\u7528 <code>iterate()</code>\u65B9\u6CD5\u65F6\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\uFF0C\u4EE5\u6B64\u7C7B\u63A8\u3002\u6211\u4EEC\u53EF\u4EE5\u5229\u7528 <code>iterate()</code> \u751F\u6210\u4E00\u4E2A\u6590\u6CE2\u90A3\u5951\u6570\u5217\uFF08\u4E0A\u4E00\u7AE0\u5DF2\u7ECF\u9047\u5230\u8FC7Fibonacci\uFF09\u3002\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/Fibonacci.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Fibonacci</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    
    <span class="token class-name">Stream</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token function">numbers</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">iterate</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> i <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> result <span class="token operator">=</span> x <span class="token operator">+</span> i<span class="token punctuation">;</span>
            x <span class="token operator">=</span> i<span class="token punctuation">;</span>
            <span class="token keyword">return</span> result<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token class-name">Fibonacci</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">numbers</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                       <span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token comment">// \u8FC7\u6EE4\u524D 20 \u4E2A</span>
                       <span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment">// \u7136\u540E\u53D6 10 \u4E2A</span>
                       <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>6765
10946
17711
28657
46368
75025
121393
196418
317811
514229
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6590\u6CE2\u90A3\u5951\u6570\u5217\u5C06\u6570\u5217\u4E2D\u6700\u540E\u4E24\u4E2A\u5143\u7D20\u8FDB\u884C\u6C42\u548C\u4EE5\u4EA7\u751F\u4E0B\u4E00\u4E2A\u5143\u7D20\u3002<code>iterate()</code> \u53EA\u80FD\u8BB0\u5FC6\u7ED3\u679C\uFF0C\u56E0\u6B64\u6211\u4EEC\u9700\u8981\u5229\u7528\u4E00\u4E2A\u53D8\u91CF <code>x</code> \u8FFD\u8E2A\u53E6\u5916\u4E00\u4E2A\u5143\u7D20\u3002</p><p>\u5728\u4E3B\u65B9\u6CD5\u4E2D\uFF0C\u6211\u4EEC\u4F7F\u7528\u4E86\u4E00\u4E2A\u4E4B\u524D\u6CA1\u6709\u89C1\u8FC7\u7684 <code>skip()</code> \u64CD\u4F5C\u3002\u5B83\u6839\u636E\u53C2\u6570\u4E22\u5F03\u6307\u5B9A\u6570\u91CF\u7684\u6D41\u5143\u7D20\u3002\u5728\u8FD9\u91CC\uFF0C\u6211\u4EEC\u4E22\u5F03\u4E86\u524D 20 \u4E2A\u5143\u7D20\u3002</p><h3 id="\u6D41\u7684\u5EFA\u9020\u8005\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u6D41\u7684\u5EFA\u9020\u8005\u6A21\u5F0F" aria-hidden="true">#</a> \u6D41\u7684\u5EFA\u9020\u8005\u6A21\u5F0F</h3><p>\u5728<em>\u5EFA\u9020\u8005\u6A21\u5F0F</em>\uFF08Builder design pattern\uFF09\u4E2D\uFF0C\u9996\u5148\u521B\u5EFA\u4E00\u4E2A <code>builder</code> \u5BF9\u8C61\uFF0C\u7136\u540E\u5C06\u521B\u5EFA\u6D41\u6240\u9700\u7684\u591A\u4E2A\u4FE1\u606F\u4F20\u9012\u7ED9\u5B83\uFF0C\u6700\u540E<code>builder</code> \u5BF9\u8C61\u6267\u884C\u201D\u521B\u5EFA\u201C\u6D41\u7684\u64CD\u4F5C\u3002<strong>Stream</strong> \u5E93\u63D0\u4F9B\u4E86\u8FD9\u6837\u7684 <code>Builder</code>\u3002\u5728\u8FD9\u91CC\uFF0C\u6211\u4EEC\u91CD\u65B0\u5BA1\u89C6\u6587\u4EF6\u8BFB\u53D6\u5E76\u5C06\u5176\u8F6C\u6362\u6210\u4E3A\u5355\u8BCD\u6D41\u7684\u8FC7\u7A0B\u3002\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/FileToWordsBuilder.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FileToWordsBuilder</span> <span class="token punctuation">{</span>
    <span class="token class-name">Stream<span class="token punctuation">.</span>Builder</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> builder <span class="token operator">=</span> <span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token keyword">public</span> <span class="token class-name">FileToWordsBuilder</span><span class="token punctuation">(</span><span class="token class-name">String</span> filePath<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">lines</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">)</span>
             <span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// \u7565\u8FC7\u5F00\u5934\u7684\u6CE8\u91CA\u884C</span>
             <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>line <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> w <span class="token operator">:</span> line<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;[ .?,]+&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                      builder<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token class-name">Stream</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> builder<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token class-name">FileToWordsBuilder</span><span class="token punctuation">(</span><span class="token string">&quot;Cheese.dat&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>w <span class="token operator">-&gt;</span> w <span class="token operator">+</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">print</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Not much of a cheese shop really
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>\u6CE8\u610F</strong>\uFF0C\u6784\u9020\u5668\u4F1A\u6DFB\u52A0\u6587\u4EF6\u4E2D\u7684\u6240\u6709\u5355\u8BCD\uFF08\u9664\u4E86\u7B2C\u4E00\u884C\uFF0C\u5B83\u662F\u5305\u542B\u6587\u4EF6\u8DEF\u5F84\u4FE1\u606F\u7684\u6CE8\u91CA\uFF09\uFF0C\u4F46\u662F\u5176\u5E76\u6CA1\u6709\u8C03\u7528 <code>build()</code>\u3002\u53EA\u8981\u4F60\u4E0D\u8C03\u7528 <code>stream()</code> \u65B9\u6CD5\uFF0C\u5C31\u53EF\u4EE5\u7EE7\u7EED\u5411 <code>builder</code> \u5BF9\u8C61\u4E2D\u6DFB\u52A0\u5355\u8BCD\u3002</p><p>\u5728\u8BE5\u7C7B\u7684\u66F4\u5B8C\u6574\u5F62\u5F0F\u4E2D\uFF0C\u4F60\u53EF\u4EE5\u6DFB\u52A0\u4E00\u4E2A\u6807\u5FD7\u4F4D\u7528\u4E8E\u67E5\u770B <code>build()</code> \u662F\u5426\u88AB\u8C03\u7528\uFF0C\u5E76\u4E14\u53EF\u80FD\u7684\u8BDD\u589E\u52A0\u4E00\u4E2A\u53EF\u4EE5\u6DFB\u52A0\u66F4\u591A\u5355\u8BCD\u7684\u65B9\u6CD5\u3002\u5728 <code>Stream.Builder</code> \u8C03\u7528 <code>build()</code> \u65B9\u6CD5\u540E\u7EE7\u7EED\u5C1D\u8BD5\u6DFB\u52A0\u5355\u8BCD\u4F1A\u4EA7\u751F\u4E00\u4E2A\u5F02\u5E38\u3002</p><h3 id="arrays" tabindex="-1"><a class="header-anchor" href="#arrays" aria-hidden="true">#</a> Arrays</h3><p><code>Arrays</code> \u7C7B\u4E2D\u542B\u6709\u4E00\u4E2A\u540D\u4E3A <code>stream()</code> \u7684\u9759\u6001\u65B9\u6CD5\u7528\u4E8E\u628A\u6570\u7EC4\u8F6C\u6362\u6210\u4E3A\u6D41\u3002\u6211\u4EEC\u53EF\u4EE5\u91CD\u5199 <code>interfaces/Machine.java</code> \u4E2D\u7684\u4E3B\u65B9\u6CD5\u7528\u4E8E\u521B\u5EFA\u4E00\u4E2A\u6D41\uFF0C\u5E76\u5C06 <code>execute()</code> \u5E94\u7528\u4E8E\u6BCF\u4E00\u4E2A\u5143\u7D20\u3002\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/Machine2.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">onjava<span class="token punctuation">.</span></span><span class="token class-name">Operations</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Machine2</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Operations</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
            <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Operations</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token string">&quot;Bing&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Operations</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token string">&quot;Crack&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Operations</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token string">&quot;Twist&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Operations</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token string">&quot;Pop&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">Operations</span><span class="token operator">::</span><span class="token function">execute</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Bing
Crack
Twist
Pop
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>new Operations[]</code> \u8868\u8FBE\u5F0F\u52A8\u6001\u521B\u5EFA\u4E86 <code>Operations</code> \u5BF9\u8C61\u7684\u6570\u7EC4\u3002</p><p><code>stream()</code> \u540C\u6837\u53EF\u4EE5\u4EA7\u751F <strong>IntStream</strong>\uFF0C<strong>LongStream</strong> \u548C <strong>DoubleStream</strong>\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/ArrayStreams.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArrayStreams</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token keyword">double</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token number">3.14159</span><span class="token punctuation">,</span> <span class="token number">2.718</span><span class="token punctuation">,</span> <span class="token number">1.618</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>n <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%f &quot;</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>n <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%d &quot;</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">66</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>n <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%d &quot;</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token comment">// \u9009\u62E9\u4E00\u4E2A\u5B50\u57DF:</span>
        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">37</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>n <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%d &quot;</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>3.141590 2.718000 1.618000
1 3 5
11 22 44 66
7 15 28
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6700\u540E\u4E00\u6B21 <code>stream()</code> \u7684\u8C03\u7528\u6709\u4E24\u4E2A\u989D\u5916\u7684\u53C2\u6570\u3002\u7B2C\u4E00\u4E2A\u53C2\u6570\u544A\u8BC9 <code>stream()</code> \u4ECE\u6570\u7EC4\u7684\u54EA\u4E2A\u4F4D\u7F6E\u5F00\u59CB\u9009\u62E9\u5143\u7D20\uFF0C\u7B2C\u4E8C\u4E2A\u53C2\u6570\u7528\u4E8E\u544A\u77E5\u5728\u54EA\u91CC\u505C\u6B62\u3002\u6BCF\u79CD\u4E0D\u540C\u7C7B\u578B\u7684 <code>stream()</code> \u90FD\u6709\u7C7B\u4F3C\u7684\u64CD\u4F5C\u3002</p><h3 id="\u6B63\u5219\u8868\u8FBE\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u6B63\u5219\u8868\u8FBE\u5F0F" aria-hidden="true">#</a> \u6B63\u5219\u8868\u8FBE\u5F0F</h3>`,87),A=n("Java \u7684\u6B63\u5219\u8868\u8FBE\u5F0F\u5C06\u5728"),z=n("\u5B57\u7B26\u4E32"),L=n("\u8FD9\u4E00\u7AE0\u8282\u8BE6\u7EC6\u4ECB\u7ECD\u3002Java 8 \u5728 "),W=s("code",null,"java.util.regex.Pattern",-1),D=n(" \u4E2D\u589E\u52A0\u4E86\u4E00\u4E2A\u65B0\u7684\u65B9\u6CD5 "),G=s("code",null,"splitAsStream()",-1),H=n("\u3002\u8FD9\u4E2A\u65B9\u6CD5\u53EF\u4EE5\u6839\u636E\u4F20\u5165\u7684\u516C\u5F0F\u5C06\u5B57\u7B26\u5E8F\u5217\u8F6C\u5316\u4E3A\u6D41\u3002\u4F46\u662F\u6709\u4E00\u4E2A\u9650\u5236\uFF0C\u8F93\u5165\u53EA\u80FD\u662F "),J=s("strong",null,"CharSequence",-1),V=n("\uFF0C\u56E0\u6B64\u4E0D\u80FD\u5C06\u6D41\u4F5C\u4E3A "),Z=s("code",null,"splitAsStream()",-1),U=n(" \u7684\u53C2\u6570\u3002"),K=e(`<p>\u6211\u4EEC\u518D\u4E00\u6B21\u67E5\u770B\u5C06\u6587\u4EF6\u8F6C\u6362\u4E3A\u5355\u8BCD\u7684\u8FC7\u7A0B\u3002\u8FD9\u4E00\u6B21\uFF0C\u6211\u4EEC\u4F7F\u7528\u6D41\u5C06\u6587\u4EF6\u8F6C\u6362\u4E3A\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF0C\u63A5\u7740\u4F7F\u7528\u6B63\u5219\u8868\u8FBE\u5F0F\u5C06\u5B57\u7B26\u4E32\u8F6C\u5316\u4E3A\u5355\u8BCD\u6D41\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/FileToWordsRegexp.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>regex<span class="token punctuation">.</span></span><span class="token class-name">Pattern</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FileToWordsRegexp</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> all<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">FileToWordsRegexp</span><span class="token punctuation">(</span><span class="token class-name">String</span> filePath<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        all <span class="token operator">=</span> <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">lines</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// First (comment) line</span>
        <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">joining</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token class-name">Stream</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Pattern</span>
        <span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">&quot;[ .,?]+&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">splitAsStream</span><span class="token punctuation">(</span>all<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span>
    <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">FileToWordsRegexp</span> fw <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileToWordsRegexp</span><span class="token punctuation">(</span><span class="token string">&quot;Cheese.dat&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        fw<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>w <span class="token operator">-&gt;</span> w <span class="token operator">+</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">print</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        fw<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>w <span class="token operator">-&gt;</span> w <span class="token operator">+</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">print</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Not much of a cheese shop really is it
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5728\u6784\u9020\u5668\u4E2D\u6211\u4EEC\u8BFB\u53D6\u4E86\u6587\u4EF6\u4E2D\u7684\u6240\u6709\u5185\u5BB9\uFF08\u8DF3\u8FC7\u7B2C\u4E00\u884C\u6CE8\u91CA\uFF0C\u5E76\u5C06\u5176\u8F6C\u5316\u6210\u4E3A\u5355\u884C\u5B57\u7B26\u4E32\uFF09\u3002\u73B0\u5728\uFF0C\u5F53\u4F60\u8C03\u7528 <code>stream()</code> \u7684\u65F6\u5019\uFF0C\u53EF\u4EE5\u50CF\u5F80\u5E38\u4E00\u6837\u83B7\u53D6\u4E00\u4E2A\u6D41\uFF0C\u4F46\u8FD9\u56DE\u4F60\u53EF\u4EE5\u591A\u6B21\u8C03\u7528 <code>stream()</code> \uFF0C\u6BCF\u6B21\u4ECE\u5DF2\u5B58\u50A8\u7684\u5B57\u7B26\u4E32\u4E2D\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u6D41\u3002\u8FD9\u91CC\u6709\u4E2A\u9650\u5236\uFF0C\u6574\u4E2A\u6587\u4EF6\u5FC5\u987B\u5B58\u50A8\u5728\u5185\u5B58\u4E2D\uFF1B\u5728\u5927\u591A\u6570\u60C5\u51B5\u4E0B\u8FD9\u5E76\u4E0D\u662F\u4EC0\u4E48\u95EE\u9898\uFF0C\u4F46\u662F\u8FD9\u4E22\u6389\u4E86\u6D41\u64CD\u4F5C\u975E\u5E38\u91CD\u8981\u7684\u4F18\u52BF\uFF1A</p><ol><li>\u201C\u4E0D\u9700\u8981\u628A\u6D41\u5B58\u50A8\u8D77\u6765\u3002\u201D\u5F53\u7136\uFF0C\u6D41\u786E\u5B9E\u9700\u8981\u4E00\u4E9B\u5185\u90E8\u5B58\u50A8\uFF0C\u4F46\u5B58\u50A8\u7684\u53EA\u662F\u5E8F\u5217\u7684\u4E00\u5C0F\u90E8\u5206\uFF0C\u548C\u5B58\u50A8\u6574\u4E2A\u5E8F\u5217\u4E0D\u540C\u3002</li><li>\u5B83\u4EEC\u662F\u61D2\u52A0\u8F7D\u8BA1\u7B97\u7684\u3002</li></ol><p>\u5E78\u8FD0\u7684\u662F\uFF0C\u6211\u4EEC\u7A0D\u540E\u5C31\u4F1A\u77E5\u9053\u5982\u4F55\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\u3002</p><h2 id="\u4E2D\u95F4\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u4E2D\u95F4\u64CD\u4F5C" aria-hidden="true">#</a> \u4E2D\u95F4\u64CD\u4F5C</h2><p>\u4E2D\u95F4\u64CD\u4F5C\u7528\u4E8E\u4ECE\u4E00\u4E2A\u6D41\u4E2D\u83B7\u53D6\u5BF9\u8C61\uFF0C\u5E76\u5C06\u5BF9\u8C61\u4F5C\u4E3A\u53E6\u4E00\u4E2A\u6D41\u4ECE\u540E\u7AEF\u8F93\u51FA\uFF0C\u4EE5\u8FDE\u63A5\u5230\u5176\u4ED6\u64CD\u4F5C\u3002</p><h3 id="\u8DDF\u8E2A\u548C\u8C03\u8BD5" tabindex="-1"><a class="header-anchor" href="#\u8DDF\u8E2A\u548C\u8C03\u8BD5" aria-hidden="true">#</a> \u8DDF\u8E2A\u548C\u8C03\u8BD5</h3><p><code>peek()</code> \u64CD\u4F5C\u7684\u76EE\u7684\u662F\u5E2E\u52A9\u8C03\u8BD5\u3002\u5B83\u5141\u8BB8\u4F60\u65E0\u4FEE\u6539\u5730\u67E5\u770B\u6D41\u4E2D\u7684\u5143\u7D20\u3002\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/Peeking.java</span>
<span class="token keyword">class</span> <span class="token class-name">Peeking</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">FileToWords</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token string">&quot;Cheese.dat&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">21</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>w <span class="token operator">-&gt;</span> w <span class="token operator">+</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">print</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token operator">::</span><span class="token function">toUpperCase</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">print</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token operator">::</span><span class="token function">toLowerCase</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">print</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Well WELL well it IT it s S s so SO so
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>FileToWords</code> \u7A0D\u540E\u5B9A\u4E49\uFF0C\u4F46\u5B83\u7684\u529F\u80FD\u5B9E\u73B0\u8C8C\u4F3C\u548C\u4E4B\u524D\u6211\u4EEC\u770B\u5230\u7684\u5DEE\u4E0D\u591A\uFF1A\u4EA7\u751F\u5B57\u7B26\u4E32\u5BF9\u8C61\u7684\u6D41\u3002\u4E4B\u540E\u5728\u5176\u901A\u8FC7\u7BA1\u9053\u65F6\u8C03\u7528 <code>peek()</code> \u8FDB\u884C\u5904\u7406\u3002</p><p>\u56E0\u4E3A <code>peek()</code> \u7B26\u5408\u65E0\u8FD4\u56DE\u503C\u7684 <strong>Consumer</strong> \u51FD\u6570\u5F0F\u63A5\u53E3\uFF0C\u6240\u4EE5\u6211\u4EEC\u53EA\u80FD\u89C2\u5BDF\uFF0C\u65E0\u6CD5\u4F7F\u7528\u4E0D\u540C\u7684\u5143\u7D20\u6765\u66FF\u6362\u6D41\u4E2D\u7684\u5BF9\u8C61\u3002</p><h3 id="\u6D41\u5143\u7D20\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u6D41\u5143\u7D20\u6392\u5E8F" aria-hidden="true">#</a> \u6D41\u5143\u7D20\u6392\u5E8F</h3><p>\u5728 <code>Randoms.java</code> \u4E2D\uFF0C\u6211\u4EEC\u719F\u8BC6\u4E86 <code>sorted()</code> \u7684\u9ED8\u8BA4\u6BD4\u8F83\u5668\u5B9E\u73B0\u3002\u5176\u5B9E\u5B83\u8FD8\u6709\u53E6\u4E00\u79CD\u5F62\u5F0F\u7684\u5B9E\u73B0\uFF1A\u4F20\u5165\u4E00\u4E2A <strong>Comparator</strong> \u53C2\u6570\u3002\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/SortedComparator.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SortedComparator</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">FileToWords</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token string">&quot;Cheese.dat&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">sorted</span><span class="token punctuation">(</span><span class="token class-name">Comparator</span><span class="token punctuation">.</span><span class="token function">reverseOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>w <span class="token operator">-&gt;</span> w <span class="token operator">+</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">print</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>you what to the that sir leads in district And
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>sorted()</code> \u9884\u8BBE\u4E86\u4E00\u4E9B\u9ED8\u8BA4\u7684\u6BD4\u8F83\u5668\u3002\u8FD9\u91CC\u6211\u4EEC\u4F7F\u7528\u7684\u662F\u53CD\u8F6C\u201C\u81EA\u7136\u6392\u5E8F\u201D\u3002\u5F53\u7136\u4F60\u4E5F\u53EF\u4EE5\u628A Lambda \u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\u4F20\u9012\u7ED9 <code>sorted()</code>\u3002</p><h3 id="\u79FB\u9664\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#\u79FB\u9664\u5143\u7D20" aria-hidden="true">#</a> \u79FB\u9664\u5143\u7D20</h3><ul><li><p><code>distinct()</code>\uFF1A\u5728 <code>Randoms.java</code> \u7C7B\u4E2D\u7684 <code>distinct()</code> \u53EF\u7528\u4E8E\u6D88\u9664\u6D41\u4E2D\u7684\u91CD\u590D\u5143\u7D20\u3002\u76F8\u6BD4\u521B\u5EFA\u4E00\u4E2A <strong>Set</strong> \u96C6\u5408\u6765\u6D88\u9664\u91CD\u590D\uFF0C\u8BE5\u65B9\u6CD5\u7684\u5DE5\u4F5C\u91CF\u8981\u5C11\u5F97\u591A\u3002</p></li><li><p><code>filter(Predicate)</code>\uFF1A\u8FC7\u6EE4\u64CD\u4F5C\uFF0C\u4FDD\u7559\u5982\u4E0B\u5143\u7D20\uFF1A\u82E5\u5143\u7D20\u4F20\u9012\u7ED9\u8FC7\u6EE4\u51FD\u6570\u4EA7\u751F\u7684\u7ED3\u679C\u4E3A<code>true</code> \u3002</p></li></ul><p>\u5728\u4E0B\u4F8B\u4E2D\uFF0C<code>isPrime()</code> \u4F5C\u4E3A\u8FC7\u6EE4\u51FD\u6570\uFF0C\u7528\u4E8E\u68C0\u6D4B\u8D28\u6570\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/Prime.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token import static"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token class-name">LongStream</span><span class="token punctuation">.</span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Prime</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Boolean</span> <span class="token function">isPrime</span><span class="token punctuation">(</span><span class="token keyword">long</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">rangeClosed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">noneMatch</span><span class="token punctuation">(</span>i <span class="token operator">-&gt;</span> n <span class="token operator">%</span> i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token class-name">LongStream</span> <span class="token function">numbers</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">iterate</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> i <span class="token operator">-&gt;</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token class-name">Prime</span><span class="token operator">::</span><span class="token function">isPrime</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token class-name">Prime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">numbers</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>n <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%d &quot;</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Prime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">numbers</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>n <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%d &quot;</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>2 3 5 7 11 13 17 19 23 29
467 479 487 491 499 503 509 521 523 541
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>rangeClosed()</code> \u5305\u542B\u4E86\u4E0A\u9650\u503C\u3002\u5982\u679C\u4E0D\u80FD\u6574\u9664\uFF0C\u5373\u4F59\u6570\u4E0D\u7B49\u4E8E 0\uFF0C\u5219 <code>noneMatch()</code> \u64CD\u4F5C\u8FD4\u56DE <code>true</code>\uFF0C\u5982\u679C\u51FA\u73B0\u4EFB\u4F55\u7B49\u4E8E 0 \u7684\u7ED3\u679C\u5219\u8FD4\u56DE <code>false</code>\u3002 <code>noneMatch()</code> \u64CD\u4F5C\u4E00\u65E6\u6709\u5931\u8D25\u5C31\u4F1A\u9000\u51FA\u3002</p><h3 id="\u5E94\u7528\u51FD\u6570\u5230\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#\u5E94\u7528\u51FD\u6570\u5230\u5143\u7D20" aria-hidden="true">#</a> \u5E94\u7528\u51FD\u6570\u5230\u5143\u7D20</h3><ul><li><p><code>map(Function)</code>\uFF1A\u5C06\u51FD\u6570\u64CD\u4F5C\u5E94\u7528\u5728\u8F93\u5165\u6D41\u7684\u5143\u7D20\u4E2D\uFF0C\u5E76\u5C06\u8FD4\u56DE\u503C\u4F20\u9012\u5230\u8F93\u51FA\u6D41\u4E2D\u3002</p></li><li><p><code>mapToInt(ToIntFunction)</code>\uFF1A\u64CD\u4F5C\u540C\u4E0A\uFF0C\u4F46\u7ED3\u679C\u662F <strong>IntStream</strong>\u3002</p></li><li><p><code>mapToLong(ToLongFunction)</code>\uFF1A\u64CD\u4F5C\u540C\u4E0A\uFF0C\u4F46\u7ED3\u679C\u662F <strong>LongStream</strong>\u3002</p></li><li><p><code>mapToDouble(ToDoubleFunction)</code>\uFF1A\u64CD\u4F5C\u540C\u4E0A\uFF0C\u4F46\u7ED3\u679C\u662F <strong>DoubleStream</strong>\u3002</p></li></ul><p>\u5728\u8FD9\u91CC\uFF0C\u6211\u4EEC\u4F7F\u7528 <code>map()</code> \u6620\u5C04\u591A\u79CD\u51FD\u6570\u5230\u4E00\u4E2A\u5B57\u7B26\u4E32\u6D41\u4E2D\u3002\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/FunctionMap.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>function<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">FunctionMap</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> elements <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;12&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;23&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;45&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token class-name">Stream</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span>
    <span class="token function">testStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>elements<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token class-name">String</span> descr<span class="token punctuation">,</span> <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> func<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot; ---( &quot;</span> <span class="token operator">+</span> descr <span class="token operator">+</span> <span class="token string">&quot; )---&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">testStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>func<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;add brackets&quot;</span><span class="token punctuation">,</span> s <span class="token operator">-&gt;</span> <span class="token string">&quot;[&quot;</span> <span class="token operator">+</span> s <span class="token operator">+</span> <span class="token string">&quot;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;Increment&quot;</span><span class="token punctuation">,</span> s <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">NumberFormatException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> s<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;Replace&quot;</span><span class="token punctuation">,</span> s <span class="token operator">-&gt;</span> s<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;9&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;Take last digit&quot;</span><span class="token punctuation">,</span> s <span class="token operator">-&gt;</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span>
        s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;&quot;</span> <span class="token operator">:</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code> ---( add brackets )---
[12]
[]
[23]
[45]
 ---( Increment )---
13

24
46
 ---( Replace )---
19

93
45
 ---( Take last digit )---
2

3
5

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u4E0A\u9762\u7684\u81EA\u589E\u793A\u4F8B\u4E2D\uFF0C\u6211\u4EEC\u7528 <code>Integer.parseInt()</code> \u5C1D\u8BD5\u5C06\u4E00\u4E2A\u5B57\u7B26\u4E32\u8F6C\u5316\u4E3A\u6574\u6570\u3002\u5982\u679C\u5B57\u7B26\u4E32\u4E0D\u80FD\u88AB\u8F6C\u5316\u6210\u4E3A\u6574\u6570\u5C31\u4F1A\u629B\u51FA <code>NumberFormatException</code> \u5F02\u5E38\uFF0C\u6B64\u65F6\u6211\u4EEC\u5C31\u56DE\u8FC7\u5934\u6765\u628A\u539F\u59CB\u5B57\u7B26\u4E32\u653E\u5230\u8F93\u51FA\u6D41\u4E2D\u3002</p><p>\u5728\u4EE5\u4E0A\u4F8B\u5B50\u4E2D\uFF0C<code>map()</code> \u5C06\u4E00\u4E2A\u5B57\u7B26\u4E32\u6620\u5C04\u4E3A\u53E6\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF0C\u4F46\u662F\u6211\u4EEC\u5B8C\u5168\u53EF\u4EE5\u4EA7\u751F\u548C\u63A5\u6536\u7C7B\u578B\u5B8C\u5168\u4E0D\u540C\u7684\u7C7B\u578B\uFF0C\u4ECE\u800C\u6539\u53D8\u6D41\u7684\u6570\u636E\u7C7B\u578B\u3002\u4E0B\u9762\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/FunctionMap2.java</span>
<span class="token comment">// Different input and output types \uFF08\u4E0D\u540C\u7684\u8F93\u5165\u8F93\u51FA\u7C7B\u578B\uFF09</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">Numbered</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token keyword">int</span> n<span class="token punctuation">;</span>
    <span class="token class-name">Numbered</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>n <span class="token operator">=</span> n<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;Numbered(&quot;</span> <span class="token operator">+</span> n <span class="token operator">+</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">FunctionMap2</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">Numbered</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Numbered(1)
Numbered(5)
Numbered(7)
Numbered(9)
Numbered(11)
Numbered(13)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u5C06\u83B7\u53D6\u5230\u7684\u6574\u6570\u901A\u8FC7\u6784\u9020\u5668 <code>Numbered::new</code> \u8F6C\u5316\u6210\u4E3A <code>Numbered</code> \u7C7B\u578B\u3002</p><p>\u5982\u679C\u4F7F\u7528 <strong>Function</strong> \u8FD4\u56DE\u7684\u7ED3\u679C\u662F\u6570\u503C\u7C7B\u578B\u7684\u4E00\u79CD\uFF0C\u6211\u4EEC\u5FC5\u987B\u4F7F\u7528\u5408\u9002\u7684 <code>mapTo\u6570\u503C\u7C7B\u578B</code> \u8FDB\u884C\u66FF\u4EE3\u3002\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/FunctionMap3.java</span>
<span class="token comment">// Producing numeric output streams\uFF08 \u4EA7\u751F\u6570\u503C\u8F93\u51FA\u6D41\uFF09</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">FunctionMap3</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;5&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;7&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;9&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">mapToInt</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token operator">::</span><span class="token function">parseInt</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>n <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%d &quot;</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;17&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;19&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;23&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">mapToLong</span><span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token operator">::</span><span class="token function">parseLong</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>n <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%d &quot;</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;17&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;1.9&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;.23&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">mapToDouble</span><span class="token punctuation">(</span><span class="token class-name">Double</span><span class="token operator">::</span><span class="token function">parseDouble</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>n <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%f &quot;</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>5 7 9
17 19 23
17.000000 1.900000 0.230000
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9057\u61BE\u7684\u662F\uFF0CJava \u8BBE\u8BA1\u8005\u5E76\u6CA1\u6709\u5C3D\u6700\u5927\u52AA\u529B\u53BB\u6D88\u9664\u57FA\u672C\u7C7B\u578B\u3002</p><h3 id="\u5728-map-\u4E2D\u7EC4\u5408\u6D41" tabindex="-1"><a class="header-anchor" href="#\u5728-map-\u4E2D\u7EC4\u5408\u6D41" aria-hidden="true">#</a> \u5728 <code>map()</code> \u4E2D\u7EC4\u5408\u6D41</h3><p>\u5047\u8BBE\u6211\u4EEC\u73B0\u5728\u6709\u4E86\u4E00\u4E2A\u4F20\u5165\u7684\u5143\u7D20\u6D41\uFF0C\u5E76\u4E14\u6253\u7B97\u5BF9\u6D41\u5143\u7D20\u4F7F\u7528 <code>map()</code> \u51FD\u6570\u3002\u73B0\u5728\u4F60\u5DF2\u7ECF\u627E\u5230\u4E86\u4E00\u4E9B\u53EF\u7231\u5E76\u72EC\u4E00\u65E0\u4E8C\u7684\u51FD\u6570\u529F\u80FD\uFF0C\u4F46\u662F\u95EE\u9898\u6765\u4E86\uFF1A\u8FD9\u4E2A\u51FD\u6570\u529F\u80FD\u662F\u4EA7\u751F\u4E00\u4E2A\u6D41\u3002\u6211\u4EEC\u60F3\u8981\u4EA7\u751F\u4E00\u4E2A\u5143\u7D20\u6D41\uFF0C\u800C\u5B9E\u9645\u5374\u4EA7\u751F\u4E86\u4E00\u4E2A\u5143\u7D20\u6D41\u7684\u6D41\u3002</p><p><code>flatMap()</code> \u505A\u4E86\u4E24\u4EF6\u4E8B\uFF1A\u5C06\u4EA7\u751F\u6D41\u7684\u51FD\u6570\u5E94\u7528\u5728\u6BCF\u4E2A\u5143\u7D20\u4E0A\uFF08\u4E0E <code>map()</code> \u6240\u505A\u7684\u76F8\u540C\uFF09\uFF0C\u7136\u540E\u5C06\u6BCF\u4E2A\u6D41\u90FD\u6241\u5E73\u5316\u4E3A\u5143\u7D20\uFF0C\u56E0\u800C\u6700\u7EC8\u4EA7\u751F\u7684\u4EC5\u4EC5\u662F\u5143\u7D20\u3002</p><p><code>flatMap(Function)</code>\uFF1A\u5F53 <code>Function</code> \u4EA7\u751F\u6D41\u65F6\u4F7F\u7528\u3002</p><p><code>flatMapToInt(Function)</code>\uFF1A\u5F53 <code>Function</code> \u4EA7\u751F <code>IntStream</code> \u65F6\u4F7F\u7528\u3002</p><p><code>flatMapToLong(Function)</code>\uFF1A\u5F53 <code>Function</code> \u4EA7\u751F <code>LongStream</code> \u65F6\u4F7F\u7528\u3002</p><p><code>flatMapToDouble(Function)</code>\uFF1A\u5F53 <code>Function</code> \u4EA7\u751F <code>DoubleStream</code> \u65F6\u4F7F\u7528\u3002</p><p>\u4E3A\u4E86\u5F04\u6E05\u5B83\u7684\u5DE5\u4F5C\u539F\u7406\uFF0C\u6211\u4EEC\u4ECE\u4F20\u5165\u4E00\u4E2A\u523B\u610F\u8BBE\u8BA1\u7684\u51FD\u6570\u7ED9 <code>map()</code> \u5F00\u59CB\u3002\u8BE5\u51FD\u6570\u63A5\u53D7\u4E00\u4E2A\u6574\u6570\u5E76\u4EA7\u751F\u4E00\u4E2A\u5B57\u7B26\u4E32\u6D41\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/StreamOfStreams.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StreamOfStreams</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>i <span class="token operator">-&gt;</span> <span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;Gonzo&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Kermit&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Beaker&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>e<span class="token operator">-&gt;</span> e<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>java.util.stream.ReferencePipeline$Head
java.util.stream.ReferencePipeline$Head
java.util.stream.ReferencePipeline$Head
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u5929\u771F\u5730\u5E0C\u671B\u80FD\u591F\u5F97\u5230\u5B57\u7B26\u4E32\u6D41\uFF0C\u4F46\u5B9E\u9645\u5F97\u5230\u7684\u5374\u662F\u201CHead\u201D\u6D41\u7684\u6D41\u3002\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528 <code>flatMap()</code> \u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/FlatMap.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FlatMap</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span>i <span class="token operator">-&gt;</span> <span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;Gonzo&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Fozzie&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Beaker&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Gonzo
Fozzie
Beaker
Gonzo
Fozzie
Beaker
Gonzo
Fozzie
Beaker
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE\u6620\u5C04\u8FD4\u56DE\u7684\u6BCF\u4E2A\u6D41\u90FD\u4F1A\u81EA\u52A8\u6241\u5E73\u4E3A\u7EC4\u6210\u5B83\u7684\u5B57\u7B26\u4E32\u3002</p><p>\u4E0B\u9762\u662F\u53E6\u4E00\u4E2A\u6F14\u793A\uFF0C\u6211\u4EEC\u4ECE\u4E00\u4E2A\u6574\u6570\u6D41\u5F00\u59CB\uFF0C\u7136\u540E\u4F7F\u7528\u6BCF\u4E00\u4E2A\u6574\u6570\u53BB\u521B\u5EFA\u66F4\u591A\u7684\u968F\u673A\u6570\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/StreamOfRandoms.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StreamOfRandoms</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token class-name">Random</span> rand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token number">47</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">flatMapToInt</span><span class="token punctuation">(</span>i <span class="token operator">-&gt;</span> <span class="token class-name">IntStream</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>
        rand<span class="token punctuation">.</span><span class="token function">ints</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">IntStream</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>n <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%d &quot;</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>58 -1 55 93 -1 61 61 29 -1 68 0 22 7 -1 88 28 51 89 9 -1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5728\u8FD9\u91CC\u6211\u4EEC\u5F15\u5165\u4E86 <code>concat()</code>\uFF0C\u5B83\u4EE5\u53C2\u6570\u987A\u5E8F\u7EC4\u5408\u4E24\u4E2A\u6D41\u3002 \u5982\u6B64\uFF0C\u6211\u4EEC\u5728\u6BCF\u4E2A\u968F\u673A <code>Integer</code> \u6D41\u7684\u672B\u5C3E\u6DFB\u52A0\u4E00\u4E2A -1 \u4F5C\u4E3A\u6807\u8BB0\u3002\u4F60\u53EF\u4EE5\u770B\u5230\u6700\u7EC8\u6D41\u786E\u5B9E\u662F\u4ECE\u4E00\u7EC4\u6241\u5E73\u6D41\u4E2D\u521B\u5EFA\u7684\u3002</p><p>\u56E0\u4E3A <code>rand.ints()</code> \u4EA7\u751F\u7684\u662F\u4E00\u4E2A <code>IntStream</code>\uFF0C\u6240\u4EE5\u6211\u5FC5\u987B\u4F7F\u7528 <code>flatMap()</code>\u3001<code>concat()</code> \u548C <code>of()</code> \u7684\u7279\u5B9A\u6574\u6570\u5F62\u5F0F\u3002</p><p>\u8BA9\u6211\u4EEC\u518D\u770B\u4E00\u4E0B\u5C06\u6587\u4EF6\u5212\u5206\u4E3A\u5355\u8BCD\u6D41\u7684\u4EFB\u52A1\u3002\u6211\u4EEC\u6700\u540E\u4F7F\u7528\u5230\u7684\u662F <strong>FileToWordsRegexp.java</strong>\uFF0C\u5B83\u7684\u95EE\u9898\u662F\u9700\u8981\u5C06\u6574\u4E2A\u6587\u4EF6\u8BFB\u5165\u884C\u5217\u8868\u4E2D \u2014\u2014 \u663E\u7136\u9700\u8981\u5B58\u50A8\u8BE5\u5217\u8868\u3002\u800C\u6211\u4EEC\u771F\u6B63\u60F3\u8981\u7684\u662F\u521B\u5EFA\u4E00\u4E2A\u4E0D\u9700\u8981\u4E2D\u95F4\u5B58\u50A8\u5C42\u7684\u5355\u8BCD\u6D41\u3002</p><p>\u4E0B\u9762\uFF0C\u6211\u4EEC\u518D\u4F7F\u7528 <code> flatMap()</code> \u6765\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/FileToWords.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>regex<span class="token punctuation">.</span></span><span class="token class-name">Pattern</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FileToWords</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Stream</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">stream</span><span class="token punctuation">(</span><span class="token class-name">String</span> filePath<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">lines</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// First (comment) line</span>
        <span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span>line <span class="token operator">-&gt;</span>
        <span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">&quot;\\\\W+&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">splitAsStream</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>stream()</code> \u73B0\u5728\u662F\u4E00\u4E2A\u9759\u6001\u65B9\u6CD5\uFF0C\u56E0\u4E3A\u5B83\u53EF\u4EE5\u81EA\u5DF1\u5B8C\u6210\u6574\u4E2A\u6D41\u521B\u5EFA\u8FC7\u7A0B\u3002</p><p>\u6CE8\u610F\uFF1A<code>\\\\W+</code> \u662F\u4E00\u4E2A\u6B63\u5219\u8868\u8FBE\u5F0F\u3002\u8868\u793A\u201C\u975E\u5355\u8BCD\u5B57\u7B26\u201D\uFF0C<code>+</code> \u8868\u793A\u201C\u53EF\u4EE5\u51FA\u73B0\u4E00\u6B21\u6216\u8005\u591A\u6B21\u201D\u3002\u5C0F\u5199\u5F62\u5F0F\u7684 <code>\\\\w</code> \u8868\u793A\u201C\u5355\u8BCD\u5B57\u7B26\u201D\u3002</p><p>\u6211\u4EEC\u4E4B\u524D\u9047\u5230\u7684\u95EE\u9898\u662F <code>Pattern.compile().splitAsStream()</code> \u4EA7\u751F\u7684\u7ED3\u679C\u4E3A\u6D41\uFF0C\u8FD9\u610F\u5473\u7740\u5F53\u6211\u4EEC\u53EA\u662F\u60F3\u8981\u4E00\u4E2A\u7B80\u5355\u7684\u5355\u8BCD\u6D41\u65F6\uFF0C\u5728\u4F20\u5165\u7684\u884C\u6D41\uFF08stream of lines\uFF09\u4E0A\u8C03\u7528 <code>map()</code> \u4F1A\u4EA7\u751F\u4E00\u4E2A\u5355\u8BCD\u6D41\u7684\u6D41\u3002\u5E78\u8FD0\u7684\u662F\uFF0C<code>flatMap()</code> \u53EF\u4EE5\u5C06\u5143\u7D20\u6D41\u7684\u6D41\u6241\u5E73\u5316\u4E3A\u4E00\u4E2A\u7B80\u5355\u7684\u5143\u7D20\u6D41\u3002\u6216\u8005\uFF0C\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528 <code>String.split()</code> \u751F\u6210\u4E00\u4E2A\u6570\u7EC4\uFF0C\u5176\u53EF\u4EE5\u88AB <code>Arrays.stream()</code> \u8F6C\u5316\u6210\u4E3A\u6D41\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span>line <span class="token operator">-&gt;</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>line<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;\\\\W+&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u56E0\u4E3A\u6709\u4E86\u771F\u6B63\u7684\u6D41\uFF08\u800C\u4E0D\u662F<code>FileToWordsRegexp.java</code> \u4E2D\u57FA\u4E8E\u96C6\u5408\u5B58\u50A8\u7684\u6D41\uFF09\uFF0C\u6240\u4EE5\u6BCF\u6B21\u9700\u8981\u4E00\u4E2A\u65B0\u7684\u6D41\u65F6\uFF0C\u6211\u4EEC\u90FD\u5FC5\u987B\u4ECE\u5934\u5F00\u59CB\u521B\u5EFA\uFF0C\u56E0\u4E3A\u6D41\u4E0D\u80FD\u88AB\u590D\u7528\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/FileToWordsTest.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FileToWordsTest</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">FileToWords</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token string">&quot;Cheese.dat&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>s <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%s &quot;</span><span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">FileToWords</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token string">&quot;Cheese.dat&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>s <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%s &quot;</span><span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Not much of a cheese shop really
is it
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728 <code>System.out.format()</code> \u4E2D\u7684 <code>%s</code> \u8868\u660E\u53C2\u6570\u4E3A <strong>String</strong> \u7C7B\u578B\u3002</p><h2 id="optional\u7C7B" tabindex="-1"><a class="header-anchor" href="#optional\u7C7B" aria-hidden="true">#</a> Optional\u7C7B</h2><p>\u5728\u6211\u4EEC\u5B66\u4E60\u7EC8\u7AEF\u64CD\u4F5C\uFF08Terminal Operations\uFF09\u4E4B\u524D\uFF0C\u6211\u4EEC\u5FC5\u987B\u8003\u8651\u5728\u4E00\u4E2A\u7A7A\u6D41\u4E2D\u83B7\u53D6\u5143\u7D20\u4F1A\u53D1\u751F\u4EC0\u4E48\u3002\u6211\u4EEC\u559C\u6B22\u6CBF\u7740\u201C\u5FEB\u4E50\u8DEF\u5F84\u201D[^1]\u628A\u6D41\u8FDE\u63A5\u8D77\u6765\uFF0C\u540C\u65F6\u5047\u8BBE\u6D41\u4E0D\u4F1A\u4E2D\u65AD\u3002\u7136\u800C\uFF0C\u5728\u6D41\u4E2D\u653E\u7F6E <code>null</code> \u5374\u4F1A\u8F7B\u6613\u4EE4\u5176\u4E2D\u65AD\u3002\u90A3\u4E48\u662F\u5426\u5B58\u5728\u67D0\u79CD\u5BF9\u8C61\uFF0C\u53EF\u4EE5\u5728\u6301\u6709\u6D41\u5143\u7D20\u7684\u540C\u65F6\uFF0C\u5373\u4F7F\u5728\u6211\u4EEC\u67E5\u627E\u7684\u5143\u7D20\u4E0D\u5B58\u5728\u65F6\uFF0C\u4E5F\u80FD\u53CB\u597D\u5730\u5BF9\u6211\u4EEC\u8FDB\u884C\u63D0\u793A\uFF08\u4E5F\u5C31\u662F\u8BF4\uFF0C\u4E0D\u4F1A\u4EA7\u751F\u5F02\u5E38\uFF09\uFF1F</p><p><strong>Optional</strong> \u53EF\u4EE5\u5B9E\u73B0\u8FD9\u6837\u7684\u529F\u80FD\u3002\u4E00\u4E9B\u6807\u51C6\u6D41\u64CD\u4F5C\u8FD4\u56DE <strong>Optional</strong> \u5BF9\u8C61\uFF0C\u56E0\u4E3A\u5B83\u4EEC\u5E76\u4E0D\u80FD\u4FDD\u8BC1\u9884\u671F\u7ED3\u679C\u4E00\u5B9A\u5B58\u5728\u3002\u5305\u62EC\uFF1A</p><ul><li><code>findFirst()</code> \u8FD4\u56DE\u4E00\u4E2A\u5305\u542B\u7B2C\u4E00\u4E2A\u5143\u7D20\u7684 <strong>Optional</strong> \u5BF9\u8C61\uFF0C\u5982\u679C\u6D41\u4E3A\u7A7A\u5219\u8FD4\u56DE <strong>Optional.empty</strong></li><li><code>findAny()</code> \u8FD4\u56DE\u5305\u542B\u4EFB\u610F\u5143\u7D20\u7684 <strong>Optional</strong> \u5BF9\u8C61\uFF0C\u5982\u679C\u6D41\u4E3A\u7A7A\u5219\u8FD4\u56DE <strong>Optional.empty</strong></li><li><code>max()</code> \u548C <code>min()</code> \u8FD4\u56DE\u4E00\u4E2A\u5305\u542B\u6700\u5927\u503C\u6216\u8005\u6700\u5C0F\u503C\u7684 <strong>Optional</strong> \u5BF9\u8C61\uFF0C\u5982\u679C\u6D41\u4E3A\u7A7A\u5219\u8FD4\u56DE <strong>Optional.empty</strong></li></ul><p><code>reduce()</code> \u4E0D\u518D\u4EE5 <code>identity</code> \u5F62\u5F0F\u5F00\u5934\uFF0C\u800C\u662F\u5C06\u5176\u8FD4\u56DE\u503C\u5305\u88C5\u5728 <strong>Optional</strong> \u4E2D\u3002\uFF08<code>identity</code> \u5BF9\u8C61\u6210\u4E3A\u5176\u4ED6\u5F62\u5F0F\u7684 <code>reduce()</code> \u7684\u9ED8\u8BA4\u7ED3\u679C\uFF0C\u56E0\u6B64\u4E0D\u5B58\u5728\u7A7A\u7ED3\u679C\u7684\u98CE\u9669\uFF09</p><p>\u5BF9\u4E8E\u6570\u5B57\u6D41 <strong>IntStream</strong>\u3001<strong>LongStream</strong> \u548C <strong>DoubleStream</strong>\uFF0C<code>average()</code> \u4F1A\u5C06\u7ED3\u679C\u5305\u88C5\u5728 <strong>Optional</strong> \u4EE5\u9632\u6B62\u6D41\u4E3A\u7A7A\u3002</p><p>\u4EE5\u4E0B\u662F\u5BF9\u7A7A\u6D41\u8FDB\u884C\u6240\u6709\u8FD9\u4E9B\u64CD\u4F5C\u7684\u7B80\u5355\u6D4B\u8BD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/OptionalsFromEmptyStreams.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">OptionalsFromEmptyStreams</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
             <span class="token punctuation">.</span><span class="token function">findFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
             <span class="token punctuation">.</span><span class="token function">findAny</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
             <span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span>CASE_INSENSITIVE_ORDER<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
             <span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span>CASE_INSENSITIVE_ORDER<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
             <span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>s1<span class="token punctuation">,</span> s2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> s1 <span class="token operator">+</span> s2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">IntStream</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
             <span class="token punctuation">.</span><span class="token function">average</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Optional.empty
Optional.empty
Optional.empty
Optional.empty
Optional.empty
OptionalDouble.empty
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u6D41\u4E3A\u7A7A\u7684\u65F6\u5019\u4F60\u4F1A\u83B7\u5F97\u4E00\u4E2A <strong>Optional.empty</strong> \u5BF9\u8C61\uFF0C\u800C\u4E0D\u662F\u629B\u51FA\u5F02\u5E38\u3002<strong>Optional</strong> \u62E5\u6709 <code>toString()</code> \u65B9\u6CD5\u53EF\u4EE5\u7528\u4E8E\u5C55\u793A\u6709\u7528\u4FE1\u606F\u3002</p><p>\u6CE8\u610F\uFF0C\u7A7A\u6D41\u662F\u901A\u8FC7 <code>Stream.&lt;String&gt;empty()</code> \u521B\u5EFA\u7684\u3002\u5982\u679C\u4F60\u5728\u6CA1\u6709\u4EFB\u4F55\u4E0A\u4E0B\u6587\u73AF\u5883\u7684\u60C5\u51B5\u4E0B\u8C03\u7528 <code>Stream.empty()</code>\uFF0CJava \u5E76\u4E0D\u77E5\u9053\u5B83\u7684\u6570\u636E\u7C7B\u578B\uFF1B\u8FD9\u4E2A\u8BED\u6CD5\u89E3\u51B3\u4E86\u8FD9\u4E2A\u95EE\u9898\u3002\u5982\u679C\u7F16\u8BD1\u5668\u62E5\u6709\u4E86\u8DB3\u591F\u7684\u4E0A\u4E0B\u6587\u4FE1\u606F\uFF0C\u6BD4\u5982\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Stream</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> s <span class="token operator">=</span> <span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5C31\u53EF\u4EE5\u5728\u8C03\u7528 <code>empty()</code> \u65F6\u63A8\u65AD\u7C7B\u578B\u3002</p><p>\u8FD9\u4E2A\u793A\u4F8B\u5C55\u793A\u4E86 <strong>Optional</strong> \u7684\u4E24\u4E2A\u57FA\u672C\u7528\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/OptionalBasics.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">OptionalBasics</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> optString<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>optString<span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>optString<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
        <span class="token keyword">else</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Nothing inside!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">test</span><span class="token punctuation">(</span><span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;Epithets&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">test</span><span class="token punctuation">(</span><span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Epithets
Nothing inside!
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u4F60\u63A5\u6536\u5230 <strong>Optional</strong> \u5BF9\u8C61\u65F6\uFF0C\u5E94\u9996\u5148\u8C03\u7528 <code>isPresent()</code> \u68C0\u67E5\u5176\u4E2D\u662F\u5426\u5305\u542B\u5143\u7D20\u3002\u5982\u679C\u5B58\u5728\uFF0C\u53EF\u4F7F\u7528 <code>get()</code> \u83B7\u53D6\u3002</p><h3 id="\u4FBF\u5229\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u4FBF\u5229\u51FD\u6570" aria-hidden="true">#</a> \u4FBF\u5229\u51FD\u6570</h3><p>\u6709\u8BB8\u591A\u4FBF\u5229\u51FD\u6570\u53EF\u4EE5\u89E3\u5305 <strong>Optional</strong> \uFF0C\u8FD9\u7B80\u5316\u4E86\u4E0A\u8FF0\u201C\u5BF9\u6240\u5305\u542B\u7684\u5BF9\u8C61\u7684\u68C0\u67E5\u548C\u6267\u884C\u64CD\u4F5C\u201D\u7684\u8FC7\u7A0B\uFF1A</p><ul><li><code>ifPresent(Consumer)</code>\uFF1A\u5F53\u503C\u5B58\u5728\u65F6\u8C03\u7528 <strong>Consumer</strong>\uFF0C\u5426\u5219\u4EC0\u4E48\u4E5F\u4E0D\u505A\u3002</li><li><code>orElse(otherObject)</code>\uFF1A\u5982\u679C\u503C\u5B58\u5728\u5219\u76F4\u63A5\u8FD4\u56DE\uFF0C\u5426\u5219\u751F\u6210 <strong>otherObject</strong>\u3002</li><li><code>orElseGet(Supplier)</code>\uFF1A\u5982\u679C\u503C\u5B58\u5728\u5219\u76F4\u63A5\u8FD4\u56DE\uFF0C\u5426\u5219\u4F7F\u7528 <strong>Supplier</strong> \u51FD\u6570\u751F\u6210\u4E00\u4E2A\u53EF\u66FF\u4EE3\u5BF9\u8C61\u3002</li><li><code>orElseThrow(Supplier)</code>\uFF1A\u5982\u679C\u503C\u5B58\u5728\u76F4\u63A5\u8FD4\u56DE\uFF0C\u5426\u5219\u4F7F\u7528 <strong>Supplier</strong> \u51FD\u6570\u751F\u6210\u4E00\u4E2A\u5F02\u5E38\u3002</li></ul><p>\u5982\u4E0B\u662F\u9488\u5BF9\u4E0D\u540C\u4FBF\u5229\u51FD\u6570\u7684\u7B80\u5355\u6F14\u793A\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/Optionals.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>function<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Optionals</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">basics</span><span class="token punctuation">(</span><span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> optString<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>optString<span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>optString<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
        <span class="token keyword">else</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Nothing inside!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">ifPresent</span><span class="token punctuation">(</span><span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> optString<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        optString<span class="token punctuation">.</span><span class="token function">ifPresent</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">orElse</span><span class="token punctuation">(</span><span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> optString<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>optString<span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token string">&quot;Nada&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">orElseGet</span><span class="token punctuation">(</span><span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> optString<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
        optString<span class="token punctuation">.</span><span class="token function">orElseGet</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;Generated&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">orElseThrow</span><span class="token punctuation">(</span><span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> optString<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>optString<span class="token punctuation">.</span><span class="token function">orElseThrow</span><span class="token punctuation">(</span>
            <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string">&quot;Supplied&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Caught &quot;</span> <span class="token operator">+</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token class-name">String</span> testName<span class="token punctuation">,</span> <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Optional</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> cos<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot; === &quot;</span> <span class="token operator">+</span> testName <span class="token operator">+</span> <span class="token string">&quot; === &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        cos<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;Epithets&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        cos<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;basics&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Optionals</span><span class="token operator">::</span><span class="token function">basics</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;ifPresent&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Optionals</span><span class="token operator">::</span><span class="token function">ifPresent</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;orElse&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Optionals</span><span class="token operator">::</span><span class="token function">orElse</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;orElseGet&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Optionals</span><span class="token operator">::</span><span class="token function">orElseGet</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;orElseThrow&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Optionals</span><span class="token operator">::</span><span class="token function">orElseThrow</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>=== basics ===
Epithets
Nothing inside!
=== ifPresent ===
Epithets
=== orElse ===
Epithets
Nada
=== orElseGet ===
Epithets
Generated
=== orElseThrow ===
Epithets
Caught java.lang.Exception: Supplied
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>test()</code> \u901A\u8FC7\u4F20\u5165\u6240\u6709\u65B9\u6CD5\u90FD\u9002\u7528\u7684 <strong>Consumer</strong> \u6765\u907F\u514D\u91CD\u590D\u4EE3\u7801\u3002</p>`,107),Y=s("code",null,"orElseThrow()",-1),$=n(" \u901A\u8FC7 "),Q=s("strong",null,"catch",-1),X=n(" \u5173\u952E\u5B57\u6765\u6355\u83B7\u629B\u51FA\u7684\u5F02\u5E38\u3002\u66F4\u591A\u7EC6\u8282\uFF0C\u5C06\u5728 "),nn=n("\u5F02\u5E38"),sn=n(" \u8FD9\u4E00\u7AE0\u8282\u4E2D\u5B66\u4E60\u3002"),an=e(`<h3 id="\u521B\u5EFA-optional" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA-optional" aria-hidden="true">#</a> \u521B\u5EFA Optional</h3><p>\u5F53\u6211\u4EEC\u5728\u81EA\u5DF1\u7684\u4EE3\u7801\u4E2D\u52A0\u5165 <strong>Optional</strong> \u65F6\uFF0C\u53EF\u4EE5\u4F7F\u7528\u4E0B\u9762 3 \u4E2A\u9759\u6001\u65B9\u6CD5\uFF1A</p><ul><li><code>empty()</code>\uFF1A\u751F\u6210\u4E00\u4E2A\u7A7A <strong>Optional</strong>\u3002</li><li><code>of(value)</code>\uFF1A\u5C06\u4E00\u4E2A\u975E\u7A7A\u503C\u5305\u88C5\u5230 <strong>Optional</strong> \u91CC\u3002</li><li><code>ofNullable(value)</code>\uFF1A\u9488\u5BF9\u4E00\u4E2A\u53EF\u80FD\u4E3A\u7A7A\u7684\u503C\uFF0C\u4E3A\u7A7A\u65F6\u81EA\u52A8\u751F\u6210 <strong>Optional.empty</strong>\uFF0C\u5426\u5219\u5C06\u503C\u5305\u88C5\u5728 <strong>Optional</strong> \u4E2D\u3002</li></ul><p>\u4E0B\u9762\u6765\u770B\u770B\u5B83\u662F\u5982\u4F55\u5DE5\u4F5C\u7684\u3002\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/CreatingOptionals.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>function<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">CreatingOptionals</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token class-name">String</span> testName<span class="token punctuation">,</span> <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> opt<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot; === &quot;</span> <span class="token operator">+</span> testName <span class="token operator">+</span> <span class="token string">&quot; === &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>opt<span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token string">&quot;Null&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;empty&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;of&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;Howdy&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;of&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;ofNullable&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span><span class="token string">&quot;Hi&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;ofNullable&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>=== empty ===
Null
=== of ===
Howdy
java.lang.NullPointerException
=== ofNullable ===
Hi
=== ofNullable ===
Null
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u4E0D\u80FD\u901A\u8FC7\u4F20\u9012 <code>null</code> \u5230 <code>of()</code> \u6765\u521B\u5EFA <code>Optional</code> \u5BF9\u8C61\u3002\u6700\u5B89\u5168\u7684\u65B9\u6CD5\u662F\uFF0C \u4F7F\u7528 <code>ofNullable()</code> \u6765\u4F18\u96C5\u5730\u5904\u7406 <code>null</code>\u3002</p><h3 id="optional-\u5BF9\u8C61\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#optional-\u5BF9\u8C61\u64CD\u4F5C" aria-hidden="true">#</a> Optional \u5BF9\u8C61\u64CD\u4F5C</h3><p>\u5F53\u6211\u4EEC\u7684\u6D41\u7BA1\u9053\u751F\u6210\u4E86 <strong>Optional</strong> \u5BF9\u8C61\uFF0C\u4E0B\u9762 3 \u4E2A\u65B9\u6CD5\u53EF\u4F7F\u5F97 <strong>Optional</strong> \u7684\u540E\u7EED\u80FD\u505A\u66F4\u591A\u7684\u64CD\u4F5C\uFF1A</p><ul><li><p><code>filter(Predicate)</code>\uFF1A\u5BF9 <strong>Optional</strong> \u4E2D\u7684\u5185\u5BB9\u5E94\u7528<strong>Predicate</strong> \u5E76\u5C06\u7ED3\u679C\u8FD4\u56DE\u3002\u5982\u679C <strong>Optional</strong> \u4E0D\u6EE1\u8DB3 <strong>Predicate</strong> \uFF0C\u5C06 <strong>Optional</strong> \u8F6C\u5316\u4E3A\u7A7A <strong>Optional</strong> \u3002\u5982\u679C <strong>Optional</strong> \u5DF2\u7ECF\u4E3A\u7A7A\uFF0C\u5219\u76F4\u63A5\u8FD4\u56DE\u7A7A<strong>Optional</strong> \u3002</p></li><li><p><code>map(Function)</code>\uFF1A\u5982\u679C <strong>Optional</strong> \u4E0D\u4E3A\u7A7A\uFF0C\u5E94\u7528 <strong>Function</strong> \u4E8E <strong>Optional</strong> \u4E2D\u7684\u5185\u5BB9\uFF0C\u5E76\u8FD4\u56DE\u7ED3\u679C\u3002\u5426\u5219\u76F4\u63A5\u8FD4\u56DE <strong>Optional.empty</strong>\u3002</p></li><li><p><code>flatMap(Function)</code>\uFF1A\u540C <code>map()</code>\uFF0C\u4F46\u662F\u63D0\u4F9B\u7684\u6620\u5C04\u51FD\u6570\u5C06\u7ED3\u679C\u5305\u88C5\u5728 <strong>Optional</strong> \u5BF9\u8C61\u4E2D\uFF0C\u56E0\u6B64 <code>flatMap()</code> \u4E0D\u4F1A\u5728\u6700\u540E\u8FDB\u884C\u4EFB\u4F55\u5305\u88C5\u3002</p></li></ul><p>\u4EE5\u4E0A\u65B9\u6CD5\u90FD\u4E0D\u9002\u7528\u4E8E\u6570\u503C\u578B <strong>Optional</strong>\u3002\u4E00\u822C\u6765\u8BF4\uFF0C\u6D41\u7684 <code>filter()</code> \u4F1A\u5728 <strong>Predicate</strong> \u8FD4\u56DE <code>false</code> \u65F6\u79FB\u9664\u6D41\u5143\u7D20\u3002\u800C <code>Optional.filter()</code> \u5728\u5931\u8D25\u65F6\u4E0D\u4F1A\u5220\u9664 <strong>Optional</strong>\uFF0C\u800C\u662F\u5C06\u5176\u4FDD\u7559\u4E0B\u6765\uFF0C\u5E76\u8F6C\u5316\u4E3A\u7A7A\u3002\u4E0B\u9762\u8BF7\u770B\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/OptionalFilter.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>function<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">OptionalFilter</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> elements <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;Foo&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Bar&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Baz&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Bingo&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token class-name">Stream</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">testStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>elements<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token class-name">String</span> descr<span class="token punctuation">,</span> <span class="token class-name">Predicate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> pred<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot; ---( &quot;</span> <span class="token operator">+</span> descr <span class="token operator">+</span> <span class="token string">&quot; )---&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> elements<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
                    <span class="token function">testStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                            <span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
                            <span class="token punctuation">.</span><span class="token function">findFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                            <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>pred<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;true&quot;</span><span class="token punctuation">,</span> str <span class="token operator">-&gt;</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;false&quot;</span><span class="token punctuation">,</span> str <span class="token operator">-&gt;</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;str != \\&quot;\\&quot;&quot;</span><span class="token punctuation">,</span> str <span class="token operator">-&gt;</span> str <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;str.length() == 3&quot;</span><span class="token punctuation">,</span> str <span class="token operator">-&gt;</span> str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;startsWith(\\&quot;B\\&quot;)&quot;</span><span class="token punctuation">,</span>
                str <span class="token operator">-&gt;</span> str<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>---( true )---
Optional[Foo]
Optional[]
Optional[Bar]
Optional[Baz]
Optional[Bingo]
Optional.empty
---( false )---
Optional.empty
Optional.empty
Optional.empty
Optional.empty
Optional.empty
Optional.empty
---( str != &quot;&quot; )---
Optional[Foo]
Optional.empty
Optional[Bar]
Optional[Baz]
Optional[Bingo]
Optional.empty
---( str.length() == 3 )---
Optional[Foo]
Optional.empty
Optional[Bar]
Optional[Baz]
Optional.empty
Optional.empty
---( startsWith(&quot;B&quot;) )---
Optional.empty
Optional.empty
Optional[Bar]
Optional[Baz]
Optional[Bingo]
Optional.empty
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5373\u4F7F\u8F93\u51FA\u770B\u8D77\u6765\u50CF\u6D41\uFF0C\u8981\u7279\u522B\u6CE8\u610F <code>test()</code> \u4E2D\u7684 for \u5FAA\u73AF\u3002\u6BCF\u4E00\u6B21\u7684for\u5FAA\u73AF\u90FD\u91CD\u65B0\u542F\u52A8\u6D41\uFF0C\u7136\u540E\u8DF3\u8FC7for\u5FAA\u73AF\u7D22\u5F15\u6307\u5B9A\u7684\u6570\u91CF\u7684\u5143\u7D20\uFF0C\u8FD9\u5C31\u662F\u6D41\u53EA\u5269\u540E\u7EED\u5143\u7D20\u7684\u539F\u56E0\u3002\u7136\u540E\u8C03\u7528<code>findFirst()</code> \u83B7\u53D6\u5269\u4F59\u5143\u7D20\u4E2D\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\uFF0C\u5E76\u5305\u88C5\u5728\u4E00\u4E2A <code>Optional</code>\u5BF9\u8C61\u4E2D\u3002</p><p><strong>\u6CE8\u610F</strong>\uFF0C\u4E0D\u540C\u4E8E\u666E\u901A for \u5FAA\u73AF\uFF0C\u8FD9\u91CC\u7684\u7D22\u5F15\u503C\u8303\u56F4\u5E76\u4E0D\u662F <code>i &lt; elements.length</code>\uFF0C \u800C\u662F <code>i &lt;= elements.length</code>\u3002\u6240\u4EE5\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u5B9E\u9645\u4E0A\u8D85\u51FA\u4E86\u6D41\u3002\u65B9\u4FBF\u7684\u662F\uFF0C\u8FD9\u5C06\u81EA\u52A8\u6210\u4E3A <strong>Optional.empty</strong>\uFF0C\u4F60\u53EF\u4EE5\u5728\u6BCF\u4E00\u4E2A\u6D4B\u8BD5\u7684\u7ED3\u5C3E\u4E2D\u770B\u5230\u3002</p><p>\u540C <code>map()</code> \u4E00\u6837 \uFF0C <code>Optional.map()</code> \u6267\u884C\u4E00\u4E2A\u51FD\u6570\u3002\u5B83\u4EC5\u5728 <strong>Optional</strong> \u4E0D\u4E3A\u7A7A\u65F6\u624D\u6267\u884C\u8FD9\u4E2A\u6620\u5C04\u51FD\u6570\u3002\u5E76\u5C06 <strong>Optional</strong> \u7684\u5185\u5BB9\u63D0\u53D6\u51FA\u6765\uFF0C\u4F20\u9012\u7ED9\u6620\u5C04\u51FD\u6570\u3002\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/OptionalMap.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>function<span class="token punctuation">.</span></span><span class="token class-name">Function</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token class-name">Stream</span></span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">OptionalMap</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> elements <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;12&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;23&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;45&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">static</span> <span class="token class-name">Stream</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">testStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>elements<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token class-name">String</span> descr<span class="token punctuation">,</span> <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> func<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot; ---( &quot;</span> <span class="token operator">+</span> descr <span class="token operator">+</span> <span class="token string">&quot; )---&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> elements<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
                    <span class="token function">testStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                            <span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
                            <span class="token punctuation">.</span><span class="token function">findFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// Produces an Optional</span>
                            <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>func<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// If Optional is not empty, map() first extracts</span>
        <span class="token comment">// the contents which it then passes</span>
        <span class="token comment">// to the function:</span>
        <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;Add brackets&quot;</span><span class="token punctuation">,</span> s <span class="token operator">-&gt;</span> <span class="token string">&quot;[&quot;</span> <span class="token operator">+</span> s <span class="token operator">+</span> <span class="token string">&quot;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;Increment&quot;</span><span class="token punctuation">,</span> s <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NumberFormatException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> s<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;Replace&quot;</span><span class="token punctuation">,</span> s <span class="token operator">-&gt;</span> s<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;9&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;Take last digit&quot;</span><span class="token punctuation">,</span> s <span class="token operator">-&gt;</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span>
                s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;&quot;</span> <span class="token operator">:</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// After the function is finished, map() wraps the</span>
    <span class="token comment">// result in an Optional before returning it:</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>---( Add brackets )---
Optional[[12]]
Optional[[]]
Optional[[23]]
Optional[[45]]
Optional.empty
---( Increment )---
Optional[13]
Optional[]
Optional[24]
Optional[46]
Optional.empty
---( Replace )---
Optional[19]
Optional[]
Optional[93]
Optional[45]
Optional.empty
---( Take last digit )---
Optional[2]
Optional[]
Optional[3]
Optional[5]
Optional.empty
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6620\u5C04\u51FD\u6570\u7684\u8FD4\u56DE\u7ED3\u679C\u4F1A\u81EA\u52A8\u5305\u88C5\u6210\u4E3A <strong>Optional</strong>\u3002<strong>Optional.empty</strong> \u4F1A\u88AB\u76F4\u63A5\u8DF3\u8FC7\u3002</p><p><strong>Optional</strong> \u7684 <code>flatMap()</code> \u5E94\u7528\u4E8E\u5DF2\u751F\u6210 <strong>Optional</strong> \u7684\u6620\u5C04\u51FD\u6570\uFF0C\u6240\u4EE5 <code>flatMap()</code> \u4E0D\u4F1A\u50CF <code>map()</code> \u90A3\u6837\u5C06\u7ED3\u679C\u5C01\u88C5\u5728 <strong>Optional</strong> \u4E2D\u3002\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/OptionalFlatMap.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Optional</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>function<span class="token punctuation">.</span></span><span class="token class-name">Function</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token class-name">Stream</span></span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">OptionalFlatMap</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> elements <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;12&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;23&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;45&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">static</span> <span class="token class-name">Stream</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">testStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>elements<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token class-name">String</span> descr<span class="token punctuation">,</span>
                     <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Optional</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> func<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot; ---( &quot;</span> <span class="token operator">+</span> descr <span class="token operator">+</span> <span class="token string">&quot; )---&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> elements<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
                    <span class="token function">testStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                            <span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
                            <span class="token punctuation">.</span><span class="token function">findFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                            <span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span>func<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;Add brackets&quot;</span><span class="token punctuation">,</span>
                s <span class="token operator">-&gt;</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;[&quot;</span> <span class="token operator">+</span> s <span class="token operator">+</span> <span class="token string">&quot;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;Increment&quot;</span><span class="token punctuation">,</span> s <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>
                        <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NumberFormatException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;Replace&quot;</span><span class="token punctuation">,</span>
                s <span class="token operator">-&gt;</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;9&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;Take last digit&quot;</span><span class="token punctuation">,</span>
                s <span class="token operator">-&gt;</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span>
                        s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;&quot;</span>
                        <span class="token operator">:</span> s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>---( Add brackets )---
Optional[[12]]
Optional[[]]
Optional[[23]]
Optional[[45]]
Optional.empty
 ---( Increment )---
Optional[13]
Optional[]
Optional[24]
Optional[46]
Optional.empty
 ---( Replace )---
Optional[19]
Optional[]
Optional[93]
Optional[45]
Optional.empty
 ---( Take last digit )---
Optional[2]
Optional[]
Optional[3]
Optional[5]
Optional.empty
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u540C <code>map()</code>\uFF0C<code>flatMap()</code> \u5C06\u63D0\u53D6\u975E\u7A7A <strong>Optional</strong> \u7684\u5185\u5BB9\u5E76\u5C06\u5176\u5E94\u7528\u5728\u6620\u5C04\u51FD\u6570\u3002\u552F\u4E00\u7684\u533A\u522B\u5C31\u662F <code>flatMap()</code> \u4E0D\u4F1A\u628A\u7ED3\u679C\u5305\u88C5\u5728 <strong>Optional</strong> \u4E2D\uFF0C\u56E0\u4E3A\u6620\u5C04\u51FD\u6570\u5DF2\u7ECF\u88AB\u5305\u88C5\u8FC7\u4E86\u3002\u5728\u5982\u4E0A\u793A\u4F8B\u4E2D\uFF0C\u6211\u4EEC\u5DF2\u7ECF\u5728\u6BCF\u4E00\u4E2A\u6620\u5C04\u51FD\u6570\u4E2D\u663E\u5F0F\u5730\u5B8C\u6210\u4E86\u5305\u88C5\uFF0C\u4F46\u662F\u5F88\u663E\u7136 <code>Optional.flatMap()</code> \u662F\u4E3A\u90A3\u4E9B\u81EA\u5DF1\u5DF2\u7ECF\u751F\u6210 <strong>Optional</strong> \u7684\u51FD\u6570\u800C\u8BBE\u8BA1\u7684\u3002</p><h3 id="optional-\u6D41" tabindex="-1"><a class="header-anchor" href="#optional-\u6D41" aria-hidden="true">#</a> Optional \u6D41</h3><p>\u5047\u8BBE\u4F60\u7684\u751F\u6210\u5668\u53EF\u80FD\u4EA7\u751F <code>null</code> \u503C\uFF0C\u90A3\u4E48\u5F53\u7528\u5B83\u6765\u521B\u5EFA\u6D41\u65F6\uFF0C\u4F60\u4F1A\u81EA\u7136\u5730\u60F3\u5230\u7528 <strong>Optional</strong> \u6765\u5305\u88C5\u5143\u7D20\u3002\u5982\u4E0B\u662F\u5B83\u7684\u6837\u5B50\uFF0C\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/Signal.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>function<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Signal</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> msg<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">Signal</span><span class="token punctuation">(</span><span class="token class-name">String</span> msg<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span>msg <span class="token operator">=</span> msg<span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> msg<span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;Signal(&quot;</span> <span class="token operator">+</span> msg <span class="token operator">+</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">static</span> <span class="token class-name">Random</span> rand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token number">47</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Signal</span> <span class="token function">morse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">switch</span><span class="token punctuation">(</span>rand<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Signal</span><span class="token punctuation">(</span><span class="token string">&quot;dot&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Signal</span><span class="token punctuation">(</span><span class="token string">&quot;dash&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">default</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Stream</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Optional</span><span class="token punctuation">&lt;</span><span class="token class-name">Signal</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span><span class="token class-name">Signal</span><span class="token operator">::</span><span class="token function">morse</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>signal <span class="token operator">-&gt;</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>signal<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u6211\u4EEC\u4F7F\u7528\u8FD9\u4E2A\u6D41\u7684\u65F6\u5019\uFF0C\u5FC5\u987B\u8981\u5F04\u6E05\u695A\u5982\u4F55\u89E3\u5305 <strong>Optional</strong>\u3002\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/StreamOfOptionals.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StreamOfOptionals</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Signal</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot; ---&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Signal</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token class-name">Optional</span><span class="token operator">::</span><span class="token function">isPresent</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">Optional</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Optional</span><span class="token punctuation">[</span><span class="token class-name">Signal</span><span class="token punctuation">(</span>dash<span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token class-name">Optional</span><span class="token punctuation">[</span><span class="token class-name">Signal</span><span class="token punctuation">(</span>dot<span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token class-name">Optional</span><span class="token punctuation">[</span><span class="token class-name">Signal</span><span class="token punctuation">(</span>dash<span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token class-name">Optional</span><span class="token punctuation">.</span>empty
<span class="token class-name">Optional</span><span class="token punctuation">.</span>empty
<span class="token class-name">Optional</span><span class="token punctuation">[</span><span class="token class-name">Signal</span><span class="token punctuation">(</span>dash<span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token class-name">Optional</span><span class="token punctuation">.</span>empty
<span class="token class-name">Optional</span><span class="token punctuation">[</span><span class="token class-name">Signal</span><span class="token punctuation">(</span>dot<span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token class-name">Optional</span><span class="token punctuation">[</span><span class="token class-name">Signal</span><span class="token punctuation">(</span>dash<span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token class-name">Optional</span><span class="token punctuation">[</span><span class="token class-name">Signal</span><span class="token punctuation">(</span>dash<span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token operator">--</span><span class="token operator">-</span>
<span class="token class-name">Signal</span><span class="token punctuation">(</span>dot<span class="token punctuation">)</span>
<span class="token class-name">Signal</span><span class="token punctuation">(</span>dot<span class="token punctuation">)</span>
<span class="token class-name">Signal</span><span class="token punctuation">(</span>dash<span class="token punctuation">)</span>
<span class="token class-name">Signal</span><span class="token punctuation">(</span>dash<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u8FD9\u91CC\uFF0C\u6211\u4EEC\u4F7F\u7528 <code>filter()</code> \u6765\u4FDD\u7559\u90A3\u4E9B\u975E\u7A7A <strong>Optional</strong>\uFF0C\u7136\u540E\u5728 <code>map()</code> \u4E2D\u4F7F\u7528 <code>get()</code> \u83B7\u53D6\u5143\u7D20\u3002\u7531\u4E8E\u6BCF\u79CD\u60C5\u51B5\u90FD\u9700\u8981\u5B9A\u4E49\u201C\u7A7A\u503C\u201D\u7684\u542B\u4E49\uFF0C\u6240\u4EE5\u901A\u5E38\u6211\u4EEC\u8981\u4E3A\u6BCF\u4E2A\u5E94\u7528\u7A0B\u5E8F\u91C7\u7528\u4E0D\u540C\u7684\u65B9\u6CD5\u3002</p><h2 id="\u7EC8\u7AEF\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u7EC8\u7AEF\u64CD\u4F5C" aria-hidden="true">#</a> \u7EC8\u7AEF\u64CD\u4F5C</h2><p>\u4EE5\u4E0B\u64CD\u4F5C\u5C06\u4F1A\u83B7\u53D6\u6D41\u7684\u6700\u7EC8\u7ED3\u679C\u3002\u81F3\u6B64\u6211\u4EEC\u65E0\u6CD5\u518D\u7EE7\u7EED\u5F80\u540E\u4F20\u9012\u6D41\u3002\u53EF\u4EE5\u8BF4\uFF0C\u7EC8\u7AEF\u64CD\u4F5C\uFF08Terminal Operations\uFF09\u603B\u662F\u6211\u4EEC\u5728\u6D41\u7BA1\u9053\u4E2D\u6240\u505A\u7684\u6700\u540E\u4E00\u4EF6\u4E8B\u3002</p><h3 id="\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4" aria-hidden="true">#</a> \u6570\u7EC4</h3><ul><li><code>toArray()</code>\uFF1A\u5C06\u6D41\u8F6C\u6362\u6210\u9002\u5F53\u7C7B\u578B\u7684\u6570\u7EC4\u3002</li><li><code>toArray(generator)</code>\uFF1A\u5728\u7279\u6B8A\u60C5\u51B5\u4E0B\uFF0C\u751F\u6210\u81EA\u5B9A\u4E49\u7C7B\u578B\u7684\u6570\u7EC4\u3002</li></ul><p>\u5F53\u6211\u4EEC\u9700\u8981\u5F97\u5230\u6570\u7EC4\u7C7B\u578B\u7684\u6570\u636E\u4EE5\u4FBF\u4E8E\u540E\u7EED\u64CD\u4F5C\u65F6\uFF0C\u4E0A\u9762\u7684\u65B9\u6CD5\u5C31\u5F88\u6709\u7528\u3002\u5047\u8BBE\u6211\u4EEC\u9700\u8981\u590D\u7528\u6D41\u4EA7\u751F\u7684\u968F\u673A\u6570\u65F6\uFF0C\u5C31\u53EF\u4EE5\u8FD9\u4E48\u4F7F\u7528\u3002\u4EE3\u7801\u793A\u4F8B:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/RandInts.java</span>
<span class="token keyword">package</span> <span class="token namespace">streams</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RandInts</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> rints <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token number">47</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ints</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">IntStream</span> <span class="token function">rands</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>rints<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u4F8B\u5C06100\u4E2A\u6570\u503C\u8303\u56F4\u5728 0 \u5230 1000 \u4E4B\u95F4\u7684\u968F\u673A\u6570\u6D41\u8F6C\u6362\u6210\u4E3A\u6570\u7EC4\u5E76\u5C06\u5176\u5B58\u50A8\u5728 <code>rints</code> \u4E2D\u3002\u8FD9\u6837\u4E00\u6765\uFF0C\u6BCF\u6B21\u8C03\u7528 <code>rands()</code> \u7684\u65F6\u5019\u53EF\u4EE5\u91CD\u590D\u83B7\u53D6\u76F8\u540C\u7684\u6574\u6570\u6D41\u3002</p><h3 id="\u5FAA\u73AF" tabindex="-1"><a class="header-anchor" href="#\u5FAA\u73AF" aria-hidden="true">#</a> \u5FAA\u73AF</h3><ul><li><code>forEach(Consumer)</code>\u5E38\u89C1\u5982 <code>System.out::println</code> \u4F5C\u4E3A <strong>Consumer</strong> \u51FD\u6570\u3002</li><li><code>forEachOrdered(Consumer)</code>\uFF1A \u4FDD\u8BC1 <code>forEach</code> \u6309\u7167\u539F\u59CB\u6D41\u987A\u5E8F\u64CD\u4F5C\u3002</li></ul>`,44),tn=n("\u7B2C\u4E00\u79CD\u5F62\u5F0F\uFF1A\u65E0\u5E8F\u64CD\u4F5C\uFF0C\u4EC5\u5728\u5F15\u5165\u5E76\u884C\u6D41\u65F6\u624D\u6709\u610F\u4E49\u3002\u5728 "),pn=n("\u5E76\u53D1\u7F16\u7A0B"),en=n(" \u7AE0\u8282\u4E4B\u524D\u6211\u4EEC\u4E0D\u4F1A\u6DF1\u5165\u7814\u7A76\u8FD9\u4E2A\u95EE\u9898\u3002\u8FD9\u91CC\u7B80\u5355\u4ECB\u7ECD\u4E0B "),on=s("code",null,"parallel()",-1),cn=n("\uFF1A\u53EF\u5B9E\u73B0\u591A\u5904\u7406\u5668\u5E76\u884C\u64CD\u4F5C\u3002\u5B9E\u73B0\u539F\u7406\u4E3A\u5C06\u6D41\u5206\u5272\u4E3A\u591A\u4E2A\uFF08\u901A\u5E38\u6570\u76EE\u4E3A CPU \u6838\u5FC3\u6570\uFF09\u5E76\u5728\u4E0D\u540C\u5904\u7406\u5668\u4E0A\u5206\u522B\u6267\u884C\u64CD\u4F5C\u3002\u56E0\u4E3A\u6211\u4EEC\u91C7\u7528\u7684\u662F\u5185\u90E8\u8FED\u4EE3\uFF0C\u800C\u4E0D\u662F\u5916\u90E8\u8FED\u4EE3\uFF0C\u6240\u4EE5\u8FD9\u662F\u53EF\u80FD\u5B9E\u73B0\u7684\u3002"),ln=s("code",null,"parallel()",-1),un=n(" \u770B\u4F3C\u7B80\u5355\uFF0C\u5B9E\u5219\u68D8\u624B\u3002\u66F4\u591A\u5185\u5BB9\u5C06\u5728\u7A0D\u540E\u7684 "),kn=n("\u5E76\u53D1\u7F16\u7A0B"),rn=n(" \u7AE0\u8282\u4E2D\u5B66\u4E60\u3002"),dn=e(`<p>\u4E0B\u4F8B\u5F15\u5165 <code>parallel()</code> \u6765\u5E2E\u52A9\u7406\u89E3 <code>forEachOrdered(Consumer)</code> \u7684\u4F5C\u7528\u548C\u4F7F\u7528\u573A\u666F\u3002\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/ForEach.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token import static"><span class="token namespace">streams<span class="token punctuation">.</span></span><span class="token class-name">RandInts</span><span class="token punctuation">.</span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ForEach</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> SZ <span class="token operator">=</span> <span class="token number">14</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">rands</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span>SZ<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>n <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%d &quot;</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">rands</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span>SZ<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">parallel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>n <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%d &quot;</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">rands</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span>SZ<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">parallel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">forEachOrdered</span><span class="token punctuation">(</span>n <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%d &quot;</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>258 555 693 861 961 429 868 200 522 207 288 128 551 589
551 861 429 589 200 522 555 693 258 128 868 288 961 207
258 555 693 861 961 429 868 200 522 207 288 128 551 589
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E3A\u4E86\u65B9\u4FBF\u6D4B\u8BD5\u4E0D\u540C\u5927\u5C0F\u7684\u6D41\uFF0C\u6211\u4EEC\u62BD\u79BB\u51FA\u4E86 <code>SZ</code> \u53D8\u91CF\u3002\u7136\u800C\u5373\u4F7F <code>SZ</code> \u503C\u4E3A14\u4E5F\u4EA7\u751F\u4E86\u6709\u8DA3\u7684\u7ED3\u679C\u3002\u5728\u7B2C\u4E00\u4E2A\u6D41\u4E2D\uFF0C\u672A\u4F7F\u7528 <code>parallel()</code> \uFF0C\u56E0\u6B64\u4EE5\u5143\u7D20\u4ECE <code>rands()</code>\u51FA\u6765\u7684\u987A\u5E8F\u8F93\u51FA\u7ED3\u679C\u3002\u5728\u7B2C\u4E8C\u4E2A\u6D41\u4E2D\uFF0C\u5F15\u5165<code>parallel()</code> \uFF0C\u5373\u4FBF\u6D41\u5F88\u5C0F\uFF0C\u8F93\u51FA\u7684\u7ED3\u679C\u7684\u987A\u5E8F\u4E5F\u548C\u524D\u9762\u4E0D\u4E00\u6837\u3002\u8FD9\u662F\u7531\u4E8E\u591A\u5904\u7406\u5668\u5E76\u884C\u64CD\u4F5C\u7684\u539F\u56E0\uFF0C\u5982\u679C\u4F60\u5C06\u7A0B\u5E8F\u591A\u8FD0\u884C\u51E0\u6B21\uFF0C\u4F60\u4F1A\u53D1\u73B0\u8F93\u51FA\u90FD\u4E0D\u76F8\u540C\uFF0C\u8FD9\u662F\u591A\u5904\u7406\u5668\u5E76\u884C\u64CD\u4F5C\u7684\u4E0D\u786E\u5B9A\u6027\u9020\u6210\u7684\u7ED3\u679C\u3002</p><p>\u5728\u6700\u540E\u4E00\u4E2A\u6D41\u4E2D\uFF0C\u540C\u65F6\u4F7F\u7528\u4E86 <code>parallel()</code> \u548C <code>forEachOrdered()</code> \u6765\u5F3A\u5236\u4FDD\u6301\u539F\u59CB\u6D41\u987A\u5E8F\u3002\u56E0\u6B64\uFF0C\u5BF9\u975E\u5E76\u884C\u6D41\u4F7F\u7528 <code>forEachOrdered()</code> \u662F\u6CA1\u6709\u4EFB\u4F55\u5F71\u54CD\u7684\u3002</p><h3 id="\u96C6\u5408" tabindex="-1"><a class="header-anchor" href="#\u96C6\u5408" aria-hidden="true">#</a> \u96C6\u5408</h3><ul><li><code>collect(Collector)</code>\uFF1A\u4F7F\u7528 <strong>Collector</strong> \u6536\u96C6\u6D41\u5143\u7D20\u5230\u7ED3\u679C\u96C6\u5408\u4E2D\u3002</li><li><code>collect(Supplier, BiConsumer, BiConsumer)</code>\uFF1A\u540C\u4E0A\uFF0C\u7B2C\u4E00\u4E2A\u53C2\u6570 <strong>Supplier</strong> \u521B\u5EFA\u4E86\u4E00\u4E2A\u65B0\u7684\u7ED3\u679C\u96C6\u5408\uFF0C\u7B2C\u4E8C\u4E2A\u53C2\u6570 <strong>BiConsumer</strong> \u5C06\u4E0B\u4E00\u4E2A\u5143\u7D20\u6536\u96C6\u5230\u7ED3\u679C\u96C6\u5408\u4E2D\uFF0C\u7B2C\u4E09\u4E2A\u53C2\u6570 <strong>BiConsumer</strong> \u7528\u4E8E\u5C06\u4E24\u4E2A\u7ED3\u679C\u96C6\u5408\u5408\u5E76\u8D77\u6765\u3002</li></ul><p>\u5728\u8FD9\u91CC\u6211\u4EEC\u53EA\u662F\u7B80\u5355\u4ECB\u7ECD\u4E86\u51E0\u4E2A <strong>Collectors</strong> \u7684\u8FD0\u7528\u793A\u4F8B\u3002\u5B9E\u9645\u4E0A\uFF0C\u5B83\u8FD8\u6709\u4E00\u4E9B\u975E\u5E38\u590D\u6742\u7684\u64CD\u4F5C\u5B9E\u73B0\uFF0C\u53EF\u901A\u8FC7\u67E5\u770B <code>java.util.stream.Collectors</code> \u7684 API \u6587\u6863\u4E86\u89E3\u3002\u4F8B\u5982\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5C06\u5143\u7D20\u6536\u96C6\u5230\u4EFB\u610F\u4E00\u79CD\u7279\u5B9A\u7684\u96C6\u5408\u4E2D\u3002</p><p>\u5047\u8BBE\u6211\u4EEC\u73B0\u5728\u4E3A\u4E86\u4FDD\u8BC1\u5143\u7D20\u6709\u5E8F\uFF0C\u5C06\u5143\u7D20\u5B58\u50A8\u5728 <strong>TreeSet</strong> \u4E2D\u3002<strong>Collectors</strong> \u91CC\u9762\u6CA1\u6709\u7279\u5B9A\u7684 <code>toTreeSet()</code>\uFF0C\u4F46\u662F\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7\u5C06\u96C6\u5408\u7684\u6784\u9020\u51FD\u6570\u5F15\u7528\u4F20\u9012\u7ED9 <code>Collectors.toCollection()</code>\uFF0C\u4ECE\u800C\u6784\u5EFA\u4EFB\u4F55\u7C7B\u578B\u7684\u96C6\u5408\u3002\u4E0B\u9762\u6211\u4EEC\u6765\u5C06\u4E00\u4E2A\u6587\u4EF6\u4E2D\u7684\u5355\u8BCD\u6536\u96C6\u5230 <strong>TreeSet</strong> \u96C6\u5408\u4E2D\u3002\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/TreeSetOfWords.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TreeSetOfWords</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span>
    <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> words2 <span class="token operator">=</span>
                <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">lines</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;TreeSetOfWords.java&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span>s <span class="token operator">-&gt;</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;\\\\W+&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>s <span class="token operator">-&gt;</span> <span class="token operator">!</span>s<span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span><span class="token string">&quot;\\\\d+&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// No numbers</span>
                        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token operator">::</span><span class="token function">trim</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>s <span class="token operator">-&gt;</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toCollection</span><span class="token punctuation">(</span><span class="token class-name">TreeSet</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>words2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>[Arrays, Collectors, Exception, Files, Output, Paths,
Set, String, System, TreeSet, TreeSetOfWords, args,
class, collect, file, filter, flatMap, get, import,
java, length, limit, lines, main, map, matches, new,
nio, numbers, out, println, public, split, static,
stream, streams, throws, toCollection, trim, util,
void, words2]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Files.</strong><code>lines()</code> \u6253\u5F00 <strong>Path</strong> \u5E76\u5C06\u5176\u8F6C\u6362\u6210\u4E3A\u7531\u884C\u7EC4\u6210\u7684\u6D41\u3002\u4E0B\u4E00\u884C\u4EE3\u7801\u4EE5\u4E00\u4E2A\u6216\u591A\u4E2A\u975E\u5355\u8BCD\u5B57\u7B26\uFF08<code>\\\\W+</code>\uFF09\u4E3A\u5206\u754C\uFF0C\u5BF9\u6BCF\u4E00\u884C\u8FDB\u884C\u5206\u5272\uFF0C\u7ED3\u679C\u662F\u4EA7\u751F\u4E00\u4E2A\u6570\u7EC4\uFF0C\u7136\u540E\u4F7F\u7528 <strong>Arrays.</strong><code>stream()</code> \u5C06\u6570\u7EC4\u8F6C\u5316\u6210\u4E3A\u6D41\uFF0C\u6700\u540E<code>flatMap()</code>\u5C06\u5404\u884C\u5F62\u6210\u7684\u591A\u4E2A\u5355\u8BCD\u6D41\uFF0C\u6241\u5E73\u6620\u5C04\u4E3A\u4E00\u4E2A\u5355\u8BCD\u6D41\u3002\u4F7F\u7528 <code>matches(\\\\d+)</code> \u67E5\u627E\u5E76\u79FB\u9664\u5168\u90E8\u662F\u6570\u5B57\u7684\u5B57\u7B26\u4E32\uFF08\u6CE8\u610F,<code>words2</code> \u662F\u901A\u8FC7\u7684\uFF09\u3002\u7136\u540E\u7528 <strong>String.</strong><code>trim()</code> \u53BB\u9664\u5355\u8BCD\u4E24\u8FB9\u7684\u7A7A\u767D\uFF0C<code>filter()</code> \u8FC7\u6EE4\u6240\u6709\u957F\u5EA6\u5C0F\u4E8E3\u7684\u5355\u8BCD\uFF0C\u5E76\u53EA\u83B7\u53D6\u524D100\u4E2A\u5355\u8BCD\uFF0C\u6700\u540E\u5C06\u5176\u4FDD\u5B58\u5230 <strong>TreeSet</strong> \u4E2D\u3002</p><p>\u6211\u4EEC\u4E5F\u53EF\u4EE5\u5728\u6D41\u4E2D\u751F\u6210 <strong>Map</strong>\u3002\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/MapCollector.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">Pair</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">Character</span> c<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">Integer</span> i<span class="token punctuation">;</span>
    <span class="token class-name">Pair</span><span class="token punctuation">(</span><span class="token class-name">Character</span> c<span class="token punctuation">,</span> <span class="token class-name">Integer</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>c <span class="token operator">=</span> c<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>i <span class="token operator">=</span> i<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token class-name">Character</span> <span class="token function">getC</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> c<span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">getI</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> i<span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;Pair(&quot;</span> <span class="token operator">+</span> c <span class="token operator">+</span> <span class="token string">&quot;, &quot;</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">RandomPair</span> <span class="token punctuation">{</span>
    <span class="token class-name">Random</span> rand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token number">47</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// An infinite iterator of random capital letters:</span>
    <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Character</span><span class="token punctuation">&gt;</span></span> capChars <span class="token operator">=</span> rand<span class="token punctuation">.</span><span class="token function">ints</span><span class="token punctuation">(</span><span class="token number">65</span><span class="token punctuation">,</span><span class="token number">91</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">mapToObj</span><span class="token punctuation">(</span>i <span class="token operator">-&gt;</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span>i<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">Stream</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Pair</span><span class="token punctuation">&gt;</span></span> <span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> rand<span class="token punctuation">.</span><span class="token function">ints</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">distinct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">mapToObj</span><span class="token punctuation">(</span>i <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Pair</span><span class="token punctuation">(</span>capChars<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MapCollector</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Character</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span>
                <span class="token keyword">new</span> <span class="token class-name">RandomPair</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span>
                                <span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toMap</span><span class="token punctuation">(</span><span class="token class-name">Pair</span><span class="token operator">::</span><span class="token function">getI</span><span class="token punctuation">,</span> <span class="token class-name">Pair</span><span class="token operator">::</span><span class="token function">getC</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>{688=W, 309=C, 293=B, 761=N, 858=N, 668=G, 622=F, 751=N}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>Pair</strong> \u53EA\u662F\u4E00\u4E2A\u57FA\u7840\u7684\u6570\u636E\u5BF9\u8C61\u3002<strong>RandomPair</strong> \u521B\u5EFA\u4E86\u968F\u673A\u751F\u6210\u7684 <strong>Pair</strong> \u5BF9\u8C61\u6D41\u3002\u5728 Java \u4E2D\uFF0C\u6211\u4EEC\u4E0D\u80FD\u76F4\u63A5\u4EE5\u67D0\u79CD\u65B9\u5F0F\u7EC4\u5408\u4E24\u4E2A\u6D41\u3002\u6240\u4EE5\u6211\u521B\u5EFA\u4E86\u4E00\u4E2A\u6574\u6570\u6D41\uFF0C\u5E76\u4E14\u4F7F\u7528 <code>mapToObj()</code> \u5C06\u6574\u6570\u6D41\u8F6C\u5316\u6210\u4E3A <strong>Pair</strong> \u6D41\u3002 <strong>capChars</strong>\u7684\u968F\u673A\u5927\u5199\u5B57\u6BCD\u8FED\u4EE3\u5668\u521B\u5EFA\u4E86\u6D41\uFF0C\u7136\u540E<code>next()</code>\u8BA9\u6211\u4EEC\u53EF\u4EE5\u5728<code>stream()</code>\u4E2D\u4F7F\u7528\u8FD9\u4E2A\u6D41\u3002\u5C31\u6211\u6240\u77E5\uFF0C\u8FD9\u662F\u5C06\u591A\u4E2A\u6D41\u7EC4\u5408\u6210\u65B0\u7684\u5BF9\u8C61\u6D41\u7684\u552F\u4E00\u65B9\u6CD5\u3002</p><p>\u5728\u8FD9\u91CC\uFF0C\u6211\u4EEC\u53EA\u4F7F\u7528\u6700\u7B80\u5355\u5F62\u5F0F\u7684 <code>Collectors.toMap()</code>\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u53EA\u9700\u8981\u4E24\u4E2A\u4ECE\u6D41\u4E2D\u83B7\u53D6\u952E\u548C\u503C\u7684\u51FD\u6570\u3002\u8FD8\u6709\u5176\u4ED6\u91CD\u8F7D\u5F62\u5F0F\uFF0C\u5176\u4E2D\u4E00\u79CD\u5F53\u662F\u952E\u53D1\u751F\u51B2\u7A81\u65F6\uFF0C\u4F7F\u7528\u4E00\u4E2A\u51FD\u6570\u6765\u5904\u7406\u51B2\u7A81\u3002</p><p>\u5927\u591A\u6570\u60C5\u51B5\u4E0B\uFF0C<code>java.util.stream.Collectors</code> \u4E2D\u9884\u8BBE\u7684 <strong>Collector</strong> \u5C31\u80FD\u6EE1\u8DB3\u6211\u4EEC\u7684\u8981\u6C42\u3002\u9664\u6B64\u4E4B\u5916\uFF0C\u4F60\u8FD8\u53EF\u4EE5\u4F7F\u7528\u7B2C\u4E8C\u79CD\u5F62\u5F0F\u7684 <code>collect()</code>\u3002 \u6211\u628A\u5B83\u7559\u4F5C\u66F4\u9AD8\u7EA7\u7684\u7EC3\u4E60\uFF0C\u4E0B\u4F8B\u7ED9\u51FA\u57FA\u672C\u7528\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/SpecialCollector.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SpecialCollector</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> words <span class="token operator">=</span>
                <span class="token class-name">FileToWords</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token string">&quot;Cheese.dat&quot;</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">ArrayList</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">,</span>
                                <span class="token class-name">ArrayList</span><span class="token operator">::</span><span class="token function">add</span><span class="token punctuation">,</span>
                                <span class="token class-name">ArrayList</span><span class="token operator">::</span><span class="token function">addAll</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        words<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>s <span class="token operator">-&gt;</span> s<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;cheese&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>cheese
cheese
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u8FD9\u91CC\uFF0C <strong>ArrayList</strong> \u7684\u65B9\u6CD5\u5DF2\u7ECF\u505A\u4E86\u4F60\u6240\u9700\u8981\u7684\u64CD\u4F5C\uFF0C\u4F46\u66F4\u6709\u53EF\u80FD\u7684\u662F\uFF0C\u5982\u679C\u4F60\u5FC5\u987B\u4F7F\u7528\u8FD9\u79CD\u5F62\u5F0F\u7684 <code>collect()</code>\uFF0C\u5C31\u8981\u81EA\u5DF1\u521B\u5EFA\u7279\u5B9A\u7684\u5B9A\u4E49\u3002</p><h3 id="\u7EC4\u5408" tabindex="-1"><a class="header-anchor" href="#\u7EC4\u5408" aria-hidden="true">#</a> \u7EC4\u5408</h3><ul><li><code>reduce(BinaryOperator)</code>\uFF1A\u4F7F\u7528 <strong>BinaryOperator</strong> \u6765\u7EC4\u5408\u6240\u6709\u6D41\u4E2D\u7684\u5143\u7D20\u3002\u56E0\u4E3A\u6D41\u53EF\u80FD\u4E3A\u7A7A\uFF0C\u5176\u8FD4\u56DE\u503C\u4E3A <strong>Optional</strong>\u3002</li><li><code>reduce(identity, BinaryOperator)</code>\uFF1A\u529F\u80FD\u540C\u4E0A\uFF0C\u4F46\u662F\u4F7F\u7528 <strong>identity</strong> \u4F5C\u4E3A\u5176\u7EC4\u5408\u7684\u521D\u59CB\u503C\u3002\u56E0\u6B64\u5982\u679C\u6D41\u4E3A\u7A7A\uFF0C<strong>identity</strong> \u5C31\u662F\u7ED3\u679C\u3002</li><li><code>reduce(identity, BiFunction, BinaryOperator)</code>\uFF1A\u66F4\u590D\u6742\u7684\u4F7F\u7528\u5F62\u5F0F\uFF08\u6682\u4E0D\u4ECB\u7ECD\uFF09\uFF0C\u8FD9\u91CC\u628A\u5B83\u5305\u542B\u5728\u5185\uFF0C\u56E0\u4E3A\u5B83\u53EF\u4EE5\u63D0\u9AD8\u6548\u7387\u3002\u901A\u5E38\uFF0C\u6211\u4EEC\u53EF\u4EE5\u663E\u5F0F\u5730\u7EC4\u5408 <code>map()</code> \u548C <code>reduce()</code> \u6765\u66F4\u7B80\u5355\u7684\u8868\u8FBE\u5B83\u3002</li></ul><p>\u4E0B\u9762\u6765\u770B\u4E0B <code>reduce</code> \u7684\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/Reduce.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">Frobnitz</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> size<span class="token punctuation">;</span>
    <span class="token class-name">Frobnitz</span><span class="token punctuation">(</span><span class="token keyword">int</span> sz<span class="token punctuation">)</span> <span class="token punctuation">{</span> size <span class="token operator">=</span> sz<span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;Frobnitz(&quot;</span> <span class="token operator">+</span> size <span class="token operator">+</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// Generator:</span>
    <span class="token keyword">static</span> <span class="token class-name">Random</span> rand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token number">47</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> BOUND <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token class-name">Frobnitz</span> <span class="token function">supply</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Frobnitz</span><span class="token punctuation">(</span>rand<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span>BOUND<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Reduce</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span><span class="token class-name">Frobnitz</span><span class="token operator">::</span><span class="token function">supply</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>fr0<span class="token punctuation">,</span> fr1<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> fr0<span class="token punctuation">.</span>size <span class="token operator">&lt;</span> <span class="token number">50</span> <span class="token operator">?</span> fr0 <span class="token operator">:</span> fr1<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">ifPresent</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Frobnitz(58)
Frobnitz(55)
Frobnitz(93)
Frobnitz(61)
Frobnitz(61)
Frobnitz(29)
Frobnitz(68)
Frobnitz(0)
Frobnitz(22)
Frobnitz(7)
Frobnitz(29)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Frobnitz</strong> \u5305\u542B\u4E00\u4E2A\u53EF\u751F\u6210\u81EA\u8EAB\u7684\u751F\u6210\u5668 <code>supply()</code> \uFF1B\u56E0\u4E3A <code>supply()</code> \u65B9\u6CD5\u4F5C\u4E3A\u4E00\u4E2A <code>Supplier&lt;Frobnitz&gt;</code> \u662F\u7B7E\u540D\u517C\u5BB9\u7684\uFF0C\u6211\u4EEC\u53EF\u4EE5\u628A <code>supply()</code> \u4F5C\u4E3A\u4E00\u4E2A\u65B9\u6CD5\u5F15\u7528\u4F20\u9012\u7ED9 <code>Stream.generate()</code> \uFF08\u8FD9\u79CD\u7B7E\u540D\u517C\u5BB9\u6027\u88AB\u79F0\u4F5C\u7ED3\u6784\u4E00\u81F4\u6027\uFF09\u3002\u6211\u4EEC\u4F7F\u7528\u4E86\u6CA1\u6709\u201C\u521D\u59CB\u503C\u201D\u4F5C\u4E3A\u7B2C\u4E00\u4E2A\u53C2\u6570\u7684 <code>reduce()</code>\u65B9\u6CD5\uFF0C\u6240\u4EE5\u4EA7\u751F\u7684\u7ED3\u679C\u662F <strong>Optional</strong> \u7C7B\u578B\u3002<code>Optional.ifPresent()</code> \u65B9\u6CD5\u53EA\u6709\u5728\u7ED3\u679C\u975E\u7A7A\u7684\u65F6\u5019\u624D\u4F1A\u8C03\u7528 <code>Consumer&lt;Frobnitz&gt;</code> \uFF08<code>println</code> \u65B9\u6CD5\u53EF\u4EE5\u88AB\u8C03\u7528\u662F\u56E0\u4E3A <strong>Frobnitz</strong> \u53EF\u4EE5\u901A\u8FC7 <code>toString()</code> \u65B9\u6CD5\u8F6C\u6362\u6210 <strong>String</strong>\uFF09\u3002</p><p>Lambda \u8868\u8FBE\u5F0F\u4E2D\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570 <code>fr0</code> \u662F <code>reduce()</code> \u4E2D\u4E0A\u4E00\u6B21\u8C03\u7528\u7684\u7ED3\u679C\u3002\u800C\u7B2C\u4E8C\u4E2A\u53C2\u6570 <code>fr1</code> \u662F\u4ECE\u6D41\u4F20\u9012\u8FC7\u6765\u7684\u503C\u3002</p><p><code>reduce()</code> \u4E2D\u7684 Lambda \u8868\u8FBE\u5F0F\u4F7F\u7528\u4E86\u4E09\u5143\u8868\u8FBE\u5F0F\u6765\u83B7\u53D6\u7ED3\u679C\uFF0C\u5F53 <code>fr0</code> \u7684 <code>size</code> \u503C\u5C0F\u4E8E 50 \u7684\u65F6\u5019\uFF0C\u5C06 <code>fr0</code> \u4F5C\u4E3A\u7ED3\u679C\uFF0C\u5426\u5219\u5C06\u5E8F\u5217\u4E2D\u7684\u4E0B\u4E00\u4E2A\u5143\u7D20\u5373 <code>fr1</code>\u4F5C\u4E3A\u7ED3\u679C\u3002\u5F53\u53D6\u5F97\u7B2C\u4E00\u4E2A <code>size</code> \u503C\u5C0F\u4E8E 50 \u7684 <code>Frobnitz</code>\uFF0C\u53EA\u8981\u5F97\u5230\u8FD9\u4E2A\u7ED3\u679C\u5C31\u4F1A\u5FFD\u7565\u6D41\u4E2D\u5176\u4ED6\u5143\u7D20\u3002\u8FD9\u662F\u4E2A\u975E\u5E38\u5947\u602A\u7684\u9650\u5236\uFF0C \u4F46\u4E5F\u786E\u5B9E\u8BA9\u6211\u4EEC\u5BF9 <code>reduce()</code> \u6709\u4E86\u66F4\u591A\u7684\u4E86\u89E3\u3002</p><h3 id="\u5339\u914D" tabindex="-1"><a class="header-anchor" href="#\u5339\u914D" aria-hidden="true">#</a> \u5339\u914D</h3><ul><li><code>allMatch(Predicate)</code> \uFF1A\u5982\u679C\u6D41\u7684\u6BCF\u4E2A\u5143\u7D20\u63D0\u4F9B\u7ED9 <strong>Predicate</strong> \u90FD\u8FD4\u56DE true \uFF0C\u7ED3\u679C\u8FD4\u56DE\u4E3A true\u3002\u5728\u7B2C\u4E00\u4E2A false \u65F6\uFF0C\u5219\u505C\u6B62\u6267\u884C\u8BA1\u7B97\u3002</li><li><code>anyMatch(Predicate)</code>\uFF1A\u5982\u679C\u6D41\u7684\u4EFB\u610F\u4E00\u4E2A\u5143\u7D20\u63D0\u4F9B\u7ED9 <strong>Predicate</strong> \u8FD4\u56DE true \uFF0C\u7ED3\u679C\u8FD4\u56DE\u4E3A true\u3002\u5728\u7B2C\u4E00\u4E2A true \u662F\u505C\u6B62\u6267\u884C\u8BA1\u7B97\u3002</li><li><code>noneMatch(Predicate)</code>\uFF1A\u5982\u679C\u6D41\u7684\u6BCF\u4E2A\u5143\u7D20\u63D0\u4F9B\u7ED9 <strong>Predicate</strong> \u90FD\u8FD4\u56DE false \u65F6\uFF0C\u7ED3\u679C\u8FD4\u56DE\u4E3A true\u3002\u5728\u7B2C\u4E00\u4E2A true \u65F6\u505C\u6B62\u6267\u884C\u8BA1\u7B97\u3002</li></ul><p>\u6211\u4EEC\u5DF2\u7ECF\u5728 <code>Prime.java</code> \u4E2D\u770B\u5230\u4E86 <code>noneMatch()</code> \u7684\u793A\u4F8B\uFF1B<code>allMatch()</code> \u548C <code>anyMatch()</code> \u7684\u7528\u6CD5\u57FA\u672C\u4E0A\u662F\u7B49\u540C\u7684\u3002\u4E0B\u9762\u6211\u4EEC\u6765\u63A2\u7A76\u4E00\u4E0B\u77ED\u8DEF\u884C\u4E3A\u3002\u4E3A\u4E86\u6D88\u9664\u5197\u4F59\u4EE3\u7801\uFF0C\u6211\u4EEC\u521B\u5EFA\u4E86 <code>show()</code>\u3002\u9996\u5148\u6211\u4EEC\u5FC5\u987B\u77E5\u9053\u5982\u4F55\u7EDF\u4E00\u5730\u63CF\u8FF0\u8FD9\u4E09\u4E2A\u5339\u914D\u5668\u7684\u64CD\u4F5C\uFF0C\u7136\u540E\u518D\u5C06\u5176\u8F6C\u6362\u4E3A <strong>Matcher</strong> \u63A5\u53E3\u3002\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/Matching.java</span>
<span class="token comment">// Demonstrates short-circuiting of *Match() operations</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>function<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token import static"><span class="token namespace">streams<span class="token punctuation">.</span></span><span class="token class-name">RandInts</span><span class="token punctuation">.</span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">Matcher</span> <span class="token keyword">extends</span> <span class="token class-name">BiPredicate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Stream</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">,</span> <span class="token class-name">Predicate</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
        
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Matching</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token class-name">Matcher</span> match<span class="token punctuation">,</span> <span class="token keyword">int</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
                match<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>
                        <span class="token class-name">IntStream</span><span class="token punctuation">.</span><span class="token function">rangeClosed</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span>
                                <span class="token punctuation">.</span><span class="token function">boxed</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                                <span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span>n <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%d &quot;</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                        n <span class="token operator">-&gt;</span> n <span class="token operator">&lt;</span> val<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">show</span><span class="token punctuation">(</span><span class="token class-name">Stream</span><span class="token operator">::</span><span class="token function">allMatch</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">show</span><span class="token punctuation">(</span><span class="token class-name">Stream</span><span class="token operator">::</span><span class="token function">allMatch</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">show</span><span class="token punctuation">(</span><span class="token class-name">Stream</span><span class="token operator">::</span><span class="token function">anyMatch</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">show</span><span class="token punctuation">(</span><span class="token class-name">Stream</span><span class="token operator">::</span><span class="token function">anyMatch</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">show</span><span class="token punctuation">(</span><span class="token class-name">Stream</span><span class="token operator">::</span><span class="token function">noneMatch</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">show</span><span class="token punctuation">(</span><span class="token class-name">Stream</span><span class="token operator">::</span><span class="token function">noneMatch</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>1 2 3 4 5 6 7 8 9 true
1 2 3 4 false
1 true
1 2 3 4 5 6 7 8 9 false
1 false
1 2 3 4 5 6 7 8 9 true
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>BiPredicate</strong> \u662F\u4E00\u4E2A\u4E8C\u5143\u8C13\u8BCD\uFF0C\u5B83\u63A5\u53D7\u4E24\u4E2A\u53C2\u6570\u5E76\u8FD4\u56DE true \u6216\u8005 false\u3002\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F\u6211\u4EEC\u8981\u6D4B\u8BD5\u7684\u6D41\uFF0C\u7B2C\u4E8C\u4E2A\u53C2\u6570\u662F\u4E00\u4E2A\u8C13\u8BCD <strong>Predicate</strong>\u3002<strong>Matcher</strong> \u53EF\u4EE5\u5339\u914D\u6240\u6709\u7684 <strong>Stream::*Match</strong> \u65B9\u6CD5\uFF0C\u6240\u4EE5\u53EF\u4EE5\u5C06\u6BCF\u4E00\u4E2A<strong>Stream::*Match</strong>\u65B9\u6CD5\u5F15\u7528\u4F20\u9012\u5230 <code>show()</code> \u4E2D\u3002\u5BF9<code>match.test()</code> \u7684\u8C03\u7528\u4F1A\u88AB\u8F6C\u6362\u6210 \u5BF9\u65B9\u6CD5\u5F15\u7528<strong>Stream::*Match</strong> \u7684\u8C03\u7528\u3002</p><p><code>show()</code> \u63A5\u53D7\u4E00\u4E2A<strong>Matcher</strong>\u548C\u4E00\u4E2A <code>val</code> \u53C2\u6570\uFF0C<code>val</code> \u5728\u5224\u65AD\u6D4B\u8BD5 <code>n &lt; val</code>\u4E2D\u6307\u5B9A\u4E86\u6700\u5927\u503C\u3002<code>show()</code> \u65B9\u6CD5\u751F\u6210\u4E86\u6574\u65701-9\u7EC4\u6210\u7684\u4E00\u4E2A\u6D41\u3002<code>peek()</code>\u7528\u6765\u5C55\u793A\u5728\u6D4B\u8BD5\u77ED\u8DEF\u4E4B\u524D\u6D4B\u8BD5\u8FDB\u884C\u5230\u4E86\u54EA\u4E00\u6B65\u3002\u4ECE\u8F93\u51FA\u4E2D\u53EF\u4EE5\u770B\u5230\u6BCF\u6B21\u90FD\u53D1\u751F\u4E86\u77ED\u8DEF\u3002</p><h3 id="\u67E5\u627E" tabindex="-1"><a class="header-anchor" href="#\u67E5\u627E" aria-hidden="true">#</a> \u67E5\u627E</h3><ul><li><code>findFirst()</code>\uFF1A\u8FD4\u56DE\u7B2C\u4E00\u4E2A\u6D41\u5143\u7D20\u7684 <strong>Optional</strong>\uFF0C\u5982\u679C\u6D41\u4E3A\u7A7A\u8FD4\u56DE <strong>Optional.empty</strong>\u3002</li><li><code>findAny(</code>\uFF1A\u8FD4\u56DE\u542B\u6709\u4EFB\u610F\u6D41\u5143\u7D20\u7684 <strong>Optional</strong>\uFF0C\u5982\u679C\u6D41\u4E3A\u7A7A\u8FD4\u56DE <strong>Optional.empty</strong>\u3002</li></ul><p>\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/SelectElement.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token import static"><span class="token namespace">streams<span class="token punctuation">.</span></span><span class="token class-name">RandInts</span><span class="token punctuation">.</span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SelectElement</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">rands</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAsInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
                <span class="token function">rands</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parallel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAsInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">rands</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findAny</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAsInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
                <span class="token function">rands</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parallel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findAny</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAsInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>258
258
258
242
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u65E0\u8BBA\u6D41\u662F\u5426\u4E3A\u5E76\u884C\u5316\uFF0C<code>findFirst()</code> \u603B\u662F\u4F1A\u9009\u62E9\u6D41\u4E2D\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\u3002\u5BF9\u4E8E\u975E\u5E76\u884C\u6D41\uFF0C<code>findAny()</code>\u4F1A\u9009\u62E9\u6D41\u4E2D\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\uFF08\u5373\u4F7F\u4ECE\u5B9A\u4E49\u4E0A\u6765\u770B\u662F\u9009\u62E9\u4EFB\u610F\u5143\u7D20\uFF09\u3002\u5728\u8FD9\u4E2A\u4F8B\u5B50\u4E2D\uFF0C\u7528 <code>parallel()</code> \u5C06\u6D41\u5E76\u884C\u5316\uFF0C\u4EE5\u5C55\u793A <code>findAny()</code> \u4E0D\u9009\u62E9\u6D41\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\u7684\u53EF\u80FD\u6027\u3002</p><p>\u5982\u679C\u5FC5\u987B\u9009\u62E9\u6D41\u4E2D\u6700\u540E\u4E00\u4E2A\u5143\u7D20\uFF0C\u90A3\u5C31\u4F7F\u7528 <code>reduce()</code>\u3002\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/LastElement.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LastElement</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">OptionalInt</span> last <span class="token operator">=</span> <span class="token class-name">IntStream</span><span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>n1<span class="token punctuation">,</span> n2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> n2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>last<span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Non-numeric object:</span>
        <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> lastobj <span class="token operator">=</span>
                <span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;one&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;two&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;three&quot;</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>n1<span class="token punctuation">,</span> n2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> n2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
                lastobj<span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token string">&quot;Nothing there!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>19
three
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>reduce()</code> \u7684\u53C2\u6570\u53EA\u662F\u7528\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u66FF\u6362\u4E86\u6700\u540E\u4E24\u4E2A\u5143\u7D20\uFF0C\u6700\u7EC8\u53EA\u751F\u6210\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u3002\u5982\u679C\u4E3A\u6570\u5B57\u6D41\uFF0C\u4F60\u5FC5\u987B\u4F7F\u7528\u76F8\u8FD1\u7684\u6570\u5B57 <strong>Optional</strong> \u7C7B\u578B\uFF08 numeric optional type\uFF09\uFF0C\u5426\u5219\u4F7F\u7528 <strong>Optional</strong> \u7C7B\u578B\uFF0C\u5C31\u50CF\u4E0A\u4F8B\u4E2D\u7684 <code>Optional&lt;String&gt;</code>\u3002</p><h3 id="\u4FE1\u606F" tabindex="-1"><a class="header-anchor" href="#\u4FE1\u606F" aria-hidden="true">#</a> \u4FE1\u606F</h3><ul><li><code>count()</code>\uFF1A\u6D41\u4E2D\u7684\u5143\u7D20\u4E2A\u6570\u3002</li><li><code>max(Comparator)</code>\uFF1A\u6839\u636E\u6240\u4F20\u5165\u7684 <strong>Comparator</strong> \u6240\u51B3\u5B9A\u7684\u201C\u6700\u5927\u201D\u5143\u7D20\u3002</li><li><code>min(Comparator)</code>\uFF1A\u6839\u636E\u6240\u4F20\u5165\u7684 <strong>Comparator</strong> \u6240\u51B3\u5B9A\u7684\u201C\u6700\u5C0F\u201D\u5143\u7D20\u3002</li></ul><p><strong>String</strong> \u7C7B\u578B\u6709\u9884\u8BBE\u7684 <strong>Comparator</strong> \u5B9E\u73B0\u3002\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/Informational.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>function<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Informational</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span>
    <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
                <span class="token class-name">FileToWords</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token string">&quot;Cheese.dat&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
                <span class="token class-name">FileToWords</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token string">&quot;Cheese.dat&quot;</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span>CASE_INSENSITIVE_ORDER<span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token string">&quot;NONE&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
                <span class="token class-name">FileToWords</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token string">&quot;Cheese.dat&quot;</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span>CASE_INSENSITIVE_ORDER<span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token string">&quot;NONE&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>32
a
you
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>min()</code> \u548C <code>max()</code> \u7684\u8FD4\u56DE\u7C7B\u578B\u4E3A <strong>Optional</strong>\uFF0C\u8FD9\u9700\u8981\u6211\u4EEC\u4F7F\u7528 <code>orElse()</code>\u6765\u89E3\u5305\u3002</p><h3 id="\u6570\u5B57\u6D41\u4FE1\u606F" tabindex="-1"><a class="header-anchor" href="#\u6570\u5B57\u6D41\u4FE1\u606F" aria-hidden="true">#</a> \u6570\u5B57\u6D41\u4FE1\u606F</h3><ul><li><code>average()</code> \uFF1A\u6C42\u53D6\u6D41\u5143\u7D20\u5E73\u5747\u503C\u3002</li><li><code>max()</code> \u548C <code>min()</code>\uFF1A\u6570\u503C\u6D41\u64CD\u4F5C\u65E0\u9700 <strong>Comparator</strong>\u3002</li><li><code>sum()</code>\uFF1A\u5BF9\u6240\u6709\u6D41\u5143\u7D20\u8FDB\u884C\u6C42\u548C\u3002</li><li><code>summaryStatistics()</code>\uFF1A\u751F\u6210\u53EF\u80FD\u6709\u7528\u7684\u6570\u636E\u3002\u76EE\u524D\u5E76\u4E0D\u592A\u6E05\u695A\u8FD9\u4E2A\u65B9\u6CD5\u5B58\u5728\u7684\u5FC5\u8981\u6027\uFF0C\u56E0\u4E3A\u6211\u4EEC\u5176\u5B9E\u53EF\u4EE5\u7528\u66F4\u76F4\u63A5\u7684\u65B9\u6CD5\u83B7\u5F97\u9700\u8981\u7684\u6570\u636E\u3002</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// streams/NumericStreamInfo.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token import static"><span class="token namespace">streams<span class="token punctuation">.</span></span><span class="token class-name">RandInts</span><span class="token punctuation">.</span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NumericStreamInfo</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">rands</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">average</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAsDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">rands</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAsInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">rands</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAsInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">rands</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">rands</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">summaryStatistics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>507.94
998
8
50794
IntSummaryStatistics{count=100, sum=50794, min=8, average=507.940000, max=998}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u4F8B\u64CD\u4F5C\u5BF9\u4E8E <strong>LongStream</strong> \u548C <strong>DoubleStream</strong> \u540C\u6837\u9002\u7528\u3002</p><h2 id="\u672C\u7AE0\u5C0F\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u672C\u7AE0\u5C0F\u7ED3" aria-hidden="true">#</a> \u672C\u7AE0\u5C0F\u7ED3</h2><p>\u6D41\u5F0F\u64CD\u4F5C\u6539\u53D8\u5E76\u6781\u5927\u5730\u63D0\u5347\u4E86 Java \u8BED\u8A00\u7684\u53EF\u7F16\u7A0B\u6027\uFF0C\u5E76\u53EF\u80FD\u6781\u5927\u5730\u963B\u6B62\u4E86 Java \u7F16\u7A0B\u4EBA\u5458\u5411\u8BF8\u5982 Scala \u8FD9\u79CD\u51FD\u6570\u5F0F\u8BED\u8A00\u7684\u6D41\u8F6C\u3002\u5728\u672C\u4E66\u7684\u5269\u4F59\u90E8\u5206\uFF0C\u6211\u4EEC\u5C06\u5C3D\u53EF\u80FD\u5730\u4F7F\u7528\u6D41\u3002</p><p>[^1]: \u5728\u8F6F\u4EF6\u6216\u4FE1\u606F\u5EFA\u6A21\u7684\u4E0A\u4E0B\u6587\u4E2D\uFF0C\u5FEB\u4E50\u8DEF\u5F84(\u6709\u65F6\u79F0\u4E3A\u5FEB\u4E50\u6D41)\u662F\u6CA1\u6709\u5F02\u5E38\u6216\u9519\u8BEF\u6761\u4EF6\u7684\u9ED8\u8BA4\u573A\u666F\u3002\u4F8B\u5982\uFF0C\u9A8C\u8BC1\u4FE1\u7528\u5361\u53F7\u7684\u51FD\u6570\u7684\u5FEB\u4E50\u8DEF\u5F84\u5E94\u8BE5\u662F\u4EFB\u4F55\u9A8C\u8BC1\u89C4\u5219\u90FD\u4E0D\u4F1A\u51FA\u73B0\u9519\u8BEF\u7684\u5730\u65B9\uFF0C\u4ECE\u800C\u8BA9\u6267\u884C\u6210\u529F\u5730\u7EE7\u7EED\u5230\u6700\u540E\uFF0C\u751F\u6210\u4E00\u4E2A\u79EF\u6781\u7684\u54CD\u5E94\u3002<a href="https://en.wikipedia.org/wiki/Happy_path" target="_blank" rel="noopener noreferrer">\u89C1 wikipedia: happy path</a></p><div style="page-break-after:always;"></div>`,71);function mn(vn,bn){const a=c("RouterLink");return l(),i("div",null,[k,s("p",null,[r,d,m,v,b,g,f,y,w,t(a,{to:"/docs/reprint/onjava8/book/24-Concurrent-Programming.html"},{default:p(()=>[h]),_:1}),S]),q,j,x,O,_,s("p",null,[E,t(a,{to:"/docs/reprint/onjava8/book/10-Interfaces.html"},{default:p(()=>[F]),_:1}),I,C,R,T,P,B,M]),N,s("p",null,[A,t(a,{to:"/docs/reprint/onjava8/book/18-Strings.html"},{default:p(()=>[z]),_:1}),L,W,D,G,H,J,V,Z,U]),K,s("p",null,[Y,$,Q,X,t(a,{to:"/docs/reprint/onjava8/book/15-Exceptions.html"},{default:p(()=>[nn]),_:1}),sn]),an,s("p",null,[tn,t(a,{to:"/docs/reprint/onjava8/book/24-Concurrent-Programming.html"},{default:p(()=>[pn]),_:1}),en,on,cn]),s("p",null,[ln,un,t(a,{to:"/docs/reprint/onjava8/book/24-Concurrent-Programming.html"},{default:p(()=>[kn]),_:1}),rn]),dn])}var fn=o(u,[["render",mn],["__file","14-Streams.html.vue"]]);export{fn as default};
