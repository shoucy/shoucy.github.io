import{_ as n,o as s,c as a,e as t}from"./app.205a3d76.js";const p={},e=t(`<p>[TOC]</p><h1 id="\u9644\u5F55-\u5BF9\u8C61\u5E8F\u5217\u5316" tabindex="-1"><a class="header-anchor" href="#\u9644\u5F55-\u5BF9\u8C61\u5E8F\u5217\u5316" aria-hidden="true">#</a> \u9644\u5F55:\u5BF9\u8C61\u5E8F\u5217\u5316</h1><p>\u5F53\u4F60\u521B\u5EFA\u5BF9\u8C61\u65F6\uFF0C\u53EA\u8981\u4F60\u9700\u8981\uFF0C\u5B83\u5C31\u4F1A\u4E00\u76F4\u5B58\u5728\uFF0C\u4F46\u662F\u5728\u7A0B\u5E8F\u7EC8\u6B62\u65F6\uFF0C\u65E0\u8BBA\u5982\u4F55\u5B83\u90FD\u4E0D\u4F1A\u7EE7\u7EED\u5B58\u5728\u3002\u5C3D\u7BA1\u8FD9\u4E48\u505A\u80AF\u5B9A\u662F\u6709\u610F\u4E49\u7684\uFF0C\u4F46\u662F\u4ECD\u65E7\u5B58\u5728\u67D0\u4E9B\u60C5\u51B5\uFF0C\u5982\u679C\u5BF9\u8C61\u80FD\u591F\u5728\u7A0B\u5E8F\u4E0D\u8FD0\u884C\u7684\u60C5\u51B5\u4E0B\u4ECD\u80FD\u5B58\u5728\u5E76\u4FDD\u5B58\u5176\u4FE1\u606F\uFF0C\u90A3\u5C06\u975E\u5E38\u6709\u7528\u3002\u8FD9\u6837\uFF0C\u5728\u4E0B\u6B21\u8FD0\u884C\u7A0B\u5E8F\u65F6\uFF0C\u8BE5\u5BF9\u8C61\u5C06\u88AB\u91CD\u5EFA\u5E76\u4E14\u62E5\u6709\u7684\u4FE1\u606F\u4E0E\u5728\u7A0B\u5E8F\u4E0A\u6B21\u8FD0\u884C\u65F6\u5B83\u6240\u62E5\u6709\u7684\u4FE1\u606F\u76F8\u540C\u3002\u5F53\u7136\uFF0C\u4F60\u53EF\u4EE5\u901A\u8FC7\u5C06\u4FE1\u606F\u5199\u5165\u6587\u4EF6\u6216\u6570\u636E\u5E93\u6765\u8FBE\u5230\u76F8\u540C\u7684\u6548\u679C\uFF0C\u4F46\u662F\u5728\u4F7F\u4E07\u7269\u90FD\u6210\u4E3A\u5BF9\u8C61\u7684\u7CBE\u795E\u4E2D\uFF0C\u5982\u679C\u80FD\u591F\u5C06\u4E00\u4E2A\u5BF9\u8C61\u58F0\u660E\u4E3A\u662F\u201C\u6301\u4E45\u6027\u201D\u7684\uFF0C\u5E76\u4E3A\u6211\u4EEC\u5904\u7406\u6389\u6240\u6709\u7EC6\u8282\uFF0C\u90A3\u5C06\u4F1A\u663E\u5F97\u5341\u5206\u65B9\u4FBF\u3002</p><p>Java \u7684\u5BF9\u8C61\u5E8F\u5217\u5316\u5C06\u90A3\u4E9B\u5B9E\u73B0\u4E86 Serializable \u63A5\u53E3\u7684\u5BF9\u8C61\u8F6C\u6362\u6210\u4E00\u4E2A\u5B57\u8282\u5E8F\u5217\uFF0C\u5E76\u80FD\u591F\u5728\u4EE5\u540E\u5C06\u8FD9\u4E2A\u5B57\u8282\u5E8F\u5217\u5B8C\u5168\u6062\u590D\u4E3A\u539F\u6765\u7684\u5BF9\u8C61\u3002\u8FD9\u4E00\u8FC7\u7A0B\u751A\u81F3\u53EF\u901A\u8FC7\u7F51\u7EDC\u8FDB\u884C\uFF0C\u8FD9\u610F\u5473\u7740\u5E8F\u5217\u5316\u673A\u5236\u80FD\u81EA\u52A8\u5F25\u8865\u4E0D\u540C\u64CD\u4F5C\u7CFB\u7EDF\u4E4B\u95F4\u7684\u5DEE\u5F02\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u53EF\u4EE5\u5728\u8FD0\u884C Windows \u7CFB\u7EDF\u7684\u8BA1\u7B97\u673A\u4E0A\u521B\u5EFA\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5C06\u5176\u5E8F\u5217\u5316\uFF0C\u901A\u8FC7\u7F51\u7EDC\u5C06\u5B83\u53D1\u9001\u7ED9\u4E00\u53F0\u8FD0\u884C Unix \u7CFB\u7EDF\u7684\u8BA1\u7B97\u673A\uFF0C\u7136\u540E\u5728\u90A3\u91CC\u51C6\u786E\u5730\u91CD\u65B0\u7EC4\u88C5\uFF0C\u800C\u5374\u4E0D\u5FC5\u62C5\u5FC3\u6570\u636E\u5728\u4E0D\u540C\u673A\u5668\u4E0A\u7684\u8868\u793A\u4F1A\u4E0D\u540C\uFF0C\u4E5F\u4E0D\u5FC5\u5173\u5FC3\u5B87\u8282\u7684\u987A\u5E8F\u6216\u8005\u5176\u4ED6\u4EFB\u4F55\u7EC6\u8282\u3002</p><p>\u5C31\u5176\u672C\u8EAB\u6765\u8BF4\uFF0C\u5BF9\u8C61\u5E8F\u5217\u5316\u53EF\u4EE5\u5B9E\u73B0\u8F7B\u91CF\u7EA7\u6301\u4E45\u6027\uFF08lightweight persistence\uFF09\uFF0C\u201C\u6301\u4E45\u6027\u201D\u610F\u5473\u7740\u4E00\u4E2A\u5BF9\u8C61\u7684\u751F\u5B58\u5468\u671F\u5E76\u4E0D\u53D6\u51B3\u4E8E\u7A0B\u5E8F\u662F\u5426\u6B63\u5728\u6267\u884C\u5B83\u53EF\u4EE5\u751F\u5B58\u4E8E\u7A0B\u5E8F\u7684\u8C03\u7528\u4E4B\u95F4\u3002\u901A\u8FC7\u5C06\u4E00\u4E2A\u5E8F\u5217\u5316\u5BF9\u8C61\u5199\u5165\u78C1\u76D8\uFF0C\u7136\u540E\u5728\u91CD\u65B0\u8C03\u7528\u7A0B\u5E8F\u65F6\u6062\u590D\u8BE5\u5BF9\u8C61\uFF0C\u5C31\u80FD\u591F\u5B9E\u73B0\u6301\u4E45\u6027\u7684\u6548\u679C\u3002\u4E4B\u6240\u4EE5\u79F0\u5176\u4E3A\u201C\u8F7B\u91CF\u7EA7\u201D\uFF0C\u662F\u56E0\u4E3A\u4E0D\u80FD\u7528\u67D0\u79CD&quot;persistent&quot;\uFF08\u6301\u4E45\uFF09\u5173\u952E\u5B57\u6765\u7B80\u5355\u5730\u5B9A\u4E49\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5E76\u8BA9\u7CFB\u7EDF\u81EA\u52A8\u7EF4\u62A4\u5176\u4ED6\u7EC6\u8282\u95EE\u9898\uFF08\u5C3D\u7BA1\u5C06\u6765\u6709\u53EF\u80FD\u5B9E\u73B0\uFF09\u3002\u76F8\u53CD\uFF0C\u5BF9\u8C61\u5FC5\u987B\u5728\u7A0B\u5E8F\u4E2D\u663E\u5F0F\u5730\u5E8F\u5217\u5316\uFF08serialize\uFF09\u548C\u53CD\u5E8F\u5217\u5316\u8FD8\u539F\uFF08deserialize\uFF09\uFF0C\u5982\u679C\u9700\u8981\u4E2A\u66F4\u4E25\u683C\u7684\u6301\u4E45\u6027\u673A\u5236\uFF0C\u53EF\u4EE5\u8003\u8651\u50CF Hibernate \u4E4B\u7C7B\u7684\u5DE5\u5177\u3002</p><p>\u5BF9\u8C61\u5E8F\u5217\u5316\u7684\u6982\u5FF5\u52A0\u5165\u5230\u8BED\u8A00\u4E2D\u662F\u4E3A\u4E86\u652F\u6301\u4E24\u79CD\u4E3B\u8981\u7279\u6027\u3002\u4E00\u662F Java \u7684\u8FDC\u7A0B\u65B9\u6CD5\u8C03\u7528\uFF08Remote Method Invocation\uFF0CRMI\uFF09\uFF0C\u5B83\u4F7F\u5B58\u6D3B\u4E8E\u5176\u4ED6\u8BA1\u7B97\u673A\u4E0A\u7684\u5BF9\u8C61\u4F7F\u7528\u8D77\u6765\u5C31\u50CF\u662F\u5B58\u6D3B\u4E8E\u672C\u673A\u4E0A\u4E00\u6837\u3002\u5F53\u5411\u8FDC\u7A0B\u5BF9\u8C61\u53D1\u9001\u6D88\u606F\u65F6\uFF0C\u9700\u8981\u901A\u8FC7\u5BF9\u8C61\u5E8F\u5217\u5316\u6765\u4F20\u8F93\u53C2\u6570\u548C\u8FD4\u56DE\u503C\u3002</p><p>\u518D\u8005\uFF0C\u5BF9 Java Beans \u6765\u8BF4\uFF0C\u5BF9\u8C61\u7684\u5E8F\u5217\u5316\u4E5F\u662F\u5FC5\u9700\u7684\uFF08\u5728\u64B0\u5199\u672C\u6587\u65F6\u88AB\u89C6\u4E3A\u5931\u8D25\u7684\u6280\u672F\uFF09\uFF0C\u4F7F\u7528\u4E00\u4E2A Bean \u65F6\uFF0C\u4E00\u822C\u60C5\u51B5\u4E0B\u662F\u5728\u8BBE\u8BA1\u9636\u6BB5\u5BF9\u5B83\u7684\u72B6\u6001\u4FE1\u606F\u8FDB\u884C\u914D\u7F6E\u3002\u8FD9\u79CD\u72B6\u6001\u4FE1\u606F\u5FC5\u987B\u4FDD\u5B58\u4E0B\u6765\uFF0C\u5E76\u5728\u7A0B\u5E8F\u542F\u52A8\u65F6\u8FDB\u884C\u540E\u671F\u6062\u590D\uFF0C\u8FD9\u79CD\u5177\u4F53\u5DE5\u4F5C\u5C31\u662F\u7531\u5BF9\u8C61\u5E8F\u5217\u5316\u5B8C\u6210\u7684\u3002</p><p>\u53EA\u8981\u5BF9\u8C61\u5B9E\u73B0\u4E86 Serializable \u63A5\u53E3\uFF08\u8BE5\u63A5\u53E3\u4EC5\u662F\u4E00\u4E2A\u6807\u8BB0\u63A5\u53E3\uFF0C\u4E0D\u5305\u62EC\u4EFB\u4F55\u65B9\u6CD5\uFF09\uFF0C\u5BF9\u8C61\u7684\u5E8F\u5217\u5316\u5904\u7406\u5C31\u4F1A\u975E\u5E38\u7B80\u5355\u3002\u5F53\u5E8F\u5217\u5316\u7684\u6982\u5FF5\u88AB\u52A0\u5165\u5230\u8BED\u8A00\u4E2D\u65F6\uFF0C\u8BB8\u591A\u6807\u51C6\u5E93\u7C7B\u90FD\u53D1\u751F\u4E86\u6539\u53D8\uFF0C\u4EE5\u4FBF\u5177\u5907\u5E8F\u5217\u5316\u7279\u6027-\u5176\u4E2D\u5305\u62EC\u6240\u6709\u57FA\u672C\u6570\u636E\u7C7B\u578B\u7684\u5C01\u88C5\u5668\u3001\u6240\u6709\u5BB9\u5668\u7C7B\u4EE5\u53CA\u8BB8\u591A\u5176\u4ED6\u7684\u4E1C\u897F\u3002\u751A\u81F3 Class \u5BF9\u8C61\u4E5F\u53EF\u4EE5\u88AB\u5E8F\u5217\u5316\u3002</p><p>\u8981\u5E8F\u5217\u5316\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u9996\u5148\u8981\u521B\u5EFA\u67D0\u4E9B OutputStream \u5BF9\u8C61\uFF0C\u7136\u540E\u5C06\u5176\u5C01\u88C5\u5728\u4E00\u4E2A ObjectOutputStream \u5BF9\u8C61\u5185\u3002\u8FD9\u65F6\uFF0C\u53EA\u9700\u8C03\u7528 writeObject() \u5373\u53EF\u5C06\u5BF9\u8C61\u5E8F\u5217\u5316\uFF0C\u5E76\u5C06\u5176\u53D1\u9001\u7ED9 OutputStream\uFF08\u5BF9\u8C61\u5316\u5E8F\u5217\u662F\u57FA\u4E8E\u5B57\u8282\u7684\uFF0C\u56E0\u8981\u4F7F\u7528 InputStream \u548C OutputStream \u7EE7\u627F\u5C42\u6B21\u7ED3\u6784\uFF09\u3002\u8981\u53CD\u5411\u8FDB\u884C\u8BE5\u8FC7\u7A0B\uFF08\u5373\u5C06\u4E00\u4E2A\u5E8F\u5217\u8FD8\u539F\u4E3A\u4E00\u4E2A\u5BF9\u8C61\uFF09\uFF0C\u9700\u8981\u5C06\u4E00\u4E2A InputStream \u5C01\u88C5\u5728 ObjectInputStream \u5185\uFF0C\u7136\u540E\u8C03\u7528 readObject()\u3002\u548C\u5F80\u5E38\u4E00\u6837\uFF0C\u6211\u4EEC\u6700\u540E\u83B7\u5F97\u7684\u662F\u4E00\u4E2A\u5F15\u7528\uFF0C\u5B83\u6307\u5411\u4E00\u4E2A\u5411\u4E0A\u8F6C\u578B\u7684 Object\uFF0C\u6240\u4EE5\u5FC5\u987B\u5411\u4E0B\u8F6C\u578B\u624D\u80FD\u76F4\u63A5\u8BBE\u7F6E\u5B83\u4EEC\u3002</p><p>\u5BF9\u8C61\u5E8F\u5217\u5316\u7279\u522B\u201C\u806A\u660E\u201D\u7684\u4E00\u4E2A\u5730\u65B9\u662F\u5B83\u4E0D\u4EC5\u4FDD\u5B58\u4E86\u5BF9\u8C61\u7684\u201C\u5168\u666F\u56FE\u201D\uFF0C\u800C\u4E14\u80FD\u8FFD\u8E2A\u5BF9\u8C61\u5185\u6240\u5305\u542B\u7684\u6240\u6709\u5F15\u7528\uFF0C\u5E76\u4FDD\u5B58\u90A3\u4E9B\u5BF9\u8C61\uFF1B\u63A5\u7740\u53C8\u80FD\u5BF9\u5BF9\u8C61\u5185\u5305\u542B\u7684\u6BCF\u4E2A\u8FD9\u6837\u7684\u5F15\u7528\u8FDB\u884C\u8FFD\u8E2A\uFF0C\u4F9D\u6B64\u7C7B\u63A8\u3002\u8FD9\u79CD\u60C5\u51B5\u6709\u65F6\u88AB\u79F0\u4E3A\u201C\u5BF9\u8C61\u7F51\u201D\uFF0C\u5355\u4E2A\u5BF9\u8C61\u53EF\u4E0E\u4E4B\u5EFA\u7ACB\u8FDE\u63A5\uFF0C\u800C\u4E14\u5B83\u8FD8\u5305\u542B\u4E86\u5BF9\u8C61\u7684\u5F15\u7528\u6570\u7EC4\u4EE5\u53CA\u6210\u5458\u5BF9\u8C61\u3002\u5982\u679C\u5FC5\u987B\u4FDD\u6301\u4E00\u5957\u81EA\u5DF1\u7684\u5BF9\u8C61\u5E8F\u5217\u5316\u673A\u5236\uFF0C\u90A3\u4E48\u7EF4\u62A4\u90A3\u4E9B\u53EF\u8FFD\u8E2A\u5230\u6240\u6709\u94FE\u63A5\u7684\u4EE3\u7801\u53EF\u80FD\u4F1A\u663E\u5F97\u975E\u5E38\u9EBB\u70E6\u3002\u7136\u800C\uFF0C\u7531\u4E8E Java \u7684\u5BF9\u8C61\u5E8F\u5217\u5316\u4F3C\u4E4E\u627E\u4E0D\u51FA\u4EC0\u4E48\u7F3A\u70B9\uFF0C\u6240\u4EE5\u8BF7\u5C3D\u91CF\u4E0D\u8981\u81EA\u5DF1\u52A8\u624B\uFF0C\u8BA9\u5B83\u7528\u4F18\u5316\u7684\u7B97\u6CD5\u81EA\u52A8\u7EF4\u62A4\u6574\u4E2A\u5BF9\u8C61\u7F51\u3002\u4E0B\u9762\u8FD9\u4E2A\u4F8B\u5B50\u901A\u8FC7\u5BF9\u94FE\u63A5\u7684\u5BF9\u8C61\u751F\u6210\u4E00\u4E2A worm\uFF08\u8815\u866B\uFF09\u5BF9\u5E8F\u5217\u5316\u673A\u5236\u8FDB\u884C\u4E86\u6D4B\u8BD5\u3002\u6BCF\u4E2A\u5BF9\u8C61\u90FD\u4E0E worm \u4E2D\u7684\u4E0B\u4E00\u6BB5\u94FE\u63A5\uFF0C\u540C\u65F6\u53C8\u4E0E\u5C5E\u4E8E\u4E0D\u540C\u7C7B\uFF08Data\uFF09\u7684\u5BF9\u8C61\u5F15\u7528\u6570\u7EC4\u94FE\u63A5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// serialization/Worm.java</span>
<span class="token comment">// Demonstrates object serialization</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">Data</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> n<span class="token punctuation">;</span>
    <span class="token class-name">Data</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span>n <span class="token operator">=</span> n<span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Worm</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Random</span> rand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token number">47</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Data</span><span class="token punctuation">[</span><span class="token punctuation">]</span> d <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token keyword">new</span> <span class="token class-name">Data</span><span class="token punctuation">(</span>rand<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token class-name">Data</span><span class="token punctuation">(</span>rand<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token class-name">Data</span><span class="token punctuation">(</span>rand<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Worm</span> next<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">char</span> c<span class="token punctuation">;</span>
    <span class="token comment">// Value of i == number of segments</span>
    <span class="token keyword">public</span> <span class="token class-name">Worm</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">char</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Worm constructor: &quot;</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        c <span class="token operator">=</span> x<span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">--</span>i <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
            next <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Worm</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token class-name">Worm</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;No-arg constructor&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">StringBuilder</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        result<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
        result<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;(&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Data</span> dat <span class="token operator">:</span> d<span class="token punctuation">)</span>
            result<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>dat<span class="token punctuation">)</span><span class="token punctuation">;</span>
        result<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>next <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            result<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> result<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span>
    <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ClassNotFoundException</span><span class="token punctuation">,</span>
            <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">Worm</span> w <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Worm</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token char">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;w = &quot;</span> <span class="token operator">+</span> w<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span><span class="token punctuation">(</span>
                <span class="token class-name">ObjectOutputStream</span> out <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectOutputStream</span><span class="token punctuation">(</span>
                        <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token string">&quot;worm.dat&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            out<span class="token punctuation">.</span><span class="token function">writeObject</span><span class="token punctuation">(</span><span class="token string">&quot;Worm storage\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            out<span class="token punctuation">.</span><span class="token function">writeObject</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">try</span><span class="token punctuation">(</span>
                <span class="token class-name">ObjectInputStream</span> in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectInputStream</span><span class="token punctuation">(</span>
                        <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token string">&quot;worm.dat&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> s <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>in<span class="token punctuation">.</span><span class="token function">readObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Worm</span> w2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Worm</span><span class="token punctuation">)</span>in<span class="token punctuation">.</span><span class="token function">readObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s <span class="token operator">+</span> <span class="token string">&quot;w2 = &quot;</span> <span class="token operator">+</span> w2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">try</span><span class="token punctuation">(</span>
                <span class="token class-name">ByteArrayOutputStream</span> bout <span class="token operator">=</span>
                        <span class="token keyword">new</span> <span class="token class-name">ByteArrayOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">ObjectOutputStream</span> out2 <span class="token operator">=</span>
                        <span class="token keyword">new</span> <span class="token class-name">ObjectOutputStream</span><span class="token punctuation">(</span>bout<span class="token punctuation">)</span>
        <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            out2<span class="token punctuation">.</span><span class="token function">writeObject</span><span class="token punctuation">(</span><span class="token string">&quot;Worm storage\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            out2<span class="token punctuation">.</span><span class="token function">writeObject</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token punctuation">;</span>
            out2<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span><span class="token punctuation">(</span>
                    <span class="token class-name">ObjectInputStream</span> in2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectInputStream</span><span class="token punctuation">(</span>
                            <span class="token keyword">new</span> <span class="token class-name">ByteArrayInputStream</span><span class="token punctuation">(</span>
                                    bout<span class="token punctuation">.</span><span class="token function">toByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">String</span> s <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>in2<span class="token punctuation">.</span><span class="token function">readObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Worm</span> w3 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Worm</span><span class="token punctuation">)</span>in2<span class="token punctuation">.</span><span class="token function">readObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s <span class="token operator">+</span> <span class="token string">&quot;w3 = &quot;</span> <span class="token operator">+</span> w3<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u4E3A\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Worm constructor: 6
Worm constructor: 5
Worm constructor: 4
Worm constructor: 3
Worm constructor: 2
Worm constructor: 1
w = :a(853):b(119):c(802):d(788):e(199):f(881)
Worm storage
w2 = :a(853):b(119):c(802):d(788):e(199):f(881)
Worm storage
w3 = :a(853):b(119):c(802):d(788):e(199):f(881)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u66F4\u6709\u8DA3\u7684\u662F\uFF0CWorm \u5185\u7684 Data \u5BF9\u8C61\u6570\u7EC4\u662F\u7528\u968F\u673A\u6570\u521D\u59CB\u5316\u7684\uFF08\u8FD9\u6837\u5C31\u4E0D\u7528\u6000\u7591\u7F16\u8BD1\u5668\u4FDD\u7559\u4E86\u67D0\u79CD\u539F\u59CB\u4FE1\u606F\uFF09\uFF0C\u6BCF\u4E2A Worm \u6BB5\u90FD\u7528\u4E00\u4E2A char \u52A0\u4EE5\u6807\u8BB0\u3002\u8BE5 char \u662F\u5728\u9012\u5F52\u751F\u6210\u94FE\u63A5\u7684 Worm \u5217\u8868\u65F6\u81EA\u52A8\u4EA7\u751F\u7684\u3002\u8981\u521B\u5EFA\u4E00\u4E2A Worm\uFF0C\u5FC5\u987B\u544A\u8BC9\u6784\u9020\u5668\u4F60\u6240\u5E0C\u671B\u7684\u5B83\u7684\u957F\u5EA6\u3002\u5728\u4EA7\u751F\u4E0B\u4E00\u4E2A\u5F15\u7528\u65F6\uFF0C\u8981\u8C03\u7528 Worm \u6784\u9020\u5668\uFF0C\u5E76\u5C06\u957F\u5EA6\u51CF 1\uFF0C\u4EE5\u6B64\u7C7B\u63A8\u3002\u6700\u540E\u4E00\u4E2A next \u5F15\u7528\u5219\u4E3A null\uFF08\u7A7A\uFF09\uFF0C\u8868\u793A\u5DF2\u5230\u8FBE Worm \u7684\u5C3E\u90E8</p><p>\u4EE5\u4E0A\u8FD9\u4E9B\u64CD\u4F5C\u90FD\u4F7F\u5F97\u4E8B\u60C5\u53D8\u5F97\u66F4\u52A0\u590D\u6742\uFF0C\u4ECE\u800C\u52A0\u5927\u4E86\u5BF9\u8C61\u5E8F\u5217\u5316\u7684\u96BE\u5EA6\u3002\u7136\u800C\uFF0C\u771F\u6B63\u7684\u5E8F\u5217\u5316\u8FC7\u7A0B\u5374\u662F\u975E\u5E38\u7B80\u5355\u7684\u3002\u4E00\u65E6\u4ECE\u53E6\u5916\u67D0\u4E2A\u6D41\u521B\u5EFA\u4E86 ObjectOutputstream\uFF0CwriteObject() \u5C31\u4F1A\u5C06\u5BF9\u8C61\u5E8F\u5217\u5316\u3002\u6CE8\u610F\u4E5F\u53EF\u4EE5\u4E3A\u4E00\u4E2A String \u8C03\u7528 writeObject() \u4E5F\u53EF\u4EE5\u7528\u4E0E DataOutputStream \u76F8\u540C\u7684\u65B9\u6CD5\u5199\u4EBA\u6240\u6709\u57FA\u672C\u6570\u636E\u7C7B\u578B\uFF08\u5B83\u4EEC\u5177\u6709\u540C\u6837\u7684\u63A5\u53E3\uFF09\u3002</p><p>\u6709\u4E24\u6BB5\u770B\u8D77\u6765\u76F8\u4F3C\u7684\u72EC\u7ACB\u7684\u4EE3\u7801\u3002\u4E00\u4E2A\u8BFB\u5199\u7684\u662F\u6587\u4EF6\uFF0C\u800C\u53E6\u4E00\u4E2A\u8BFB\u5199\u7684\u662F\u5B57\u8282\u6570\u7EC4\uFF08ByteArray\uFF09\uFF0C\u53EF\u5229\u7528\u5E8F\u5217\u5316\u5C06\u5BF9\u8C61\u8BFB\u5199\u5230\u4EFB\u4F55 DatalnputStream \u6216\u8005 DataOutputStream\u3002</p><p>\u4ECE\u8F93\u51FA\u4E2D\u53EF\u4EE5\u770B\u51FA\uFF0C\u88AB\u8FD8\u539F\u540E\u7684\u5BF9\u8C61\u786E\u5B9E\u5305\u542B\u4E86\u539F\u5BF9\u8C61\u4E2D\u7684\u6240\u6709\u94FE\u63A5\u3002</p><p>\u6CE8\u610F\u5728\u5BF9\u4E00\u4E2A Serializable \u5BF9\u8C61\u8FDB\u884C\u8FD8\u539F\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u6CA1\u6709\u8C03\u7528\u4EFB\u4F55\u6784\u9020\u5668\uFF0C\u5305\u62EC\u9ED8\u8BA4\u7684\u6784\u9020\u5668\u3002\u6574\u4E2A\u5BF9\u8C61\u90FD\u662F\u901A\u8FC7\u4ECE InputStream \u4E2D\u53D6\u5F97\u6570\u636E\u6062\u590D\u800C\u6765\u7684\u3002</p><h2 id="\u67E5\u627E\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u67E5\u627E\u7C7B" aria-hidden="true">#</a> \u67E5\u627E\u7C7B</h2><p>\u4F60\u6216\u8BB8\u4F1A\u5947\u602A\uFF0C\u5C06\u4E00\u4E2A\u5BF9\u8C61\u4ECE\u5B83\u7684\u5E8F\u5217\u5316\u72B6\u6001\u4E2D\u6062\u590D\u51FA\u6765\uFF0C\u6709\u54EA\u4E9B\u5DE5\u4F5C\u662F\u5FC5\u987B\u7684\u5462\uFF1F\u4E3E\u4E2A\u4F8B\u5B50\u6765\u8BF4\uFF0C\u5047\u5982\u6211\u4EEC\u5C06\u4E00\u4E2A\u5BF9\u8C61\u5E8F\u5217\u5316\uFF0C\u5E76\u901A\u8FC7\u7F51\u7EDC\u5C06\u5176\u4F5C\u4E3A\u6587\u4EF6\u4F20\u9001\u7ED9\u53E6\u4E00\u53F0\u8BA1\u7B97\u673A\uFF0C\u90A3\u4E48\uFF0C\u53E6\u4E00\u53F0\u8BA1\u7B97\u673A\u4E0A\u7684\u7A0B\u5E8F\u53EF\u4EE5\u53EA\u5229\u7528\u8BE5\u6587\u4EF6\u5185\u5BB9\u6765\u8FD8\u539F\u8FD9\u4E2A\u5BF9\u8C61\u5417\uFF1F</p><p>\u56DE\u7B54\u8FD9\u4E2A\u95EE\u9898\u7684\u6700\u597D\u65B9\u6CD5\u5C31\u662F\u505A\u4E00\u4E2A\u5B9E\u9A8C\u3002\u4E0B\u9762\u8FD9\u4E2A\u6587\u4EF6\u4F4D\u4E8E\u672C\u7AE0\u7684\u5B50\u76EE\u5F55\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// serialization/Alien.java</span>
<span class="token comment">// A serializable class</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Alien</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u800C\u7528\u4E8E\u521B\u5EFA\u548C\u5E8F\u5217\u5316\u4E00\u4E2A Alien \u5BF9\u8C61\u7684\u6587\u4EF6\u4E5F\u4F4D\u4E8E\u76F8\u540C\u7684\u76EE\u5F55\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// serialization/FreezeAlien.java</span>
<span class="token comment">// Create a serialized output file</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FreezeAlien</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span><span class="token punctuation">(</span>
                <span class="token class-name">ObjectOutputStream</span> out <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectOutputStream</span><span class="token punctuation">(</span>
                        <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token string">&quot;X.file&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Alien</span> quellek <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Alien</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            out<span class="token punctuation">.</span><span class="token function">writeObject</span><span class="token punctuation">(</span>quellek<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E00\u65E6\u8BE5\u7A0B\u5E8F\u88AB\u7F16\u8BD1\u548C\u8FD0\u884C\uFF0C\u5B83\u5C31\u4F1A\u5728 c12 \u76EE\u5F55\u4E0B\u4EA7\u751F\u4E00\u4E2A\u540D\u4E3A X.file \u7684\u6587\u4EF6\u3002\u4EE5\u4E0B\u4EE3\u7801\u4F4D\u4E8E\u4E00\u4E2A\u540D\u4E3A xiles \u7684\u5B50\u76EE\u5F55\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// serialization/xfiles/ThawAlien.java</span>
<span class="token comment">// Recover a serialized file</span>
<span class="token comment">// {java serialization.xfiles.ThawAlien}</span>
<span class="token comment">// {RunFirst: FreezeAlien}</span>
<span class="token keyword">package</span> <span class="token namespace">serialization<span class="token punctuation">.</span>xfiles</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ThawAlien</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">ObjectInputStream</span> in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectInputStream</span><span class="token punctuation">(</span>
                <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;X.file&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Object</span> mystery <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">readObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>mystery<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u4E3A\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Alien</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4E3A\u4E86\u6B63\u5E38\u8FD0\u884C\uFF0C\u5FC5\u987B\u4FDD\u8BC1 Java \u865A\u62DF\u673A\u80FD\u627E\u5230\u76F8\u5173\u7684.class \u6587\u4EF6\u3002</p><h2 id="\u63A7\u5236\u5E8F\u5217\u5316" tabindex="-1"><a class="header-anchor" href="#\u63A7\u5236\u5E8F\u5217\u5316" aria-hidden="true">#</a> \u63A7\u5236\u5E8F\u5217\u5316</h2><p>\u6B63\u5982\u5927\u5BB6\u6240\u770B\u5230\u7684\uFF0C\u9ED8\u8BA4\u7684\u5E8F\u5217\u5316\u673A\u5236\u5E76\u4E0D\u96BE\u64CD\u7EB5\u3002\u7136\u800C\uFF0C\u5982\u679C\u6709\u7279\u6B8A\u7684\u9700\u8981\u90A3\u53C8\u8BE5\u600E\u4E48\u529E\u5462\uFF1F\u4F8B\u5982\uFF0C\u4E5F\u8BB8\u8981\u8003\u8651\u7279\u6B8A\u7684\u5B89\u5168\u95EE\u9898\uFF0C\u800C\u4E14\u4F60\u4E0D\u5E0C\u671B\u5BF9\u8C61\u7684\u67D0\u4E00\u90E8\u5206\u88AB\u5E8F\u5217\u5316\uFF1B\u6216\u8005\u4E00\u4E2A\u5BF9\u8C61\u88AB\u8FD8\u539F\u4EE5\u540E\uFF0C\u67D0\u5B50\u5BF9\u8C61\u9700\u8981\u91CD\u65B0\u521B\u5EFA\uFF0C\u4ECE\u800C\u4E0D\u5FC5\u5C06\u8BE5\u5B50\u5BF9\u8C61\u5E8F\u5217\u5316\u3002</p><p>\u5728\u8FD9\u4E9B\u7279\u6B8A\u60C5\u51B5\u4E0B\uFF0C\u53EF\u901A\u8FC7\u5B9E\u73B0 Externalizable \u63A5\u53E3\u2014\u2014\u4EE3\u66FF\u5B9E\u73B0 Serializable \u63A5\u53E3-\u6765\u5BF9\u5E8F\u5217\u5316\u8FC7\u7A0B\u8FDB\u884C\u63A7\u5236\u3002\u8FD9\u4E2A Externalizable \u63A5\u53E3\u7EE7\u627F\u4E86 Serializable \u63A5\u53E3\uFF0C\u540C\u65F6\u589E\u6DFB\u4E86\u4E24\u4E2A\u65B9\u6CD5\uFF1AwriteExternal() \u548C readExternal()\u3002\u8FD9\u4E24\u4E2A\u65B9\u6CD5\u4F1A\u5728\u5E8F\u5217\u5316\u548C\u53CD\u5E8F\u5217\u5316\u8FD8\u539F\u7684\u8FC7\u7A0B\u4E2D\u88AB\u81EA\u52A8\u8C03\u7528\uFF0C\u4EE5\u4FBF\u6267\u884C\u4E00\u4E9B\u7279\u6B8A\u64CD\u4F5C\u3002</p><p>\u4E0B\u9762\u8FD9\u4E2A\u4F8B\u5B50\u5C55\u793A\u4E86 Externalizable \u63A5\u53E3\u65B9\u6CD5\u7684\u7B80\u5355\u5B9E\u73B0\u3002\u6CE8\u610F Blip1 \u548C Blip2 \u9664\u4E86\u7EC6\u5FAE\u7684\u5DEE\u522B\u4E4B\u5916\uFF0C\u51E0\u4E4E\u5B8C\u5168\u4E00\u81F4\uFF08\u7814\u7A76\u4E00\u4E0B\u4EE3\u7801\uFF0C\u770B\u770B\u4F60\u80FD\u5426\u53D1\u73B0\uFF09\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// serialization/Blips.java</span>
<span class="token comment">// Simple use of Externalizable &amp; a pitfall</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">Blip1</span> <span class="token keyword">implements</span> <span class="token class-name">Externalizable</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">Blip1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Blip1 Constructor&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">writeExternal</span><span class="token punctuation">(</span><span class="token class-name">ObjectOutput</span> out<span class="token punctuation">)</span>
            <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Blip1.writeExternal&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">readExternal</span><span class="token punctuation">(</span><span class="token class-name">ObjectInput</span> in<span class="token punctuation">)</span>
            <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ClassNotFoundException</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Blip1.readExternal&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Blip2</span> <span class="token keyword">implements</span> <span class="token class-name">Externalizable</span> <span class="token punctuation">{</span>
    <span class="token class-name">Blip2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Blip2 Constructor&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">writeExternal</span><span class="token punctuation">(</span><span class="token class-name">ObjectOutput</span> out<span class="token punctuation">)</span>
            <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Blip2.writeExternal&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">readExternal</span><span class="token punctuation">(</span><span class="token class-name">ObjectInput</span> in<span class="token punctuation">)</span>
            <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ClassNotFoundException</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Blip2.readExternal&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Blips</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Constructing objects:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Blip1</span> b1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Blip1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Blip2</span> b2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Blip2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span><span class="token punctuation">(</span>
                <span class="token class-name">ObjectOutputStream</span> o <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectOutputStream</span><span class="token punctuation">(</span>
                        <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token string">&quot;Blips.serialized&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Saving objects:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            o<span class="token punctuation">.</span><span class="token function">writeObject</span><span class="token punctuation">(</span>b1<span class="token punctuation">)</span><span class="token punctuation">;</span>
            o<span class="token punctuation">.</span><span class="token function">writeObject</span><span class="token punctuation">(</span>b2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// Now get them back:</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Recovering b1:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span><span class="token punctuation">(</span>
                <span class="token class-name">ObjectInputStream</span> in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectInputStream</span><span class="token punctuation">(</span>
                        <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token string">&quot;Blips.serialized&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            b1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Blip1</span><span class="token punctuation">)</span>in<span class="token punctuation">.</span><span class="token function">readObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> <span class="token operator">|</span> <span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// OOPS! Throws an exception:</span>
        <span class="token comment">//- System.out.println(&quot;Recovering b2:&quot;);</span>
        <span class="token comment">//- b2 = (Blip2)in.readObject();</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u4E3A\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Constructing objects:
Blip1 Constructor
Blip2 Constructor
Saving objects:
Blip1.writeExternal
Blip2.writeExternal
Recovering b1:
Blip1 Constructor
Blip1.readExternal
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CA1\u6709\u6062\u590D Blip2 \u5BF9\u8C61\u7684\u539F\u56E0\u662F\u90A3\u6837\u505A\u4F1A\u5BFC\u81F4\u4E00\u4E2A\u5F02\u5E38\u3002\u4F60\u627E\u51FA Blip1 \u548C Blip2 \u4E4B\u95F4\u7684\u533A\u522B\u4E86\u5417\uFF1FBlipl \u7684\u6784\u9020\u5668\u662F\u201C\u516C\u5171\u7684\u201D\uFF08public\uFF09\uFF0CBlip2 \u7684\u6784\u9020\u5668\u5374\u4E0D\u662F\uFF0C\u8FD9\u6837\u5C31\u4F1A\u5728\u6062\u590D\u65F6\u9020\u6210\u5F02\u5E38\u3002\u8BD5\u8BD5\u5C06 Blip2 \u7684\u6784\u9020\u5668\u53D8\u6210 public \u7684\uFF0C\u7136\u540E\u5220\u9664//\u6CE8\u91CA\u6807\u8BB0\uFF0C\u770B\u770B\u662F\u5426\u80FD\u5F97\u5230\u6B63\u786E\u7684\u7ED3\u679C\u3002</p><p>\u6062\u590D b1 \u540E\uFF0C\u4F1A\u8C03\u7528 Blip1 \u9ED8\u8BA4\u6784\u9020\u5668\u3002\u8FD9\u4E0E\u6062\u590D\u4E00\u4E2A Serializable \u5BF9\u8C61\u4E0D\u540C\u3002\u5BF9\u4E8E Serializable \u5BF9\u8C61\uFF0C\u5BF9\u8C61\u5B8C\u5168\u4EE5\u5B83\u5B58\u50A8\u7684\u4E8C\u8FDB\u5236\u4F4D\u4E3A\u57FA\u7840\u6765\u6784\u9020\uFF0C\u800C\u4E0D\u8C03\u7528\u6784\u9020\u5668\u3002\u800C\u5BF9\u4E8E\u4E00\u4E2A Externalizable \u5BF9\u8C61\uFF0C\u6240\u6709\u666E\u901A\u7684\u9ED8\u8BA4\u6784\u9020\u5668\u90FD\u4F1A\u88AB\u8C03\u7528\uFF08\u5305\u62EC\u5728\u5B57\u6BB5\u5B9A\u4E49\u65F6\u7684\u521D\u59CB\u5316\uFF09\uFF0C\u7136\u540E\u8C03\u7528 readExternal() \u5FC5\u987B\u6CE8\u610F\u8FD9\u4E00\u70B9--\u6240\u6709\u9ED8\u8BA4\u7684\u6784\u9020\u5668\u90FD\u4F1A\u88AB\u8C03\u7528\uFF0C\u624D\u80FD\u4F7F Externalizable \u5BF9\u8C61\u4EA7\u751F\u6B63\u786E\u7684\u884C\u4E3A\u3002</p><p>\u4E0B\u9762\u8FD9\u4E2A\u4F8B\u5B50\u793A\u8303\u4E86\u5982\u4F55\u5B8C\u6574\u4FDD\u5B58\u548C\u6062\u590D\u4E00\u4E2A Externalizable \u5BF9\u8C61\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// serialization/Blip3.java</span>
<span class="token comment">// Reconstructing an externalizable object</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Blip3</span> <span class="token keyword">implements</span> <span class="token class-name">Externalizable</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> i<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> s<span class="token punctuation">;</span> <span class="token comment">// No initialization</span>
    <span class="token keyword">public</span> <span class="token class-name">Blip3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Blip3 Constructor&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// s, i not initialized</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token class-name">Blip3</span><span class="token punctuation">(</span><span class="token class-name">String</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> a<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Blip3(String x, int a)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        s <span class="token operator">=</span> x<span class="token punctuation">;</span>
        i <span class="token operator">=</span> a<span class="token punctuation">;</span>
<span class="token comment">// s &amp; i initialized only in non-no-arg constructor.</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> s <span class="token operator">+</span> i<span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">writeExternal</span><span class="token punctuation">(</span><span class="token class-name">ObjectOutput</span> out<span class="token punctuation">)</span>
            <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Blip3.writeExternal&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// You must do this:</span>
        out<span class="token punctuation">.</span><span class="token function">writeObject</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
        out<span class="token punctuation">.</span><span class="token function">writeInt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">readExternal</span><span class="token punctuation">(</span><span class="token class-name">ObjectInput</span> in<span class="token punctuation">)</span>
            <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ClassNotFoundException</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Blip3.readExternal&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// You must do this:</span>
        s <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>in<span class="token punctuation">.</span><span class="token function">readObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        i <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">readInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Constructing objects:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Blip3</span> b3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Blip3</span><span class="token punctuation">(</span><span class="token string">&quot;A String &quot;</span><span class="token punctuation">,</span> <span class="token number">47</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b3<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span><span class="token punctuation">(</span>
                <span class="token class-name">ObjectOutputStream</span> o <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectOutputStream</span><span class="token punctuation">(</span>
                        <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token string">&quot;Blip3.serialized&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Saving object:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            o<span class="token punctuation">.</span><span class="token function">writeObject</span><span class="token punctuation">(</span>b3<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
<span class="token comment">// Now get it back:</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Recovering b3:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span><span class="token punctuation">(</span>
                <span class="token class-name">ObjectInputStream</span> in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectInputStream</span><span class="token punctuation">(</span>
                        <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token string">&quot;Blip3.serialized&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            b3 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Blip3</span><span class="token punctuation">)</span>in<span class="token punctuation">.</span><span class="token function">readObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> <span class="token operator">|</span> <span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b3<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u4E3A\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Constructing objects:
Blip3(String x, int a)
A String 47
Saving object:
Blip3.writeExternal
Recovering b3:
Blip3 Constructor
Blip3.readExternal
A String 47
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4E2D\uFF0C\u5B57\u6BB5 s \u548C i \u53EA\u5728\u7B2C\u4E8C\u4E2A\u6784\u9020\u5668\u4E2D\u521D\u59CB\u5316\uFF0C\u800C\u4E0D\u662F\u5728\u9ED8\u8BA4\u7684\u6784\u9020\u5668\u4E2D\u521D\u59CB\u5316\u3002\u8FD9\u610F\u5473\u7740\u5047\u5982\u4E0D\u5728 readExternal() \u4E2D\u521D\u59CB\u5316 s \u548C i\uFF0Cs \u5C31\u4F1A\u4E3A null\uFF0C\u800C i \u5C31\u4F1A\u4E3A\u96F6\uFF08\u56E0\u4E3A\u5728\u521B\u5EFA\u5BF9\u8C61\u7684\u7B2C\u4E00\u6B65\u4E2D\u5C06\u5BF9\u8C61\u7684\u5B58\u50A8\u7A7A\u95F4\u6E05\u7406\u4E3A 0\uFF09\u3002\u5982\u679C\u6CE8\u91CA\u6389\u8DDF\u968F\u4E8E&quot;You must do this\u201D\u540E\u9762\u7684\u4E24\u884C\u4EE3\u7801\uFF0C\u7136\u540E\u8FD0\u884C\u7A0B\u5E8F\uFF0C\u5C31\u4F1A\u53D1\u73B0\u5F53\u5BF9\u8C61\u88AB\u8FD8\u539F\u540E\uFF0Cs \u662F null\uFF0C\u800C i \u662F\u96F6\u3002</p><p>\u6211\u4EEC\u5982\u679C\u4ECE\u4E00\u4E2A Externalizable \u5BF9\u8C61\u7EE7\u627F\uFF0C\u901A\u5E38\u9700\u8981\u8C03\u7528\u57FA\u7C7B\u7248\u672C\u7684 writeExternal() \u548C readExternal() \u6765\u4E3A\u57FA\u7C7B\u7EC4\u4EF6\u63D0\u4F9B\u6070\u5F53\u7684\u5B58\u50A8\u548C\u6062\u590D\u529F\u80FD\u3002</p><p>\u56E0\u6B64\uFF0C\u4E3A\u4E86\u6B63\u5E38\u8FD0\u884C\uFF0C\u6211\u4EEC\u4E0D\u4EC5\u9700\u8981\u5728 writeExternal() \u65B9\u6CD5\uFF08\u6CA1\u6709\u4EFB\u4F55\u9ED8\u8BA4\u884C\u4E3A\u6765\u4E3A Externalizable \u5BF9\u8C61\u5199\u5165\u4EFB\u4F55\u6210\u5458\u5BF9\u8C61\uFF09\u4E2D\u5C06\u6765\u81EA\u5BF9\u8C61\u7684\u91CD\u8981\u4FE1\u606F\u5199\u5165\uFF0C\u8FD8\u5FC5\u987B\u5728 readExternal() \u65B9\u6CD5\u4E2D\u6062\u590D\u6570\u636E\u3002\u8D77\u5148\uFF0C\u53EF\u80FD\u4F1A\u6709\u4E00\u70B9\u8FF7\u60D1\uFF0C\u56E0\u4E3A Externalizable \u5BF9\u8C61\u7684\u9ED8\u8BA4\u6784\u9020\u884C\u4E3A\u4F7F\u5176\u770B\u8D77\u6765\u4F3C\u4E4E\u50CF\u67D0\u79CD\u81EA\u52A8\u53D1\u751F\u7684\u5B58\u50A8\u4E0E\u6062\u590D\u64CD\u4F5C\u3002\u4F46\u5B9E\u9645\u4E0A\u5E76\u975E\u5982\u6B64\u3002</p><h3 id="transient-\u5173\u952E\u5B57" tabindex="-1"><a class="header-anchor" href="#transient-\u5173\u952E\u5B57" aria-hidden="true">#</a> transient \u5173\u952E\u5B57</h3><p>\u5F53\u6211\u4EEC\u5BF9\u5E8F\u5217\u5316\u8FDB\u884C\u63A7\u5236\u65F6\uFF0C\u53EF\u80FD\u67D0\u4E2A\u7279\u5B9A\u5B50\u5BF9\u8C61\u4E0D\u60F3\u8BA9 Java \u7684\u5E8F\u5217\u5316\u673A\u5236\u81EA\u52A8\u4FDD\u5B58\u4E0E\u6062\u590D\u3002\u5982\u679C\u5B50\u5BF9\u8C61\u8868\u793A\u7684\u662F\u6211\u4EEC\u4E0D\u5E0C\u671B\u5C06\u5176\u5E8F\u5217\u5316\u7684\u654F\u611F\u4FE1\u606F\uFF08\u5982\u5BC6\u7801\uFF09\uFF0C\u901A\u5E38\u5C31\u4F1A\u9762\u4E34\u8FD9\u79CD\u60C5\u51B5\u3002\u5373\u4F7F\u5BF9\u8C61\u4E2D\u7684\u8FD9\u4E9B\u4FE1\u606F\u662F private\uFF08\u79C1\u6709\uFF09\u5C5E\u6027\uFF0C\u4E00\u7ECF\u5E8F\u5217\u5316\u5904\u7406\uFF0C\u4EBA\u4EEC\u5C31\u53EF\u4EE5\u901A\u8FC7\u8BFB\u53D6\u6587\u4EF6\u6216\u8005\u62E6\u622A\u7F51\u7EDC\u4F20\u8F93\u7684\u65B9\u5F0F\u6765\u8BBF\u95EE\u5230\u5B83\u3002</p><p>\u6709\u4E00\u79CD\u529E\u6CD5\u53EF\u9632\u6B62\u5BF9\u8C61\u7684\u654F\u611F\u90E8\u5206\u88AB\u5E8F\u5217\u5316\uFF0C\u5C31\u662F\u5C06\u7C7B\u5B9E\u73B0\u4E3A Externalizable\uFF0C\u5982\u524D\u9762\u6240\u793A\u3002\u8FD9\u6837\u4E00\u6765\uFF0C\u6CA1\u6709\u4EFB\u4F55\u4E1C\u897F\u53EF\u4EE5\u81EA\u52A8\u5E8F\u5217\u5316\uFF0C\u5E76\u4E14\u53EF\u4EE5\u5728 writeExternal() \u5185\u90E8\u53EA\u5BF9\u6240\u9700\u90E8\u5206\u8FDB\u884C\u663E\u5F0F\u7684\u5E8F\u5217\u5316\u3002</p><p>\u7136\u800C\uFF0C\u5982\u679C\u6211\u4EEC\u6B63\u5728\u64CD\u4F5C\u7684\u662F\u4E00\u4E2A Seralizable \u5BF9\u8C61\uFF0C\u90A3\u4E48\u6240\u6709\u5E8F\u5217\u5316\u64CD\u4F5C\u90FD\u4F1A\u81EA\u52A8\u8FDB\u884C\u3002\u4E3A\u4E86\u80FD\u591F\u4E88\u4EE5\u63A7\u5236\uFF0C\u53EF\u4EE5\u7528 transient\uFF08\u77AC\u65F6\uFF09\u5173\u952E\u5B57\u9010\u4E2A\u5B57\u6BB5\u5730\u5173\u95ED\u5E8F\u5217\u5316\uFF0C\u5B83\u7684\u610F\u601D\u662F\u201C\u4E0D\u7528\u9EBB\u70E6\u4F60\u4FDD\u5B58\u6216\u6062\u590D\u6570\u636E\u2014\u2014\u6211\u81EA\u5DF1\u4F1A\u5904\u7406\u7684&quot;\u3002</p><p>\u4F8B\u5982\uFF0C\u5047\u8BBE\u67D0\u4E2A Logon \u5BF9\u8C61\u4FDD\u5B58\u67D0\u4E2A\u7279\u5B9A\u7684\u767B\u5F55\u4F1A\u8BDD\u4FE1\u606F\uFF0C\u767B\u5F55\u7684\u5408\u6CD5\u6027\u901A\u8FC7\u6821\u9A8C\u4E4B\u540E\uFF0C\u6211\u4EEC\u60F3\u628A\u6570\u636E\u4FDD\u5B58\u4E0B\u6765\uFF0C\u4F46\u4E0D\u5305\u62EC\u5BC6\u7801\u3002\u4E3A\u505A\u5230\u8FD9\u4E00\u70B9\uFF0C\u6700\u7B80\u5355\u7684\u529E\u6CD5\u662F\u5B9E\u73B0 Serializable\uFF0C\u5E76\u5C06 password \u5B57\u6BB5\u6807\u5FD7\u4E3A transient\uFF0C\u4E0B\u9762\u662F\u5177\u4F53\u7684\u4EE3\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// serialization/Logon.java</span>
<span class="token comment">// Demonstrates the &quot;transient&quot; keyword</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">onjava<span class="token punctuation">.</span></span><span class="token class-name">Nap</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Logon</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Date</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">Logon</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">String</span> pwd<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        username <span class="token operator">=</span> name<span class="token punctuation">;</span>
        password <span class="token operator">=</span> pwd<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;logon info: \\n username: &quot;</span> <span class="token operator">+</span>
                username <span class="token operator">+</span> <span class="token string">&quot;\\n date: &quot;</span> <span class="token operator">+</span> date <span class="token operator">+</span>
                <span class="token string">&quot;\\n password: &quot;</span> <span class="token operator">+</span> password<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Logon</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Logon</span><span class="token punctuation">(</span><span class="token string">&quot;Hulk&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;myLittlePony&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;logon a = &quot;</span> <span class="token operator">+</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span><span class="token punctuation">(</span>
                <span class="token class-name">ObjectOutputStream</span> o <span class="token operator">=</span>
                        <span class="token keyword">new</span> <span class="token class-name">ObjectOutputStream</span><span class="token punctuation">(</span>
                                <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token string">&quot;Logon.dat&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            o<span class="token punctuation">.</span><span class="token function">writeObject</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">new</span> <span class="token class-name">Nap</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Now get them back:</span>
        <span class="token keyword">try</span><span class="token punctuation">(</span>
                <span class="token class-name">ObjectInputStream</span> in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectInputStream</span><span class="token punctuation">(</span>
                        <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token string">&quot;Logon.dat&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
                    <span class="token string">&quot;Recovering object at &quot;</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            a <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Logon</span><span class="token punctuation">)</span>in<span class="token punctuation">.</span><span class="token function">readObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> <span class="token operator">|</span> <span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;logon a = &quot;</span> <span class="token operator">+</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u4E3A\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>logon a = logon info:
username: Hulk
date: Tue May 09 06:07:47 MDT 2017
password: myLittlePony
Recovering object at Tue May 09 06:07:49 MDT 2017
logon a = logon info:
username: Hulk
date: Tue May 09 06:07:47 MDT 2017
password: null
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u5230\uFF0C\u5176\u4E2D\u7684 date \u548C username \u662F\u4E00\u822C\u7684\uFF08\u4E0D\u662F transient \u7684\uFF09\uFF0C\u6240\u4EE5\u5B83\u4EEC\u4F1A\u88AB\u81EA\u52A8\u5E8F\u5217\u5316\u3002\u800C password \u662F transient \u7684\uFF0C\u6240\u4EE5\u4E0D\u4F1A\u88AB\u81EA\u52A8\u4FDD\u5B58\u5230\u78C1\u76D8\uFF1B\u53E6\u5916\uFF0C\u81EA\u52A8\u5E8F\u5217\u5316\u673A\u5236\u4E5F\u4E0D\u4F1A\u5C1D\u8BD5\u53BB\u6062\u590D\u5B83\u3002\u5F53\u5BF9\u8C61\u88AB\u6062\u590D\u65F6\uFF0Cpassword \u5C31\u4F1A\u53D8\u6210 null\u3002\u6CE8\u610F\uFF0C\u867D\u7136 toString() \u662F\u7528\u91CD\u8F7D\u540E\u7684+\u8FD0\u7B97\u7B26\u6765\u8FDE\u63A5 String \u5BF9\u8C61\uFF0C\u4F46\u662F null \u5F15\u7528\u4F1A\u88AB\u81EA\u52A8\u8F6C\u6362\u6210\u5B57\u7B26\u4E32 null\u3002</p><p>\u6211\u4EEC\u8FD8\u53EF\u4EE5\u53D1\u73B0\uFF1Adate \u5B57\u6BB5\u88AB\u5B58\u50A8\u4E86\u5230\u78C1\u76D8\u5E76\u4ECE\u78C1\u76D8\u4E0A\u88AB\u6062\u590D\u4E86\u51FA\u6765\uFF0C\u800C\u4E14\u6CA1\u6709\u518D\u91CD\u65B0\u751F\u6210\u3002\u7531\u4E8E Externalizable \u5BF9\u8C61\u5728\u9ED8\u8BA4\u60C5\u51B5\u4E0B\u4E0D\u4FDD\u5B58\u5B83\u4EEC\u7684\u4EFB\u4F55\u5B57\u6BB5\uFF0C\u6240\u4EE5 transient \u5173\u952E\u5B57\u53EA\u80FD\u548C Serializable \u5BF9\u8C61\u4E00\u8D77\u4F7F\u7528\u3002</p><h3 id="externalizable-\u7684\u66FF\u4EE3\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#externalizable-\u7684\u66FF\u4EE3\u65B9\u6CD5" aria-hidden="true">#</a> Externalizable \u7684\u66FF\u4EE3\u65B9\u6CD5</h3><p>\u5982\u679C\u4E0D\u662F\u7279\u522B\u575A\u6301\u5B9E\u73B0 Externalizable \u63A5\u53E3\uFF0C\u90A3\u4E48\u8FD8\u6709\u53E6\u4E00\u79CD\u65B9\u6CD5\u3002\u6211\u4EEC\u53EF\u4EE5\u5B9E\u73B0 Serializable \u63A5\u53E3\uFF0C\u5E76\u6DFB\u52A0\uFF08\u6CE8\u610F\u6211\u8BF4\u7684\u662F\u201C\u6DFB\u52A0\u201D\uFF0C\u800C\u975E\u201C\u8986\u76D6\u201D\u6216\u8005\u201C\u5B9E\u73B0\u201D\uFF09\u540D\u4E3A writeObject() \u548C readObject() \u7684\u65B9\u6CD5\u3002\u8FD9\u6837\u4E00\u65E6\u5BF9\u8C61\u88AB\u5E8F\u5217\u5316\u6216\u8005\u88AB\u53CD\u5E8F\u5217\u5316\u8FD8\u539F\uFF0C\u5C31\u4F1A\u81EA\u52A8\u5730\u5206\u522B\u8C03\u7528\u8FD9\u4E24\u4E2A\u65B9\u6CD5\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u53EA\u8981\u6211\u4EEC\u63D0\u4F9B\u4E86\u8FD9\u4E24\u4E2A\u65B9\u6CD5\uFF0C\u5C31\u4F1A\u4F7F\u7528\u5B83\u4EEC\u800C\u4E0D\u662F\u9ED8\u8BA4\u7684\u5E8F\u5217\u5316\u673A\u5236\u3002</p><p>\u8FD9\u4E9B\u65B9\u6CD5\u5FC5\u987B\u5177\u6709\u51C6\u786E\u7684\u65B9\u6CD5\u7279\u5F81\u7B7E\u540D\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">writeObject</span><span class="token punctuation">(</span><span class="token class-name">ObjectOutputStream</span> stream<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span>

<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">readObject</span><span class="token punctuation">(</span><span class="token class-name">ObjectInputStream</span> stream<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ClassNotFoundException</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE\u8BBE\u8BA1\u7684\u89C2\u70B9\u6765\u770B\uFF0C\u73B0\u5728\u4E8B\u60C5\u53D8\u5F97\u771F\u662F\u4E0D\u53EF\u601D\u8BAE\u3002\u9996\u5148\uFF0C\u6211\u4EEC\u53EF\u80FD\u4F1A\u8BA4\u4E3A\u7531\u4E8E\u8FD9\u4E9B\u65B9\u6CD5\u4E0D\u662F\u57FA\u7C7B\u6216\u8005 Serializable \u63A5\u53E3\u7684\u4E00\u90E8\u5206\uFF0C\u6240\u4EE5\u5E94\u8BE5\u5728\u5B83\u4EEC\u81EA\u5DF1\u7684\u63A5\u53E3\u4E2D\u8FDB\u884C\u5B9A\u4E49\u3002\u4F46\u662F\u6CE8\u610F\u5B83\u4EEC\u88AB\u5B9A\u4E49\u6210\u4E86 private\uFF0C\u8FD9\u610F\u5473\u7740\u5B83\u4EEC\u4EC5\u80FD\u88AB\u8FD9\u4E2A\u7C7B\u7684\u5176\u4ED6\u6210\u5458\u8C03\u7528\u3002\u7136\u800C\uFF0C\u5B9E\u9645\u4E0A\u6211\u4EEC\u5E76\u6CA1\u6709\u4ECE\u8FD9\u4E2A\u7C7B\u7684\u5176\u4ED6\u65B9\u6CD5\u4E2D\u8C03\u7528\u5B83\u4EEC\uFF0C\u800C\u662F ObjectOutputStream \u548C ObjectInputStream \u5BF9\u8C61\u7684 writeObject() \u548C readobject() \u65B9\u6CD5\u8C03\u7528\u4F60\u7684\u5BF9\u8C61\u7684 writeObject() \u548C readObject() \u65B9\u6CD5\uFF08\u6CE8\u610F\u5173\u4E8E\u8FD9\u91CC\u7528\u5230\u7684\u76F8\u540C\u65B9\u6CD5\u540D\uFF0C\u6211\u5C3D\u91CF\u6291\u5236\u4F4F\u4E0D\u53BB\u8C29\u9A82\u3002\u4E00\u53E5\u8BDD\uFF1A\u6DF7\u4E71\uFF09\u3002\u8BFB\u8005\u53EF\u80FD\u60F3\u77E5\u9053 ObjectOutputStream \u548C ObjectInputStream \u5BF9\u8C61\u662F\u600E\u6837\u8BBF\u95EE\u4F60\u7684\u7C7B\u4E2D\u7684 private \u65B9\u6CD5\u7684\u3002\u6211\u4EEC\u53EA\u80FD\u5047\u8BBE\u8FD9\u6B63\u662F\u5E8F\u5217\u5316\u795E\u5947\u7684\u4E00\u90E8\u5206\u3002</p><p>\u5728\u63A5\u53E3\u4E2D\u5B9A\u4E49\u7684\u6240\u6709\u4E1C\u897F\u90FD\u81EA\u52A8\u662F public \u7684\uFF0C\u56E0\u6B64\u5982\u679C writeObject() \u548C readObject() \u5FC5\u987B\u662F private \u7684\uFF0C\u90A3\u4E48\u5B83\u4EEC\u4E0D\u4F1A\u662F\u63A5\u53E3\u7684\u4E00\u90E8\u5206\u3002\u56E0\u4E3A\u6211\u4EEC\u5FC5\u987B\u8981\u5B8C\u5168\u9075\u5FAA\u5176\u65B9\u6CD5\u7279\u5F81\u7B7E\u540D\uFF0C\u6240\u4EE5\u5176\u6548\u679C\u5C31\u548C\u5B9E\u73B0\u4E86\u63A5\u53E3\u4E00\u6837\u3002</p><p>\u5728\u8C03\u7528 ObjectOutputStream.writeObject() \u65F6\uFF0C\u4F1A\u68C0\u67E5\u6240\u4F20\u9012\u7684 Serializable \u5BF9\u8C61\uFF0C\u770B\u770B\u662F\u5426\u5B9E\u73B0\u4E86\u5B83\u81EA\u5DF1\u7684 writeObject()\u3002\u5982\u679C\u662F\u8FD9\u6837\uFF0C\u5C31\u8DF3\u8FC7\u6B63\u5E38\u7684\u5E8F\u5217\u5316\u8FC7\u7A0B\u5E76\u8C03\u7528\u5B83\u7684 writeObiect()\u3002readObject() \u7684\u60C5\u5F62\u4E0E\u6B64\u76F8\u540C\u3002</p><p>\u8FD8\u6709\u53E6\u5916\u4E00\u4E2A\u6280\u5DE7\u3002\u5728\u4F60\u7684 writeObject() \u5185\u90E8\uFF0C\u53EF\u4EE5\u8C03\u7528 defaultWriteObject() \u6765\u9009\u62E9\u6267\u884C\u9ED8\u8BA4\u7684 writeObject()\u3002\u7C7B\u4F3C\u5730\uFF0C\u5728 readObject() \u5185\u90E8\uFF0C\u6211\u4EEC\u53EF\u4EE5\u8C03\u7528 defaultReadObject()\uFF0C\u4E0B\u9762\u8FD9\u4E2A\u7B80\u5355\u7684\u4F8B\u5B50\u6F14\u793A\u4E86\u5982\u4F55\u5BF9\u4E00\u4E2A Serializable \u5BF9\u8C61\u7684\u5B58\u50A8\u4E0E\u6062\u590D\u8FDB\u884C\u63A7\u5236\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// serialization/SerialCtl.java</span>
<span class="token comment">// Controlling serialization by adding your own</span>
<span class="token comment">// writeObject() and readObject() methods</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SerialCtl</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> a<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">transient</span> <span class="token class-name">String</span> b<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">SerialCtl</span><span class="token punctuation">(</span><span class="token class-name">String</span> aa<span class="token punctuation">,</span> <span class="token class-name">String</span> bb<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        a <span class="token operator">=</span> <span class="token string">&quot;Not Transient: &quot;</span> <span class="token operator">+</span> aa<span class="token punctuation">;</span>
        b <span class="token operator">=</span> <span class="token string">&quot;Transient: &quot;</span> <span class="token operator">+</span> bb<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> a <span class="token operator">+</span> <span class="token string">&quot;\\n&quot;</span> <span class="token operator">+</span> b<span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">writeObject</span><span class="token punctuation">(</span><span class="token class-name">ObjectOutputStream</span> stream<span class="token punctuation">)</span>
            <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        stream<span class="token punctuation">.</span><span class="token function">defaultWriteObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        stream<span class="token punctuation">.</span><span class="token function">writeObject</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">readObject</span><span class="token punctuation">(</span><span class="token class-name">ObjectInputStream</span> stream<span class="token punctuation">)</span>
            <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ClassNotFoundException</span> <span class="token punctuation">{</span>
        stream<span class="token punctuation">.</span><span class="token function">defaultReadObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        b <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>stream<span class="token punctuation">.</span><span class="token function">readObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SerialCtl</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SerialCtl</span><span class="token punctuation">(</span><span class="token string">&quot;Test1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Test2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Before:\\n&quot;</span> <span class="token operator">+</span> sc<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">(</span>
                <span class="token class-name">ByteArrayOutputStream</span> buf <span class="token operator">=</span>
                        <span class="token keyword">new</span> <span class="token class-name">ByteArrayOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">ObjectOutputStream</span> o <span class="token operator">=</span>
                        <span class="token keyword">new</span> <span class="token class-name">ObjectOutputStream</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            o<span class="token punctuation">.</span><span class="token function">writeObject</span><span class="token punctuation">(</span>sc<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Now get it back:</span>
            <span class="token keyword">try</span> <span class="token punctuation">(</span>
                    <span class="token class-name">ObjectInputStream</span> in <span class="token operator">=</span>
                            <span class="token keyword">new</span> <span class="token class-name">ObjectInputStream</span><span class="token punctuation">(</span>
                                    <span class="token keyword">new</span> <span class="token class-name">ByteArrayInputStream</span><span class="token punctuation">(</span>
                                            buf<span class="token punctuation">.</span><span class="token function">toByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">SerialCtl</span> sc2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">SerialCtl</span><span class="token punctuation">)</span>in<span class="token punctuation">.</span><span class="token function">readObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;After:\\n&quot;</span> <span class="token operator">+</span> sc2<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> <span class="token operator">|</span> <span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u4E3A\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Before:
Not Transient: Test1
Transient: Test2
After:
Not Transient: Test1
Transient: Test2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u8FD9\u4E2A\u4F8B\u5B50\u4E2D\uFF0C\u6709\u4E00\u4E2A String \u5B57\u6BB5\u662F\u666E\u901A\u5B57\u6BB5\uFF0C\u800C\u53E6\u4E00\u4E2A\u662F transient \u5B57\u6BB5\uFF0C\u7528\u6765\u8BC1\u660E\u975E transient \u5B57\u6BB5\u7531 defaultWriteObject() \u65B9\u6CD5\u4FDD\u5B58\uFF0C\u800C transient \u5B57\u6BB5\u5FC5\u987B\u5728\u7A0B\u5E8F\u4E2D\u660E\u786E\u4FDD\u5B58\u548C\u6062\u590D\u3002\u5B57\u6BB5\u662F\u5728\u6784\u9020\u5668\u5185\u90E8\u800C\u4E0D\u662F\u5728\u5B9A\u4E49\u5904\u8FDB\u884C\u521D\u59CB\u5316\u7684\uFF0C\u4EE5\u6B64\u53EF\u4EE5\u8BC1\u5B9E\u5B83\u4EEC\u5728\u53CD\u5E8F\u5217\u5316\u8FD8\u539F\u671F\u95F4\u6CA1\u6709\u88AB\u4E00\u4E9B\u81EA\u52A8\u5316\u673A\u5236\u521D\u59CB\u5316\u3002</p><p>\u5982\u679C\u6211\u4EEC\u6253\u7B97\u4F7F\u7528\u9ED8\u8BA4\u673A\u5236\u5199\u5165\u5BF9\u8C61\u7684\u975E transient \u90E8\u5206\uFF0C\u90A3\u4E48\u5FC5\u987B\u8C03\u7528 defaultwriteObject() \u4F5C\u4E3A writeObject() \u4E2D\u7684\u7B2C\u4E00\u4E2A\u64CD\u4F5C\uFF0C\u5E76\u8BA9 defaultReadObject() \u4F5C\u4E3A readObject() \u4E2D\u7684\u7B2C\u4E00\u4E2A\u64CD\u4F5C\u3002\u8FD9\u4E9B\u90FD\u662F\u5947\u602A\u7684\u65B9\u6CD5\u8C03\u7528\u3002\u4F8B\u5982\uFF0C\u5982\u679C\u6211\u4EEC\u6B63\u5728\u4E3A ObjectOutputStream \u8C03\u7528 defaultWriteObject() \u4E14\u6CA1\u6709\u4F20\u9012\u4EFB\u4F55\u53C2\u6570\uFF0C\u7136\u800C\u4E0D\u77E5\u4F55\u6545\u5B83\u5374\u53EF\u4EE5\u8FD0\u884C\uFF0C\u5E76\u4E14\u77E5\u9053\u5BF9\u8C61\u7684\u5F15\u7528\u4EE5\u53CA\u5982\u4F55\u5199\u5165\u975E transient \u90E8\u5206\u3002\u771F\u662F\u5947\u602A\u4E4B\u6781\u3002</p><p>\u5BF9 transient \u5BF9\u8C61\u7684\u5B58\u50A8\u548C\u6062\u590D\u4F7F\u7528\u4E86\u6211\u4EEC\u6BD4\u8F83\u719F\u6089\u7684\u4EE3\u7801\u3002\u8BF7\u518D\u8003\u8651\u4E00\u4E0B\u5728\u8FD9\u91CC\u6240\u53D1\u751F\u7684\u4E8B\u60C5\u3002\u5728 main0\uFF09\u4E2D\uFF0C\u521B\u5EFA SerialCtl \u5BF9\u8C61\uFF0C\u7136\u540E\u5C06\u5176\u5E8F\u5217\u5316\u5230 ObjectOutputStream\uFF08\u6CE8\u610F\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u4F7F\u7528\u7684\u662F\u7F13\u51B2\u533A\u800C\u4E0D\u662F\u6587\u4EF6-\u8FD9\u5BF9\u4E8E ObjectOutputStream \u6765\u8BF4\u662F\u5B8C\u5168\u4E00\u6837\u7684\uFF09\u3002\u5E8F\u5217\u5316\u53D1\u751F\u5728\u4E0B\u9762\u8FD9\u884C\u4EE3\u7801\u5F53\u4E2D</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>o<span class="token punctuation">.</span><span class="token function">writeObject</span><span class="token punctuation">(</span>sc<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>writeObject() \u65B9\u6CD5\u5FC5\u987B\u68C0\u67E5 sc\uFF0C\u5224\u65AD\u5B83\u662F\u5426\u62E5\u6709\u81EA\u5DF1\u7684 writeObject() \u65B9\u6CD5\uFF08\u4E0D\u662F\u68C0\u67E5\u63A5\u53E3\u2014\u2014\u8FD9\u91CC\u6839\u672C\u5C31\u6CA1\u6709\u63A5\u53E3\uFF0C\u4E5F\u4E0D\u662F\u68C0\u67E5\u7C7B\u7684\u7C7B\u578B\uFF0C\u800C\u662F\u5229\u7528\u53CD\u5C04\u6765\u771F\u6B63\u5730\u641C\u7D22\u65B9\u6CD5\uFF09\u3002\u5982\u679C\u6709\uFF0C\u90A3\u4E48\u5C31\u4F1A\u4F7F\u7528\u5B83\u3002\u5BF9 readObject() \u4E5F\u91C7\u7528\u4E86\u7C7B\u4F3C\u7684\u65B9\u6CD5\u3002\u6216\u8BB8\u8FD9\u662F\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\u7684\u552F\u4E00\u5207\u5B9E\u53EF\u884C\u7684\u65B9\u6CD5\uFF0C\u4F46\u5B83\u786E\u5B9E\u6709\u70B9\u53E4\u602A\u3002</p><h3 id="\u7248\u672C\u63A7\u5236" tabindex="-1"><a class="header-anchor" href="#\u7248\u672C\u63A7\u5236" aria-hidden="true">#</a> \u7248\u672C\u63A7\u5236</h3><p>\u6709\u65F6\u53EF\u80FD\u60F3\u8981\u6539\u53D8\u53EF\u5E8F\u5217\u5316\u7C7B\u7684\u7248\u672C\uFF08\u6BD4\u5982\u6E90\u7C7B\u7684\u5BF9\u8C61\u53EF\u80FD\u4FDD\u5B58\u5728\u6570\u636E\u5E93\u4E2D\uFF09\u3002\u867D\u7136 Java \u652F\u6301\u8FD9\u79CD\u505A\u6CD5\uFF0C\u4F46\u662F\u4F60\u53EF\u80FD\u53EA\u5728\u7279\u6B8A\u7684\u60C5\u51B5\u4E0B\u624D\u8FD9\u6837\u505A\uFF0C\u6B64\u5916\uFF0C\u8FD8\u9700\u8981\u5BF9\u5B83\u6709\u76F8\u5F53\u6DF1\u7A0B\u5EA6\u7684\u4E86\u89E3\uFF08\u5728\u8FD9\u91CC\u6211\u4EEC\u5C31\u4E0D\u518D\u8BD5\u56FE\u8FBE\u5230\u8FD9\u4E00\u70B9\uFF09\u3002\u4ECE http://java.oracle.com \u4E0B\u7684 JDK \u6587\u6863\u4E2D\u5BF9\u8FD9\u4E00\u4E3B\u9898\u8FDB\u884C\u4E86\u975E\u5E38\u5F7B\u5E95\u7684\u8BBA\u8FF0\u3002</p><h2 id="\u4F7F\u7528\u6301\u4E45\u5316" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u6301\u4E45\u5316" aria-hidden="true">#</a> \u4F7F\u7528\u6301\u4E45\u5316</h2><p>\u4E00\u4E2A\u6BD4\u8F83\u8BF1\u4EBA\u7684\u4F7F\u7528\u5E8F\u5217\u5316\u6280\u672F\u7684\u60F3\u6CD5\u662F\uFF1A\u5B58\u50A8\u7A0B\u5E8F\u7684\u4E00\u4E9B\u72B6\u6001\uFF0C\u4EE5\u4FBF\u6211\u4EEC\u968F\u540E\u53EF\u4EE5\u5F88\u5BB9\u6613\u5730\u5C06\u7A0B\u5E8F\u6062\u590D\u5230\u5F53\u524D\u72B6\u6001\u3002\u4F46\u662F\u5728\u6211\u4EEC\u80FD\u591F\u8FD9\u6837\u505A\u4E4B\u524D\uFF0C\u5FC5\u987B\u56DE\u7B54\u51E0\u4E2A\u95EE\u9898\u3002\u5982\u679C\u6211\u4EEC\u5C06\u4E24\u4E2A\u5BF9\u8C61-\u5B83\u4EEC\u90FD\u5177\u6709\u6307\u5411\u7B2C\u4E09\u4E2A\u5BF9\u8C61\u7684\u5F15\u7528-\u8FDB\u884C\u5E8F\u5217\u5316\uFF0C\u4F1A\u53D1\u751F\u4EC0\u4E48\u60C5\u51B5\uFF1F\u5F53\u6211\u4EEC\u4ECE\u5B83\u4EEC\u7684\u5E8F\u5217\u5316\u72B6\u6001\u6062\u590D\u8FD9\u4E24\u4E2A\u5BF9\u8C61\u65F6\uFF0C\u7B2C\u4E09\u4E2A\u5BF9\u8C61\u4F1A\u53EA\u51FA\u73B0\u4E00\u6B21\u5417\uFF1F\u5982\u679C\u5C06\u8FD9\u4E24\u4E2A\u5BF9\u8C61\u5E8F\u5217\u5316\u6210\u72EC\u7ACB\u7684\u6587\u4EF6\uFF0C\u7136\u540E\u5728\u4EE3\u7801\u7684\u4E0D\u540C\u90E8\u5206\u5BF9\u5B83\u4EEC\u8FDB\u884C\u53CD\u5E8F\u5217\u5316\u8FD8\u539F\uFF0C\u53C8\u4F1A\u600E\u6837\u5462\uFF1F</p><p>\u4E0B\u9762\u8FD9\u4E2A\u4F8B\u5B50\u8BF4\u660E\u4E86\u4E0A\u8FF0\u95EE\u9898\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// serialization/MyWorld.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">House</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Animal</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">House</span> preferredHouse<span class="token punctuation">;</span>
    <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token class-name">String</span> nm<span class="token punctuation">,</span> <span class="token class-name">House</span> h<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        name <span class="token operator">=</span> nm<span class="token punctuation">;</span>
        preferredHouse <span class="token operator">=</span> h<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> name <span class="token operator">+</span> <span class="token string">&quot;[&quot;</span> <span class="token operator">+</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
                <span class="token string">&quot;], &quot;</span> <span class="token operator">+</span> preferredHouse <span class="token operator">+</span> <span class="token string">&quot;\\n&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyWorld</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">House</span> house <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">House</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Animal</span><span class="token punctuation">&gt;</span></span> animals <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        animals<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>
                <span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token string">&quot;Bosco the dog&quot;</span><span class="token punctuation">,</span> house<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        animals<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>
                <span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token string">&quot;Ralph the hamster&quot;</span><span class="token punctuation">,</span> house<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        animals<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>
                <span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token string">&quot;Molly the cat&quot;</span><span class="token punctuation">,</span> house<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;animals: &quot;</span> <span class="token operator">+</span> animals<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span><span class="token punctuation">(</span>
                <span class="token class-name">ByteArrayOutputStream</span> buf1 <span class="token operator">=</span>
                        <span class="token keyword">new</span> <span class="token class-name">ByteArrayOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">ObjectOutputStream</span> o1 <span class="token operator">=</span>
                        <span class="token keyword">new</span> <span class="token class-name">ObjectOutputStream</span><span class="token punctuation">(</span>buf1<span class="token punctuation">)</span>
        <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            o1<span class="token punctuation">.</span><span class="token function">writeObject</span><span class="token punctuation">(</span>animals<span class="token punctuation">)</span><span class="token punctuation">;</span>
            o1<span class="token punctuation">.</span><span class="token function">writeObject</span><span class="token punctuation">(</span>animals<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Write a 2nd set</span>
<span class="token comment">// Write to a different stream:</span>
            <span class="token keyword">try</span><span class="token punctuation">(</span>
                    <span class="token class-name">ByteArrayOutputStream</span> buf2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">ObjectOutputStream</span> o2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectOutputStream</span><span class="token punctuation">(</span>buf2<span class="token punctuation">)</span>
            <span class="token punctuation">)</span> <span class="token punctuation">{</span>
                o2<span class="token punctuation">.</span><span class="token function">writeObject</span><span class="token punctuation">(</span>animals<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Now get them back:</span>
                <span class="token keyword">try</span><span class="token punctuation">(</span>
                        <span class="token class-name">ObjectInputStream</span> in1 <span class="token operator">=</span>
                                <span class="token keyword">new</span> <span class="token class-name">ObjectInputStream</span><span class="token punctuation">(</span>
                                        <span class="token keyword">new</span> <span class="token class-name">ByteArrayInputStream</span><span class="token punctuation">(</span>
                                                buf1<span class="token punctuation">.</span><span class="token function">toByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">ObjectInputStream</span> in2 <span class="token operator">=</span>
                                <span class="token keyword">new</span> <span class="token class-name">ObjectInputStream</span><span class="token punctuation">(</span>
                                        <span class="token keyword">new</span> <span class="token class-name">ByteArrayInputStream</span><span class="token punctuation">(</span>
                                                buf2<span class="token punctuation">.</span><span class="token function">toByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">List</span>
                            animals1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">List</span><span class="token punctuation">)</span>in1<span class="token punctuation">.</span><span class="token function">readObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                            animals2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">List</span><span class="token punctuation">)</span>in1<span class="token punctuation">.</span><span class="token function">readObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                            animals3 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">List</span><span class="token punctuation">)</span>in2<span class="token punctuation">.</span><span class="token function">readObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
                            <span class="token string">&quot;animals1: &quot;</span> <span class="token operator">+</span> animals1<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
                            <span class="token string">&quot;animals2: &quot;</span> <span class="token operator">+</span> animals2<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
                            <span class="token string">&quot;animals3: &quot;</span> <span class="token operator">+</span> animals3<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> <span class="token operator">|</span> <span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u4E3A\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>animals: [Bosco the dog[Animal@15db9742],
House@6d06d69c
, Ralph the hamster[Animal@7852e922], House@6d06d69c
, Molly the cat[Animal@4e25154f], House@6d06d69c
]
animals1: [Bosco the dog[Animal@7ba4f24f],
House@3b9a45b3
, Ralph the hamster[Animal@7699a589], House@3b9a45b3
, Molly the cat[Animal@58372a00], House@3b9a45b3
]
animals2: [Bosco the dog[Animal@7ba4f24f],
House@3b9a45b3
, Ralph the hamster[Animal@7699a589], House@3b9a45b3
, Molly the cat[Animal@58372a00], House@3b9a45b3
]
animals3: [Bosco the dog[Animal@4dd8dc3],
House@6d03e736
, Ralph the hamster[Animal@568db2f2], House@6d03e736
, Molly the cat[Animal@378bf509], House@6d03e736
]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u6709\u4E00\u4EF6\u6709\u8DA3\u7684\u4E8B\uFF1A\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7\u4E00\u4E2A\u5B57\u8282\u6570\u7EC4\u6765\u4F7F\u7528\u5BF9\u8C61\u5E8F\u5217\u5316\uFF0C\u4ECE\u800C\u5B9E\u73B0\u5BF9\u4EFB\u4F55\u53EF Serializable \u5BF9\u8C61\u7684\u201C\u6DF1\u5EA6\u590D\u5236&quot;\uFF08deep copy\uFF09\u2014\u2014 \u6DF1\u5EA6\u590D\u5236\u610F\u5473\u7740\u6211\u4EEC\u590D\u5236\u7684\u662F\u6574\u4E2A\u5BF9\u8C61\u7F51\uFF0C\u800C\u4E0D\u4EC5\u4EC5\u662F\u57FA\u672C\u5BF9\u8C61\u53CA\u5176\u5F15\u7528\u3002\u590D\u5236\u5BF9\u8C61\u5C06\u5728\u672C\u4E66\u7684 <a href="">\u9644\u5F55\uFF1A\u4F20\u9012\u548C\u8FD4\u56DE\u5BF9\u8C61 </a> \u4E00\u7AE0\u4E2D\u8FDB\u884C\u6DF1\u5165\u5730\u63A2\u8BA8\u3002</p><p>\u5728\u8FD9\u4E2A\u4F8B\u5B50\u4E2D\uFF0CAnimal \u5BF9\u8C61\u5305\u542B\u6709 House \u7C7B\u578B\u7684\u5B57\u6BB5\u3002\u5728 main() \u65B9\u6CD5\u4E2D\uFF0C\u521B\u5EFA\u4E86\u4E00\u4E2A Animal \u5217\u8868\u5E76\u5C06\u5176\u4E24\u6B21\u5E8F\u5217\u5316\uFF0C\u5206\u522B\u9001\u81F3\u4E0D\u540C\u7684\u6D41\u3002\u5F53\u5176\u88AB\u53CD\u5E8F\u5217\u5316\u8FD8\u539F\u5E76\u88AB\u6253\u5370\u65F6\uFF0C\u6211\u4EEC\u53EF\u4EE5\u770B\u5230\u6240\u793A\u7684\u6267\u884C\u67D0\u6B21\u8FD0\u884C\u540E\u7684\u7ED3\u679C\uFF08\u6BCF\u6B21\u8FD0\u884C\u65F6\uFF0C\u5BF9\u8C61\u5C06\u4F1A\u5904\u5728\u4E0D\u540C\u7684\u5185\u5B58\u5730\u5740\uFF09\u3002</p><p>\u5F53\u7136\uFF0C\u6211\u4EEC\u671F\u671B\u8FD9\u4E9B\u53CD\u5E8F\u5217\u5316\u8FD8\u539F\u540E\u7684\u5BF9\u8C61\u5730\u5740\u4E0E\u539F\u6765\u7684\u5730\u5740\u4E0D\u540C\u3002\u4F46\u8BF7\u6CE8\u610F\uFF0C\u5728 animals1 \u548C animals2 \u4E2D\u5374\u51FA\u73B0\u4E86\u76F8\u540C\u7684\u5730\u5740\uFF0C\u5305\u62EC\u4E8C\u8005\u5171\u4EAB\u7684\u90A3\u4E2A\u6307\u5411 House \u5BF9\u8C61\u7684\u5F15\u7528\u3002\u53E6\u4E00\u65B9\u9762\uFF0C\u5F53\u6062\u590D animals3 \u65F6\uFF0C\u7CFB\u7EDF\u65E0\u6CD5\u77E5\u9053\u53E6\u4E00\u4E2A\u6D41\u5185\u7684\u5BF9\u8C61\u662F\u7B2C\u4E00\u4E2A\u6D41\u5185\u7684\u5BF9\u8C61\u7684\u522B\u540D\uFF0C\u56E0\u6B64\u5B83\u4F1A\u4EA7\u751F\u51FA\u5B8C\u5168\u4E0D\u540C\u7684\u5BF9\u8C61\u7F51\u3002</p><p>\u53EA\u8981\u5C06\u4EFB\u4F55\u5BF9\u8C61\u5E8F\u5217\u5316\u5230\u5355\u4E00\u6D41\u4E2D\uFF0C\u5C31\u53EF\u4EE5\u6062\u590D\u51FA\u4E0E\u6211\u4EEC\u5199\u51FA\u65F6\u4E00\u6837\u7684\u5BF9\u8C61\u7F51\uFF0C\u5E76\u4E14\u6CA1\u6709\u4EFB\u4F55\u610F\u5916\u91CD\u590D\u590D\u5236\u51FA\u7684\u5BF9\u8C61\u3002\u5F53\u7136\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5728\u5199\u51FA\u7B2C\u4E00\u4E2A\u5BF9\u8C61\u548C\u5199\u51FA\u6700\u540E\u4E00\u4E2A\u5BF9\u8C61\u671F\u95F4\u6539\u53D8\u8FD9\u4E9B\u5BF9\u8C61\u7684\u72B6\u6001\uFF0C\u4F46\u662F\u8FD9\u662F\u6211\u4EEC\u81EA\u5DF1\u7684\u4E8B\uFF0C\u65E0\u8BBA\u5BF9\u8C61\u5728\u88AB\u5E8F\u5217\u5316\u65F6\u5904\u4E8E\u4EC0\u4E48\u72B6\u6001\uFF08\u65E0\u8BBA\u5B83\u4EEC\u548C\u5176\u4ED6\u5BF9\u8C61\u6709\u4EC0\u4E48\u6837\u7684\u8FDE\u63A5\u5173\u7CFB\uFF09\uFF0C\u5B83\u4EEC\u90FD\u53EF\u4EE5\u88AB\u5199\u51FA\u3002</p><p>\u6700\u5B89\u5168\u7684\u505A\u6CD5\u662F\u5C06\u5176\u4F5C\u4E3A\u201C\u539F\u5B50\u201D\u64CD\u4F5C\u8FDB\u884C\u5E8F\u5217\u5316\u3002\u5982\u679C\u6211\u4EEC\u5E8F\u5217\u5316\u4E86\u67D0\u4E9B\u4E1C\u897F\uFF0C\u518D\u53BB\u505A\u5176\u4ED6\u4E00\u4E9B\u5DE5\u4F5C\uFF0C\u518D\u6765\u5E8F\u5217\u5316\u66F4\u591A\u7684\u4E1C\u897F\uFF0C\u5982\u6B64\u7B49\u7B49\uFF0C\u90A3\u4E48\u5C06\u65E0\u6CD5\u5B89\u5168\u5730\u4FDD\u5B58\u7CFB\u7EDF\u72B6\u6001\u3002\u53D6\u800C\u4EE3\u4E4B\u7684\u662F\uFF0C\u5C06\u6784\u6210\u7CFB\u7EDF\u72B6\u6001\u7684\u6240\u6709\u5BF9\u8C61\u90FD\u7F6E\u5165\u5355\u4E00\u5BB9\u5668\u5185\uFF0C\u5E76\u5728\u4E00\u4E2A\u64CD\u4F5C\u4E2D\u5C06\u8BE5\u5BB9\u5668\u76F4\u63A5\u5199\u51FA\u3002\u7136\u540E\u540C\u6837\u53EA\u9700\u4E00\u6B21\u65B9\u6CD5\u8C03\u7528\uFF0C\u5373\u53EF\u4EE5\u5C06\u5176\u6062\u590D\u3002</p><p>\u4E0B\u9762\u8FD9\u4E2A\u4F8B\u5B50\u662F\u4E00\u4E2A\u60F3\u8C61\u7684\u8BA1\u7B97\u673A\u8F85\u52A9\u8BBE\u8BA1\uFF08CAD\uFF09\u7CFB\u7EDF\uFF0C\u8BE5\u4F8B\u6F14\u793A\u4E86\u8FD9\u4E00\u65B9\u6CD5\u3002\u6B64\u5916\uFF0C\u5B83\u8FD8\u5F15\u5165\u4E86 static \u5B57\u6BB5\u7684\u95EE\u9898\uFF1A\u5982\u679C\u6211\u4EEC\u67E5\u770B JDK \u6587\u6863\uFF0C\u5C31\u4F1A\u53D1\u73B0 Class \u662F Serializable \u7684\uFF0C\u56E0\u6B64\u53EA\u9700\u76F4\u63A5\u5BF9 Class \u5BF9\u8C61\u5E8F\u5217\u5316\uFF0C\u5C31\u53EF\u4EE5\u5F88\u5BB9\u6613\u5730\u4FDD\u5B58 static \u5B57\u6BB5\u3002\u5728\u4EFB\u4F55\u60C5\u51B5\u4E0B\uFF0C\u8FD9\u90FD\u662F\u4E00\u79CD\u660E\u667A\u7684\u505A\u6CD5\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// serialization/AStoreCADState.java</span>
<span class="token comment">// Saving the state of a fictitious CAD system</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">enum</span> <span class="token class-name">Color</span> <span class="token punctuation">{</span> RED<span class="token punctuation">,</span> BLUE<span class="token punctuation">,</span> GREEN <span class="token punctuation">}</span>
<span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">Shape</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> xPos<span class="token punctuation">,</span> yPos<span class="token punctuation">,</span> dimension<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Random</span> rand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token number">47</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> counter <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">void</span> <span class="token function">setColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span> newColor<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token class-name">Color</span> <span class="token function">getColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Shape</span><span class="token punctuation">(</span><span class="token keyword">int</span> xVal<span class="token punctuation">,</span> <span class="token keyword">int</span> yVal<span class="token punctuation">,</span> <span class="token keyword">int</span> dim<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        xPos <span class="token operator">=</span> xVal<span class="token punctuation">;</span>
        yPos <span class="token operator">=</span> yVal<span class="token punctuation">;</span>
        dimension <span class="token operator">=</span> dim<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;color[&quot;</span> <span class="token operator">+</span> <span class="token function">getColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
                <span class="token string">&quot;] xPos[&quot;</span> <span class="token operator">+</span> xPos <span class="token operator">+</span> <span class="token string">&quot;] yPos[&quot;</span> <span class="token operator">+</span> yPos <span class="token operator">+</span>
                <span class="token string">&quot;] dim[&quot;</span> <span class="token operator">+</span> dimension <span class="token operator">+</span> <span class="token string">&quot;]\\n&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Shape</span> <span class="token function">randomFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> xVal <span class="token operator">=</span> rand<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> yVal <span class="token operator">=</span> rand<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> dim <span class="token operator">=</span> rand<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">switch</span><span class="token punctuation">(</span>counter<span class="token operator">++</span> <span class="token operator">%</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">default</span><span class="token operator">:</span>
            <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Circle</span><span class="token punctuation">(</span>xVal<span class="token punctuation">,</span> yVal<span class="token punctuation">,</span> dim<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Square</span><span class="token punctuation">(</span>xVal<span class="token punctuation">,</span> yVal<span class="token punctuation">,</span> dim<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Line</span><span class="token punctuation">(</span>xVal<span class="token punctuation">,</span> yVal<span class="token punctuation">,</span> dim<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Circle</span> <span class="token keyword">extends</span> <span class="token class-name">Shape</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Color</span> color <span class="token operator">=</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>RED<span class="token punctuation">;</span>
    <span class="token class-name">Circle</span><span class="token punctuation">(</span><span class="token keyword">int</span> xVal<span class="token punctuation">,</span> <span class="token keyword">int</span> yVal<span class="token punctuation">,</span> <span class="token keyword">int</span> dim<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>xVal<span class="token punctuation">,</span> yVal<span class="token punctuation">,</span> dim<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span> newColor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        color <span class="token operator">=</span> newColor<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token class-name">Color</span> <span class="token function">getColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> color<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Square</span> <span class="token keyword">extends</span> <span class="token class-name">Shape</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Color</span> color <span class="token operator">=</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>RED<span class="token punctuation">;</span>
    <span class="token class-name">Square</span><span class="token punctuation">(</span><span class="token keyword">int</span> xVal<span class="token punctuation">,</span> <span class="token keyword">int</span> yVal<span class="token punctuation">,</span> <span class="token keyword">int</span> dim<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>xVal<span class="token punctuation">,</span> yVal<span class="token punctuation">,</span> dim<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span> newColor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        color <span class="token operator">=</span> newColor<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token class-name">Color</span> <span class="token function">getColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> color<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Line</span> <span class="token keyword">extends</span> <span class="token class-name">Shape</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Color</span> color <span class="token operator">=</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>RED<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span>
    <span class="token function">serializeStaticState</span><span class="token punctuation">(</span><span class="token class-name">ObjectOutputStream</span> os<span class="token punctuation">)</span>
            <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span> os<span class="token punctuation">.</span><span class="token function">writeObject</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span>
    <span class="token function">deserializeStaticState</span><span class="token punctuation">(</span><span class="token class-name">ObjectInputStream</span> os<span class="token punctuation">)</span>
            <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ClassNotFoundException</span> <span class="token punctuation">{</span>
        color <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">)</span>os<span class="token punctuation">.</span><span class="token function">readObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">Line</span><span class="token punctuation">(</span><span class="token keyword">int</span> xVal<span class="token punctuation">,</span> <span class="token keyword">int</span> yVal<span class="token punctuation">,</span> <span class="token keyword">int</span> dim<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>xVal<span class="token punctuation">,</span> yVal<span class="token punctuation">,</span> dim<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span> newColor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        color <span class="token operator">=</span> newColor<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token class-name">Color</span> <span class="token function">getColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> color<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AStoreCADState</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Class</span><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Shape</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> shapeTypes <span class="token operator">=</span>
                <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>
                        <span class="token class-name">Circle</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">Square</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">Line</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Shape</span><span class="token punctuation">&gt;</span></span> shapes <span class="token operator">=</span> <span class="token class-name">IntStream</span><span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">mapToObj</span><span class="token punctuation">(</span>i <span class="token operator">-&gt;</span> <span class="token class-name">Shape</span><span class="token punctuation">.</span><span class="token function">randomFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Set all the static colors to GREEN:</span>
        shapes<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>s <span class="token operator">-&gt;</span> s<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>GREEN<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Save the state vector:</span>
        <span class="token keyword">try</span><span class="token punctuation">(</span>
                <span class="token class-name">ObjectOutputStream</span> out <span class="token operator">=</span>
                        <span class="token keyword">new</span> <span class="token class-name">ObjectOutputStream</span><span class="token punctuation">(</span>
                                <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token string">&quot;CADState.dat&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            out<span class="token punctuation">.</span><span class="token function">writeObject</span><span class="token punctuation">(</span>shapeTypes<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Line</span><span class="token punctuation">.</span><span class="token function">serializeStaticState</span><span class="token punctuation">(</span>out<span class="token punctuation">)</span><span class="token punctuation">;</span>
            out<span class="token punctuation">.</span><span class="token function">writeObject</span><span class="token punctuation">(</span>shapes<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// Display the shapes:</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>shapes<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u4E3A\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token punctuation">[</span><span class="token keyword">class</span> <span class="token class-name">Circlecolor</span><span class="token punctuation">[</span>GREEN<span class="token punctuation">]</span> xPos<span class="token punctuation">[</span><span class="token number">58</span><span class="token punctuation">]</span> yPos<span class="token punctuation">[</span><span class="token number">55</span><span class="token punctuation">]</span> dim<span class="token punctuation">[</span><span class="token number">93</span><span class="token punctuation">]</span>
<span class="token punctuation">,</span> <span class="token keyword">class</span> <span class="token class-name">Squarecolor</span><span class="token punctuation">[</span>GREEN<span class="token punctuation">]</span> xPos<span class="token punctuation">[</span><span class="token number">61</span><span class="token punctuation">]</span> yPos<span class="token punctuation">[</span><span class="token number">61</span><span class="token punctuation">]</span> dim<span class="token punctuation">[</span><span class="token number">29</span><span class="token punctuation">]</span>
<span class="token punctuation">,</span> <span class="token keyword">class</span> <span class="token class-name">Linecolor</span><span class="token punctuation">[</span>GREEN<span class="token punctuation">]</span> xPos<span class="token punctuation">[</span><span class="token number">68</span><span class="token punctuation">]</span> yPos<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> dim<span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span>
<span class="token punctuation">,</span> <span class="token keyword">class</span> <span class="token class-name">Circlecolor</span><span class="token punctuation">[</span>GREEN<span class="token punctuation">]</span> xPos<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> yPos<span class="token punctuation">[</span><span class="token number">88</span><span class="token punctuation">]</span> dim<span class="token punctuation">[</span><span class="token number">28</span><span class="token punctuation">]</span>
<span class="token punctuation">,</span> <span class="token keyword">class</span> <span class="token class-name">Squarecolor</span><span class="token punctuation">[</span>GREEN<span class="token punctuation">]</span> xPos<span class="token punctuation">[</span><span class="token number">51</span><span class="token punctuation">]</span> yPos<span class="token punctuation">[</span><span class="token number">89</span><span class="token punctuation">]</span> dim<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span>
<span class="token punctuation">,</span> <span class="token keyword">class</span> <span class="token class-name">Linecolor</span><span class="token punctuation">[</span>GREEN<span class="token punctuation">]</span> xPos<span class="token punctuation">[</span><span class="token number">78</span><span class="token punctuation">]</span> yPos<span class="token punctuation">[</span><span class="token number">98</span><span class="token punctuation">]</span> dim<span class="token punctuation">[</span><span class="token number">61</span><span class="token punctuation">]</span>
<span class="token punctuation">,</span> <span class="token keyword">class</span> <span class="token class-name">Circlecolor</span><span class="token punctuation">[</span>GREEN<span class="token punctuation">]</span> xPos<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span> yPos<span class="token punctuation">[</span><span class="token number">58</span><span class="token punctuation">]</span> dim<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span>
<span class="token punctuation">,</span> <span class="token keyword">class</span> <span class="token class-name">Squarecolor</span><span class="token punctuation">[</span>GREEN<span class="token punctuation">]</span> xPos<span class="token punctuation">[</span><span class="token number">40</span><span class="token punctuation">]</span> yPos<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> dim<span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span>
<span class="token punctuation">,</span> <span class="token keyword">class</span> <span class="token class-name">Linecolor</span><span class="token punctuation">[</span>GREEN<span class="token punctuation">]</span> xPos<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> yPos<span class="token punctuation">[</span><span class="token number">83</span><span class="token punctuation">]</span> dim<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>
<span class="token punctuation">,</span> <span class="token keyword">class</span> <span class="token class-name">Circlecolor</span><span class="token punctuation">[</span>GREEN<span class="token punctuation">]</span> xPos<span class="token punctuation">[</span><span class="token number">75</span><span class="token punctuation">]</span> yPos<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> dim<span class="token punctuation">[</span><span class="token number">42</span><span class="token punctuation">]</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Shape \u7C7B\u5B9E\u73B0\u4E86 Serializable\uFF0C\u6240\u4EE5\u4EFB\u4F55\u81EA Shape \u7EE7\u627F\u7684\u7C7B\u4E5F\u90FD\u4F1A\u81EA\u52A8\u662F Serializable \u7684\u3002\u6BCF\u4E2A Shape \u90FD\u542B\u6709\u6570\u636E\uFF0C\u800C\u4E14\u6BCF\u4E2A\u6D3E\u751F\u81EA Shape \u7684\u7C7B\u90FD\u5305\u542B\u4E00\u4E2A static \u5B57\u6BB5\uFF0C\u7528\u6765\u786E\u5B9A\u5404\u79CD Shape \u7C7B\u578B\u7684\u989C\u8272\uFF08\u5982\u679C\u5C06 static \u5B57\u6BB5\u7F6E\u5165\u57FA\u7C7B\uFF0C\u53EA\u4F1A\u4EA7\u751F\u4E00\u4E2A static \u5B57\u6BB5\uFF0C\u56E0\u4E3A static \u5B57\u6BB5\u4E0D\u80FD\u5728\u6D3E\u751F\u7C7B\u4E2D\u590D\u5236\uFF09\u3002\u53EF\u5BF9\u57FA\u7C7B\u4E2D\u7684\u65B9\u6CD5\u8FDB\u884C\u91CD\u8F7D\uFF0C\u4EE5\u4FBF\u4E3A\u4E0D\u540C\u7684\u7C7B\u578B\u8BBE\u7F6E\u989C\u8272\uFF08static \u65B9\u6CD5\u4E0D\u4F1A\u52A8\u6001\u7ED1\u5B9A\uFF0C\u6240\u4EE5\u8FD9\u4E9B\u90FD\u662F\u666E\u901A\u7684\u65B9\u6CD5\uFF09\u3002\u6BCF\u6B21\u8C03\u7528 randomFactory() \u65B9\u6CD5\u65F6\uFF0C\u5B83\u90FD\u4F1A\u4F7F\u7528\u4E0D\u540C\u7684\u968F\u673A\u6570\u4F5C\u4E3A Shape \u7684\u6570\u636E\uFF0C\u4ECE\u800C\u521B\u5EFA\u4E0D\u540C\u7684 Shape\u3002</p><p>\u5728 main() \u4E2D\uFF0C\u4E00\u4E2A ArrayList \u7528\u4E8E\u4FDD\u5B58 Class \u5BF9\u8C61\uFF0C\u800C\u53E6\u4E00\u4E2A\u7528\u4E8E\u4FDD\u5B58\u51E0\u4F55\u5F62\u72B6\u3002</p><p>\u6062\u590D\u5BF9\u8C61\u76F8\u5F53\u76F4\u89C2\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// serialization/RecoverCADState.java</span>
<span class="token comment">// Restoring the state of the fictitious CAD system</span>
<span class="token comment">// {RunFirst: AStoreCADState}</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RecoverCADState</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span><span class="token punctuation">(</span>
                <span class="token class-name">ObjectInputStream</span> in <span class="token operator">=</span>
                        <span class="token keyword">new</span> <span class="token class-name">ObjectInputStream</span><span class="token punctuation">(</span>
                                <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token string">&quot;CADState.dat&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">// Read in the same order they were written:</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Class</span><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Shape</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> shapeTypes <span class="token operator">=</span>
                    <span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Class</span><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Shape</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>in<span class="token punctuation">.</span><span class="token function">readObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Line</span><span class="token punctuation">.</span><span class="token function">deserializeStaticState</span><span class="token punctuation">(</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Shape</span><span class="token punctuation">&gt;</span></span> shapes <span class="token operator">=</span>
                    <span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Shape</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>in<span class="token punctuation">.</span><span class="token function">readObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>shapes<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> <span class="token operator">|</span> <span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u4E3A\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token punctuation">[</span><span class="token keyword">class</span> <span class="token class-name">Circlecolor</span><span class="token punctuation">[</span>RED<span class="token punctuation">]</span> xPos<span class="token punctuation">[</span><span class="token number">58</span><span class="token punctuation">]</span> yPos<span class="token punctuation">[</span><span class="token number">55</span><span class="token punctuation">]</span> dim<span class="token punctuation">[</span><span class="token number">93</span><span class="token punctuation">]</span>
<span class="token punctuation">,</span> <span class="token keyword">class</span> <span class="token class-name">Squarecolor</span><span class="token punctuation">[</span>RED<span class="token punctuation">]</span> xPos<span class="token punctuation">[</span><span class="token number">61</span><span class="token punctuation">]</span> yPos<span class="token punctuation">[</span><span class="token number">61</span><span class="token punctuation">]</span> dim<span class="token punctuation">[</span><span class="token number">29</span><span class="token punctuation">]</span>
<span class="token punctuation">,</span> <span class="token keyword">class</span> <span class="token class-name">Linecolor</span><span class="token punctuation">[</span>GREEN<span class="token punctuation">]</span> xPos<span class="token punctuation">[</span><span class="token number">68</span><span class="token punctuation">]</span> yPos<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> dim<span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span>
<span class="token punctuation">,</span> <span class="token keyword">class</span> <span class="token class-name">Circlecolor</span><span class="token punctuation">[</span>RED<span class="token punctuation">]</span> xPos<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> yPos<span class="token punctuation">[</span><span class="token number">88</span><span class="token punctuation">]</span> dim<span class="token punctuation">[</span><span class="token number">28</span><span class="token punctuation">]</span>
<span class="token punctuation">,</span> <span class="token keyword">class</span> <span class="token class-name">Squarecolor</span><span class="token punctuation">[</span>RED<span class="token punctuation">]</span> xPos<span class="token punctuation">[</span><span class="token number">51</span><span class="token punctuation">]</span> yPos<span class="token punctuation">[</span><span class="token number">89</span><span class="token punctuation">]</span> dim<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span>
<span class="token punctuation">,</span> <span class="token keyword">class</span> <span class="token class-name">Linecolor</span><span class="token punctuation">[</span>GREEN<span class="token punctuation">]</span> xPos<span class="token punctuation">[</span><span class="token number">78</span><span class="token punctuation">]</span> yPos<span class="token punctuation">[</span><span class="token number">98</span><span class="token punctuation">]</span> dim<span class="token punctuation">[</span><span class="token number">61</span><span class="token punctuation">]</span>
<span class="token punctuation">,</span> <span class="token keyword">class</span> <span class="token class-name">Circlecolor</span><span class="token punctuation">[</span>RED<span class="token punctuation">]</span> xPos<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span> yPos<span class="token punctuation">[</span><span class="token number">58</span><span class="token punctuation">]</span> dim<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span>
<span class="token punctuation">,</span> <span class="token keyword">class</span> <span class="token class-name">Squarecolor</span><span class="token punctuation">[</span>RED<span class="token punctuation">]</span> xPos<span class="token punctuation">[</span><span class="token number">40</span><span class="token punctuation">]</span> yPos<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> dim<span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span>
<span class="token punctuation">,</span> <span class="token keyword">class</span> <span class="token class-name">Linecolor</span><span class="token punctuation">[</span>GREEN<span class="token punctuation">]</span> xPos<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> yPos<span class="token punctuation">[</span><span class="token number">83</span><span class="token punctuation">]</span> dim<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>
<span class="token punctuation">,</span> <span class="token keyword">class</span> <span class="token class-name">Circlecolor</span><span class="token punctuation">[</span>RED<span class="token punctuation">]</span> xPos<span class="token punctuation">[</span><span class="token number">75</span><span class="token punctuation">]</span> yPos<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> dim<span class="token punctuation">[</span><span class="token number">42</span><span class="token punctuation">]</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u5230\uFF0CxPos\uFF0CyPos \u4EE5\u53CA dim \u7684\u503C\u90FD\u88AB\u6210\u529F\u5730\u4FDD\u5B58\u548C\u6062\u590D\u4E86\uFF0C\u4F46\u662F\u5BF9 static \u4FE1\u606F\u7684\u8BFB\u53D6\u5374\u51FA\u73B0\u4E86\u95EE\u9898\u3002\u6240\u6709\u8BFB\u56DE\u7684\u989C\u8272\u5E94\u8BE5\u90FD\u662F\u201C3\u201D\uFF0C\u4F46\u662F\u771F\u5B9E\u60C5\u51B5\u5374\u5E76\u975E\u5982\u6B64\u3002Circle \u7684\u503C\u4E3A 1\uFF08\u5B9A\u4E49\u4E3A RED\uFF09\uFF0C\u800C Square \u7684\u503C\u4E3A 0\uFF08\u8BB0\u4F4F\uFF0C\u5B83\u4EEC\u662F\u5728\u6784\u9020\u5668\u4E2D\u88AB\u521D\u59CB\u5316\u7684\uFF09\u3002\u770B\u4E0A\u53BB\u4F3C\u4E4E static \u6570\u636E\u6839\u672C\u6CA1\u6709\u88AB\u5E8F\u5217\u5316\uFF01\u786E\u5B9E\u5982\u6B64\u2014\u2014\u5C3D\u7BA1 Class \u7C7B\u662F Serializable \u7684\uFF0C\u4F46\u5B83\u5374\u4E0D\u80FD\u6309\u6211\u4EEC\u6240\u671F\u671B\u7684\u65B9\u5F0F\u8FD0\u884C\u3002\u6240\u4EE5\u5047\u5982\u60F3\u5E8F\u5217\u5316 static \u503C\uFF0C\u5FC5\u987B\u81EA\u5DF1\u52A8\u624B\u53BB\u5B9E\u73B0\u3002</p><p>\u8FD9\u6B63\u662F Line \u4E2D\u7684 serializeStaticState() \u548C deserializeStaticState() \u4E24\u4E2A static \u65B9\u6CD5\u7684\u7528\u9014\u3002\u53EF\u4EE5\u770B\u5230\uFF0C\u5B83\u4EEC\u662F\u4F5C\u4E3A\u5B58\u50A8\u548C\u8BFB\u53D6\u8FC7\u7A0B\u7684\u4E00\u90E8\u5206\u88AB\u663E\u5F0F\u5730\u8C03\u7528\u7684\u3002\uFF08\u6CE8\u610F\u5FC5\u987B\u7EF4\u62A4\u5199\u5165\u5E8F\u5217\u5316\u6587\u4EF6\u548C\u4ECE\u8BE5\u6587\u4EF6\u4E2D\u8BFB\u56DE\u7684\u987A\u5E8F\u3002\uFF09\u56E0\u6B64\uFF0C\u4E3A\u4E86\u4F7F CADStatejava \u6B63\u786E\u8FD0\u8F6C\u8D77\u6765\uFF0C\u4F60\u5FC5\u987B\uFF1A</p><ol><li>\u4E3A\u51E0\u4F55\u5F62\u72B6\u6DFB\u52A0 serializeStaticState() \u548C deserializeStaticState()</li><li>\u79FB\u9664 ArrayList shapeTypes \u4EE5\u53CA\u4E0E\u4E4B\u6709\u5173\u7684\u6240\u6709\u4EE3\u7801\u3002</li><li>\u5728\u51E0\u4F55\u5F62\u72B6\u5185\u6DFB\u52A0\u5BF9\u65B0\u7684\u5E8F\u5217\u5316\u548C\u53CD\u5E8F\u5217\u5316\u8FD8\u539F\u9759\u6001\u65B9\u6CD5\u7684\u8C03\u7528\u3002</li></ol><p>\u53E6\u4E00\u4E2A\u8981\u6CE8\u610F\u7684\u95EE\u9898\u662F\u5B89\u5168\uFF0C\u56E0\u4E3A\u5E8F\u5217\u5316\u4E5F\u4F1A\u5C06 private \u6570\u636E\u4FDD\u5B58\u4E0B\u6765\u3002\u5982\u679C\u4F60\u5173\u5FC3\u5B89\u5168\u95EE\u9898\uFF0C\u90A3\u4E48\u5E94\u5C06\u5176\u6807\u8BB0\u6210 transient\uFF0C\u4F46\u662F\u8FD9\u4E4B\u540E\uFF0C\u8FD8\u5FC5\u987B\u8BBE\u8BA1\u4E00\u79CD\u5B89\u5168\u7684\u4FDD\u5B58\u4FE1\u606F\u7684\u65B9\u6CD5\uFF0C\u4EE5\u4FBF\u5728\u6267\u884C\u6062\u590D\u65F6\u53EF\u4EE5\u590D\u4F4D\u90A3\u4E9B private \u53D8\u91CF\u3002</p><h2 id="xml" tabindex="-1"><a class="header-anchor" href="#xml" aria-hidden="true">#</a> XML</h2><p>\u5BF9\u8C61\u5E8F\u5217\u5316\u7684\u4E00\u4E2A\u91CD\u8981\u9650\u5236\u662F\u5B83\u53EA\u662F Java \u7684\u89E3\u51B3\u65B9\u6848\uFF1A\u53EA\u6709 Java \u7A0B\u5E8F\u624D\u80FD\u53CD\u5E8F\u5217\u5316\u8FD9\u79CD\u5BF9\u8C61\u3002\u4E00\u79CD\u66F4\u5177\u4E92\u64CD\u4F5C\u6027\u7684\u89E3\u51B3\u65B9\u6848\u662F\u5C06\u6570\u636E\u8F6C\u6362\u4E3A XML \u683C\u5F0F\uFF0C\u8FD9\u53EF\u4EE5\u4F7F\u5176\u88AB\u5404\u79CD\u5404\u6837\u7684\u5E73\u53F0\u548C\u8BED\u8A00\u4F7F\u7528\u3002</p><p>\u56E0\u4E3A XML \u5341\u5206\u6D41\u884C\uFF0C\u6240\u4EE5\u7528\u5B83\u6765\u7F16\u7A0B\u65F6\u7684\u5404\u79CD\u9009\u62E9\u4E0D\u80DC\u679A\u4E3E\uFF0C\u5305\u62EC\u968F JDK \u53D1\u5E03\u7684 javax.xml.*\u7C7B\u5E93\u3002\u6211\u9009\u62E9\u4F7F\u7528 Elliotte Rusty Harold \u7684\u5F00\u6E90 XOM \u7C7B\u5E93\uFF08\u53EF\u4ECE www.xom.nu \u4E0B\u8F7D\u5E76\u83B7\u5F97\u6587\u6863\uFF09\uFF0C\u56E0\u4E3A\u5B83\u770B\u8D77\u6765\u6700\u7B80\u5355\uFF0C\u540C\u65F6\u4E5F\u662F\u6700\u76F4\u89C2\u7684\u7528 Java \u4EA7\u751F\u548C\u4FEE\u6539 XML \u7684\u65B9\u5F0F\u3002\u53E6\u5916\uFF0CXOM \u8FD8\u5F3A\u8C03\u4E86 XML \u7684\u6B63\u786E\u6027\u3002</p><p>\u4F5C\u4E3A\u4E00\u4E2A\u793A\u4F8B\uFF0C\u5047\u8BBE\u6709\u4E00\u4E2A APerson \u5BF9\u8C61\uFF0C\u5B83\u5305\u542B\u59D3\u548C\u540D\uFF0C\u4F60\u60F3\u5C06\u5B83\u4EEC\u5E8F\u5217\u5316\u5230 XML \u4E2D\u3002\u4E0B\u9762\u7684 APerson \u7C7B\u6709\u4E00\u4E2A getXML() \u65B9\u6CD5\uFF0C\u5B83\u4F7F\u7528 XOM \u6765\u4EA7\u751F\u88AB\u8F6C\u6362\u4E3A XML \u7684 Element \u5BF9\u8C61\u7684 APerson \u6570\u636E\uFF1B\u8FD8\u6709\u4E00\u4E2A\u6784\u9020\u5668\uFF0C\u63A5\u53D7 Element \u5E76\u4ECE\u4E2D\u62BD\u53D6\u6070\u5F53\u7684 APerson \u6570\u636E\uFF08\u6CE8\u610F\uFF0CXML \u793A\u4F8B\u90FD\u5728\u5B83\u4EEC\u81EA\u5DF1\u7684\u5B50\u76EE\u5F55\u4E2D\uFF09\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// serialization/APerson.java</span>
<span class="token comment">// Use the XOM library to write and read XML</span>
<span class="token comment">// nu.xom.Node comes from http://www.xom.nu</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">nu<span class="token punctuation">.</span>xom<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">APerson</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> first<span class="token punctuation">,</span> last<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">APerson</span><span class="token punctuation">(</span><span class="token class-name">String</span> first<span class="token punctuation">,</span> <span class="token class-name">String</span> last<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>first <span class="token operator">=</span> first<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>last <span class="token operator">=</span> last<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// Produce an XML Element from this APerson object:</span>
    <span class="token keyword">public</span> <span class="token class-name">Element</span> <span class="token function">getXML</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Element</span> person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Element</span><span class="token punctuation">(</span><span class="token string">&quot;person&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Element</span> firstName <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Element</span><span class="token punctuation">(</span><span class="token string">&quot;first&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        firstName<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>first<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Element</span> lastName <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Element</span><span class="token punctuation">(</span><span class="token string">&quot;last&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        lastName<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>last<span class="token punctuation">)</span><span class="token punctuation">;</span>
        person<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>firstName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        person<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>lastName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> person<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// Constructor restores a APerson from XML:</span>
    <span class="token keyword">public</span> <span class="token class-name">APerson</span><span class="token punctuation">(</span><span class="token class-name">Element</span> person<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        first <span class="token operator">=</span> person
                <span class="token punctuation">.</span><span class="token function">getFirstChildElement</span><span class="token punctuation">(</span><span class="token string">&quot;first&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        last <span class="token operator">=</span> person
                <span class="token punctuation">.</span><span class="token function">getFirstChildElement</span><span class="token punctuation">(</span><span class="token string">&quot;last&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> first <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> last<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// Make it human-readable:</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span>
    <span class="token function">format</span><span class="token punctuation">(</span><span class="token class-name">OutputStream</span> os<span class="token punctuation">,</span> <span class="token class-name">Document</span> doc<span class="token punctuation">)</span>
            <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">Serializer</span> serializer <span class="token operator">=</span>
                <span class="token keyword">new</span> <span class="token class-name">Serializer</span><span class="token punctuation">(</span>os<span class="token punctuation">,</span><span class="token string">&quot;ISO-8859-1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        serializer<span class="token punctuation">.</span><span class="token function">setIndent</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        serializer<span class="token punctuation">.</span><span class="token function">setMaxLength</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        serializer<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>doc<span class="token punctuation">)</span><span class="token punctuation">;</span>
        serializer<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">APerson</span><span class="token punctuation">&gt;</span></span> people <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>
                <span class="token keyword">new</span> <span class="token class-name">APerson</span><span class="token punctuation">(</span><span class="token string">&quot;Dr. Bunsen&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Honeydew&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">APerson</span><span class="token punctuation">(</span><span class="token string">&quot;Gonzo&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;The Great&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">APerson</span><span class="token punctuation">(</span><span class="token string">&quot;Phillip J.&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Fry&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>people<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Element</span> root <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Element</span><span class="token punctuation">(</span><span class="token string">&quot;people&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">APerson</span> p <span class="token operator">:</span> people<span class="token punctuation">)</span>
            root<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span><span class="token function">getXML</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Document</span> doc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Document</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">format</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">,</span> doc<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">format</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BufferedOutputStream</span><span class="token punctuation">(</span>
                <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token string">&quot;People.xml&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> doc<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u4E3A\uFF1A</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>[Dr. Bunsen Honeydew, Gonzo The Great, Phillip J. Fry]
<span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>people</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>person</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>first</span><span class="token punctuation">&gt;</span></span>Dr. Bunsen<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>first</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>last</span><span class="token punctuation">&gt;</span></span>Honeydew<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>last</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>person</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>person</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>first</span><span class="token punctuation">&gt;</span></span>Gonzo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>first</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>last</span><span class="token punctuation">&gt;</span></span>The Great<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>last</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>person</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>person</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>first</span><span class="token punctuation">&gt;</span></span>Phillip J.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>first</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>last</span><span class="token punctuation">&gt;</span></span>Fry<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>last</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>person</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>people</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>XOM \u7684\u65B9\u6CD5\u90FD\u5177\u6709\u76F8\u5F53\u7684\u81EA\u89E3\u91CA\u6027\uFF0C\u53EF\u4EE5\u5728 XOM \u6587\u6863\u4E2D\u627E\u5230\u5B83\u4EEC\u3002XOM \u8FD8\u5305\u542B\u4E00\u4E2A Serializer \u7C7B\uFF0C\u4F60\u53EF\u4EE5\u5728 format() \u65B9\u6CD5\u4E2D\u770B\u5230\u5B83\u88AB\u7528\u6765\u5C06 XML \u8F6C\u6362\u4E3A\u66F4\u5177\u53EF\u8BFB\u6027\u7684\u683C\u5F0F\u3002\u5982\u679C\u53EA\u8C03\u7528 toXML()\uFF0C\u90A3\u4E48\u6240\u6709\u4E1C\u897F\u90FD\u4F1A\u6DF7\u5728\u4E00\u8D77\uFF0C\u56E0\u6B64 Serializer \u662F\u4E00\u79CD\u4FBF\u5229\u5DE5\u5177\u3002</p><p>\u4ECE XML \u6587\u4EF6\u4E2D\u53CD\u5E8F\u5217\u5316 Person \u5BF9\u8C61\u4E5F\u5F88\u7B80\u5355\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// serialization/People.java</span>
<span class="token comment">// nu.xom.Node comes from http://www.xom.nu</span>
<span class="token comment">// {RunFirst: APerson}</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">nu<span class="token punctuation">.</span>xom<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">File</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">People</span> <span class="token keyword">extends</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">APerson</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">People</span><span class="token punctuation">(</span><span class="token class-name">String</span> fileName<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">Document</span> doc <span class="token operator">=</span>
                <span class="token keyword">new</span> <span class="token class-name">Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>fileName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Elements</span> elements <span class="token operator">=</span>
                doc<span class="token punctuation">.</span><span class="token function">getRootElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getChildElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> elements<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
            <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">APerson</span><span class="token punctuation">(</span>elements<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">People</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">People</span><span class="token punctuation">(</span><span class="token string">&quot;People.xml&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">/* Output:
[Dr. Bunsen Honeydew, Gonzo The Great, Phillip J. Fry]
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>People \u6784\u9020\u5668\u4F7F\u7528 XOM \u7684 Builder.build() \u65B9\u6CD5\u6253\u5F00\u5E76\u8BFB\u53D6\u4E00\u4E2A\u6587\u4EF6\uFF0C\u800C getChildElements() \u65B9\u6CD5\u4EA7\u751F\u4E86\u4E00\u4E2A Elements \u5217\u8868\uFF08\u4E0D\u662F\u6807\u51C6\u7684 Java List\uFF0C\u53EA\u662F\u4E00\u4E2A\u62E5\u6709 size() \u548C get() \u65B9\u6CD5\u7684\u5BF9\u8C61\uFF0C\u56E0\u4E3A Harold \u4E0D\u60F3\u5F3A\u5236\u4EBA\u4EEC\u4F7F\u7528\u7279\u5B9A\u7248\u672C\u7684 Java\uFF0C\u4F46\u662F\u4ECD\u65E7\u5E0C\u671B\u4F7F\u7528\u7C7B\u578B\u5B89\u5168\u7684\u5BB9\u5668\uFF09\u3002\u5728\u8FD9\u4E2A\u5217\u8868\u4E2D\u7684\u6BCF\u4E2A Element \u90FD\u8868\u793A\u4E00\u4E2A Person \u5BF9\u8C61\uFF0C\u56E0\u6B64\u5B83\u53EF\u4EE5\u4F20\u9012\u7ED9\u7B2C\u4E8C\u4E2A Person \u6784\u9020\u5668\u3002\u6CE8\u610F\uFF0C\u8FD9\u8981\u6C42\u4F60\u63D0\u524D\u77E5\u9053 XML \u6587\u4EF6\u7684\u786E\u5207\u7ED3\u6784\uFF0C\u4F46\u662F\u8FD9\u7ECF\u5E38\u4F1A\u6709\u4E9B\u95EE\u9898\u3002\u5982\u679C\u6587\u4EF6\u7ED3\u6784\u4E0E\u4F60\u9884\u671F\u7684\u7ED3\u6784\u4E0D\u5339\u914D\uFF0C\u90A3\u4E48 XOM \u5C06\u629B\u51FA\u5F02\u5E38\u3002\u5BF9\u4F60\u6765\u8BF4\uFF0C\u5982\u679C\u4F60\u7F3A\u4E4F\u6709\u5173\u5C06\u6765\u7684 XML \u7ED3\u6784\u7684\u4FE1\u606F\uFF0C\u90A3\u4E48\u5C31\u6709\u53EF\u80FD\u4F1A\u7F16\u5199\u66F4\u590D\u6742\u7684\u4EE3\u7801\u53BB\u63A2\u6D4B XML \u6587\u6863\uFF0C\u800C\u4E0D\u662F\u53EA\u5BF9\u5176\u505A\u51FA\u5047\u8BBE\u3002</p><p>\u4E3A\u4E86\u83B7\u53D6\u8FD9\u4E9B\u793A\u4F8B\u53BB\u7F16\u8BD1\u5B83\u4EEC\uFF0C\u4F60\u5FC5\u987B\u5C06 XOM \u53D1\u5E03\u5305\u4E2D\u7684 JAR \u6587\u4EF6\u653E\u7F6E\u5230\u4F60\u7684\u7C7B\u8DEF\u5F84\u4E2D\u3002</p><p>\u8FD9\u91CC\u53EA\u7ED9\u51FA\u4E86\u7528 Java \u548C XOM \u7C7B\u5E93\u8FDB\u884C XML \u7F16\u7A0B\u7684\u7B80\u4ECB\uFF0C\u66F4\u8BE6\u7EC6\u7684\u4FE1\u606F\u53EF\u4EE5\u6D4F\u89C8 www.xom.nu \u3002</p><div style="page-break-after:always;"></div>`,112),o=[e];function c(l,i){return s(),a("div",null,o)}var k=n(p,[["render",c],["__file","Appendix-Object-Serialization.html.vue"]]);export{k as default};
