import{_ as p,r as e,o,c,a as s,b as l,w as i,e as a,d as n}from"./app.205a3d76.js";var u="/assets/1554546258113.43e69856.png",k="/assets/1554546378822.0cd29fbd.png",r="/assets/1554546452861.285847a9.png",d="/assets/1554546627710.0fff077a.png",v="/assets/1554546666685.c61c17c2.png",m="/assets/1554546693664.be38b970.png",b="/assets/1554546666685.c61c17c2.png",f="/assets/1554546666685.c61c17c2.png",g="/assets/1554546881189.11a237f3.png",y="/assets/1554546890132.02c8acff.png";const w={},h=a('<p>[TOC]</p><h1 id="\u9644\u5F55-\u65B0io" tabindex="-1"><a class="header-anchor" href="#\u9644\u5F55-\u65B0io" aria-hidden="true">#</a> \u9644\u5F55:\u65B0IO</h1><blockquote><p>Java \u65B0I/O \u5E93\u662F\u5728 1.4 \u7248\u672C\u5F15\u5165\u5230 <code>java.nio.*</code> \u5305\u4E2D\u7684\uFF0C\u65E8\u5728\u66F4\u5FEB\u901F\u3002</p></blockquote><p>\u5B9E\u9645\u4E0A\uFF0C\u65B0 I/O \u4F7F\u7528 <strong>NIO</strong>\uFF08\u540C\u6B65\u975E\u963B\u585E\uFF09\u7684\u65B9\u5F0F\u91CD\u5199\u4E86\u8001\u7684 I/O \u4E86\uFF0C\u56E0\u6B64\u5B83\u83B7\u5F97\u4E86 <strong>NIO</strong> \u7684\u79CD\u79CD\u4F18\u70B9\u3002\u5373\u4F7F\u6211\u4EEC\u4E0D\u663E\u5F0F\u5730\u4F7F\u7528 <strong>NIO</strong> \u65B9\u5F0F\u6765\u7F16\u5199\u4EE3\u7801\uFF0C\u4E5F\u80FD\u5E26\u6765\u6027\u80FD\u548C\u901F\u5EA6\u7684\u63D0\u9AD8\u3002\u8FD9\u79CD\u63D0\u5347\u4E0D\u4EC5\u4EC5\u4F53\u73B0\u5728\u6587\u4EF6\u8BFB\u5199\uFF08File I/O\uFF09\uFF0C\u540C\u65F6\u4E5F\u4F53\u73B0\u5728\u7F51\u7EDC\u8BFB\u5199\uFF08Network I/O\uFF09\u4E2D\u3002\u4F8B\u5982\uFF0C\u7F51\u7EDC\u7F16\u7A0B\u3002</p><p>\u901F\u5EA6\u7684\u63D0\u5347\u6765\u81EA\u4E8E\u4F7F\u7528\u4E86\u66F4\u63A5\u8FD1\u64CD\u4F5C\u7CFB\u7EDF I/O \u6267\u884C\u65B9\u5F0F\u7684\u7ED3\u6784\uFF1A<strong>Channel</strong>\uFF08\u901A\u9053\uFF09 \u548C <strong>Buffer</strong>\uFF08\u7F13\u51B2\u533A\uFF09\u3002\u6211\u4EEC\u53EF\u4EE5\u60F3\u8C61\u4E00\u4E2A\u7164\u77FF\uFF1A\u901A\u9053\u5C31\u662F\u8FDE\u63A5\u77FF\u5C42\uFF08\u6570\u636E\uFF09\u7684\u77FF\u4E95\uFF0C\u7F13\u51B2\u533A\u662F\u8FD0\u9001\u7164\u77FF\u7684\u5C0F\u8F66\u3002\u901A\u8FC7\u5C0F\u8F66\u88C5\u7164\uFF0C\u518D\u4ECE\u8F66\u91CC\u53D6\u77FF\u3002\u6362\u53E5\u8BDD\u8BF4\uFF0C\u6211\u4EEC\u4E0D\u80FD\u76F4\u63A5\u548C <strong>Channel</strong> \u4EA4\u4E92; \u6211\u4EEC\u9700\u8981\u4E0E <strong>Buffer</strong> \u4EA4\u4E92\u5E76\u5C06 <strong>Buffer</strong> \u4E2D\u7684\u6570\u636E\u53D1\u9001\u5230 <strong>Channel</strong> \u4E2D\uFF1B<strong>Channel</strong> \u9700\u8981\u4ECE <strong>Buffer</strong> \u4E2D\u63D0\u53D6\u6216\u653E\u5165\u6570\u636E\u3002</p>',5),B=n("\u672C\u7BC7\u6211\u4EEC\u5C06\u6DF1\u5165\u63A2\u8BA8 "),x=s("code",null,"nio",-1),S=n(" \u5305\u3002\u867D\u7136 \u50CF I/O \u6D41\u8FD9\u6837\u7684\u9AD8\u7EA7\u5E93\u4F7F\u7528\u4E86 "),q=s("strong",null,"NIO",-1),C=n("\uFF0C\u4F46\u591A\u6570\u65F6\u5019\uFF0C\u6211\u4EEC\u8003\u8651\u8FD9\u4E2A\u5C42\u6B21\u7684\u95EE\u9898\u3002\u4F7F\u7528Java 7 \u548C 8 \u7248\u672C\uFF0C\u7406\u60F3\u60C5\u51B5\u4E0B\u6211\u4EEC\u751A\u81F3\u4E0D\u5FC5\u8D39\u5FC3\u53BB\u5904\u7406 I/O \u6D41\u3002\u5F53\u7136\uFF0C\u4E00\u4E9B\u7279\u6B8A\u60C5\u51B5\u9664\u5916\u3002\u5728"),E=n("\u6587\u4EF6"),I=n("\uFF08"),F=s("strong",null,"File",-1),j=n("\uFF09\u4E00\u7AE0\u4E2D\u57FA\u672C\u6DB5\u76D6\u4E86\u6211\u4EEC\u65E5\u5E38\u4F7F\u7528\u7684\u76F8\u5173\u5185\u5BB9\u3002\u53EA\u6709\u5728\u9047\u5230\u6027\u80FD\u74F6\u9888\uFF08\u4F8B\u5982\u5185\u5B58\u6620\u5C04\u6587\u4EF6\uFF09\u6216\u521B\u5EFA\u81EA\u5DF1\u7684 I/O \u5E93\u65F6\uFF0C\u6211\u4EEC\u624D\u9700\u8981\u53BB\u7406\u89E3 "),O=s("strong",null,"NIO",-1),_=n("\u3002"),L=a(`<h2 id="bytebuffer" tabindex="-1"><a class="header-anchor" href="#bytebuffer" aria-hidden="true">#</a> ByteBuffer</h2><p>\u6709\u4E14\u4EC5\u6709 <strong>ByteBuffer</strong>\uFF08\u5B57\u8282\u7F13\u51B2\u533A\uFF0C\u4FDD\u5B58\u539F\u59CB\u5B57\u8282\u7684\u7F13\u51B2\u533A\uFF09\u8FD9\u4E00\u7C7B\u578B\u53EF\u76F4\u63A5\u4E0E\u901A\u9053\u4EA4\u4E92\u3002\u67E5\u770B <code>java.nio.</code><strong>ByteBuffer</strong> \u7684 JDK \u6587\u6863\uFF0C\u4F60\u4F1A\u53D1\u73B0\u5B83\u662F\u76F8\u5F53\u57FA\u7840\u7684\uFF1A\u901A\u8FC7\u521D\u59CB\u5316\u67D0\u4E2A\u5927\u5C0F\u7684\u5B58\u50A8\u7A7A\u95F4\uFF0C\u518D\u4F7F\u7528\u4E00\u4E9B\u65B9\u6CD5\u4EE5\u539F\u59CB\u5B57\u8282\u5F62\u5F0F\u6216\u539F\u59CB\u6570\u636E\u7C7B\u578B\u6765\u653E\u7F6E\u548C\u83B7\u53D6\u6570\u636E\u3002\u4F46\u662F\u6211\u4EEC\u65E0\u6CD5\u76F4\u63A5\u5B58\u653E\u5BF9\u8C61\uFF0C\u5373\u4F7F\u662F\u6700\u57FA\u672C\u7684 <strong>String</strong> \u7C7B\u578B\u6570\u636E\u3002\u8FD9\u662F\u4E00\u4E2A\u76F8\u5F53\u5E95\u5C42\u7684\u64CD\u4F5C\uFF0C\u4E5F\u6B63\u56E0\u5982\u6B64\uFF0C\u4F7F\u5F97\u5B83\u4E0E\u5927\u591A\u6570\u64CD\u4F5C\u7CFB\u7EDF\u7684\u6620\u5C04\u66F4\u52A0\u9AD8\u6548\u3002</p><p>\u65E7\u5F0F I/O \u4E2D\u7684\u4E09\u4E2A\u7C7B\u5206\u522B\u88AB\u66F4\u65B0\u6210 <strong>FileChannel</strong>\uFF08\u6587\u4EF6\u901A\u9053\uFF09\uFF0C\u5206\u522B\u662F\uFF1A<strong>FileInputStream</strong>\u3001<strong>FileOutputStream</strong>\uFF0C\u4EE5\u53CA\u7528\u4E8E\u8BFB\u5199\u7684 <strong>RandomAccessFile</strong> \u7C7B\u3002</p><p>\u6CE8\u610F\uFF0C\u8FD9\u4E9B\u90FD\u662F\u7B26\u5408\u5E95\u5C42 <strong>NIO</strong> \u7279\u6027\u7684\u5B57\u8282\u64CD\u4F5C\u6D41\u3002 \u53E6\u5916\uFF0C\u8FD8\u6709 <strong>Reader</strong> \u548C <strong>Writer</strong> \u5B57\u7B26\u6A21\u5F0F\u7684\u7C7B\u662F\u4E0D\u4EA7\u751F\u901A\u9053\u7684\u3002\u4F46 <code>java.nio.channels.</code><strong>Channels</strong> \u7C7B\u5177\u6709\u4ECE\u901A\u9053\u4E2D\u751F\u6210 <strong>Reader</strong> \u548C <strong>Writer</strong> \u7684\u5B9E\u7528\u65B9\u6CD5\u3002</p><p>\u4E0B\u9762\u6765\u7EC3\u4E60\u4E0A\u8FF0\u4E09\u79CD\u7C7B\u578B\u7684\u6D41\u751F\u6210\u53EF\u8BFB\u3001\u53EF\u5199\u3001\u53EF\u8BFB/\u5199\u7684\u901A\u9053\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// (c)2017 MindView LLC: see Copyright.txt</span>
<span class="token comment">// \u6211\u4EEC\u4E0D\u4FDD\u8BC1\u8FD9\u6BB5\u4EE3\u7801\u7528\u4E8E\u5176\u4ED6\u7528\u9014\u65F6\u662F\u5426\u6709\u6548</span>
<span class="token comment">// \u8BBF\u95EE http://OnJava8.com \u4E86\u89E3\u66F4\u591A\u4FE1\u606F</span>
<span class="token comment">// \u4ECE\u6D41\u4E2D\u83B7\u53D6\u901A\u9053</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>channels<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GetChannel</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token string">&quot;data.txt&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> BSIZE <span class="token operator">=</span> <span class="token number">1024</span><span class="token punctuation">;</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5199\u5165\u4E00\u4E2A\u6587\u4EF6:</span>
    <span class="token keyword">try</span><span class="token punctuation">(</span>
      <span class="token class-name">FileChannel</span> fc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      fc<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token class-name">ByteBuffer</span>
        <span class="token punctuation">.</span><span class="token function">wrap</span><span class="token punctuation">(</span><span class="token string">&quot;Some text &quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5728\u6587\u4EF6\u5C3E\u6DFB\u52A0\uFF1A</span>
    <span class="token keyword">try</span><span class="token punctuation">(</span>
      <span class="token class-name">FileChannel</span> fc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RandomAccessFile</span><span class="token punctuation">(</span>
        name<span class="token punctuation">,</span> <span class="token string">&quot;rw&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      fc<span class="token punctuation">.</span><span class="token function">position</span><span class="token punctuation">(</span>fc<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u79FB\u52A8\u5230\u7ED3\u5C3E</span>
      fc<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token class-name">ByteBuffer</span>
        <span class="token punctuation">.</span><span class="token function">wrap</span><span class="token punctuation">(</span><span class="token string">&quot;Some more&quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u8BFB\u53D6\u6587\u4EF6e:</span>
    <span class="token keyword">try</span><span class="token punctuation">(</span>
      <span class="token class-name">FileChannel</span> fc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">ByteBuffer</span> buff <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span>BSIZE<span class="token punctuation">)</span><span class="token punctuation">;</span>
      fc<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buff<span class="token punctuation">)</span><span class="token punctuation">;</span>
      buff<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">while</span><span class="token punctuation">(</span>buff<span class="token punctuation">.</span><span class="token function">hasRemaining</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buff<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Some text Some more
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u6211\u4EEC\u8FD9\u91CC\u6240\u8BB2\u7684\u4EFB\u4F55\u6D41\u7C7B\uFF0C\u90FD\u53EF\u4EE5\u901A\u8FC7\u8C03\u7528 <code>getChannel( )</code> \u65B9\u6CD5\u751F\u6210\u4E00\u4E2A <strong>FileChannel</strong>\uFF08\u6587\u4EF6\u901A\u9053\uFF09\u3002<strong>FileChannel</strong> \u7684\u64CD\u4F5C\u76F8\u5F53\u57FA\u7840\uFF1A\u64CD\u4F5C <strong>ByteBuffer</strong> \u6765\u7528\u4E8E\u8BFB\u5199\uFF0C\u5E76\u72EC\u5360\u5F0F\u8BBF\u95EE\u548C\u9501\u5B9A\u6587\u4EF6\u533A\u57DF(\u7A0D\u540E\u5C06\u5BF9\u6B64\u8FDB\u884C\u63CF\u8FF0)\u3002</p><p>\u5C06\u5B57\u8282\u653E\u5165 <strong>ByteBuffer</strong> \u7684\u4E00\u79CD\u65B9\u6CD5\u662F\u76F4\u63A5\u8C03\u7528 <code>put()</code> \u65B9\u6CD5\u5C06\u4E00\u4E2A\u6216\u591A\u4E2A\u5B57\u8282\u653E\u5165 <strong>ByteBuffer</strong>\uFF1B\u5F53\u7136\u4E5F\u53EF\u4EE5\u662F\u5176\u5B83\u57FA\u672C\u7C7B\u578B\u7684\u6570\u636E\u3002\u6B64\u5916\uFF0C\u53C2\u8003\u4E0A\u4F8B\uFF0C\u6211\u4EEC\u8FD8\u53EF\u4EE5\u8C03\u7528 <code>wrap()</code> \u65B9\u6CD5\u5305\u88C5\u73B0\u6709\u5B57\u8282\u6570\u7EC4\u5230 <strong>ByteBuffer</strong>\u3002\u6267\u884C\u6B64\u64CD\u4F5C\u65F6\uFF0C\u4E0D\u4F1A\u590D\u5236\u5E95\u5C42\u6570\u7EC4\uFF0C\u800C\u662F\u5C06\u5176\u7528\u4F5C\u751F\u6210\u7684 <strong>ByteBuffer</strong> \u5B58\u50A8\u3002\u8FD9\u6837\u4EA7\u751F\u7684 <strong>ByteBuffer</strong> \u662F\u6570\u7EC4\u201C\u652F\u6301\u201D\u7684\u3002</p><p>data.txt \u6587\u4EF6\u88AB <strong>RandomAccessFile</strong> \u91CD\u65B0\u6253\u5F00\u3002<strong>\u6CE8\u610F</strong>\uFF0C\u4F60\u53EF\u4EE5\u5728\u6587\u4EF6\u4E2D\u79FB\u52A8 <strong>FileChannel</strong>\u3002 \u5728\u8FD9\u91CC\uFF0C\u5B83\u88AB\u79FB\u52A8\u5230\u672B\u5C3E\uFF0C\u4EE5\u4FBF\u6DFB\u52A0\u989D\u5916\u7684\u5199\u64CD\u4F5C\u3002</p><p>\u5BF9\u4E8E\u53EA\u8BFB\u8BBF\u95EE\uFF0C\u5FC5\u987B\u4F7F\u7528\u9759\u6001 <code>allocate()</code> \u65B9\u6CD5\u663E\u5F0F\u5730\u5206\u914D <strong>ByteBuffer</strong>\u3002<strong>NIO</strong> \u7684\u76EE\u6807\u662F\u5FEB\u901F\u79FB\u52A8\u5927\u91CF\u6570\u636E\uFF0C\u56E0\u6B64 <strong>ByteBuffer</strong> \u7684\u5927\u5C0F\u5E94\u8BE5\u5F88\u91CD\u8981 \u2014\u2014 \u5B9E\u9645\u4E0A\uFF0C\u8FD9\u91CC\u8BBE\u7F6E\u7684 1K \u90FD\u53EF\u80FD\u504F\u5C0F\u4E86(\u6211\u4EEC\u5728\u5DE5\u4F5C\u4E2D\u5E94\u8BE5\u53CD\u590D\u6D4B\u8BD5\u4EE5\u627E\u5230\u6700\u4F73\u5927\u5C0F)\u3002</p><p>\u901A\u8FC7\u4F7F\u7528 <code>allocateDirect()</code> \u800C\u4E0D\u662F <code>allocate()</code> \u6765\u751F\u6210\u4E0E\u64CD\u4F5C\u7CFB\u7EDF\u5177\u5907\u66F4\u9AD8\u8026\u5408\u5EA6\u7684\u201C\u76F4\u63A5\u201D\u7F13\u51B2\u533A\uFF0C\u4E5F\u6709\u53EF\u80FD\u83B7\u5F97\u66F4\u9AD8\u7684\u901F\u5EA6\u3002\u7136\u800C\uFF0C\u8FD9\u79CD\u5206\u914D\u7684\u5F00\u9500\u66F4\u5927\uFF0C\u800C\u4E14\u5B9E\u9645\u6548\u679C\u56E0\u64CD\u4F5C\u7CFB\u7EDF\u7684\u4E0D\u540C\u800C\u6709\u6240\u4E0D\u540C\uFF0C\u56E0\u6B64\uFF0C\u5728\u5DE5\u4F5C\u4E2D\u4F60\u5FC5\u987B\u518D\u6B21\u6D4B\u8BD5\u7A0B\u5E8F\uFF0C\u4EE5\u68C0\u9A8C\u76F4\u63A5\u7F13\u51B2\u533A\u662F\u5426\u80FD\u4E3A\u4F60\u5E26\u6765\u901F\u5EA6\u4E0A\u7684\u4F18\u52BF\u3002</p><p>\u4E00\u65E6\u8C03\u7528 <strong>FileChannel</strong> \u7C7B\u7684 <code>read()</code> \u65B9\u6CD5\u5C06\u5B57\u8282\u6570\u636E\u5B58\u50A8\u5230 <strong>ByteBuffer</strong> \u4E2D\uFF0C\u4F60\u8FD8\u5FC5\u987B\u8C03\u7528\u7F13\u51B2\u533A\u4E0A\u7684 <code>flip()</code> \u65B9\u6CD5\u6765\u51C6\u5907\u597D\u63D0\u53D6\u5B57\u8282\uFF08\u8FD9\u542C\u8D77\u6765\u6709\u70B9\u7C97\u7CD9\uFF0C\u5B9E\u9645\u4E0A\u8FD9\u5DF2\u662F\u975E\u5E38\u4F4E\u5C42\u7684\u64CD\u4F5C\uFF0C\u4E14\u4E3A\u4E86\u8FBE\u5230\u6700\u9AD8\u901F\u5EA6\uFF09\u3002\u5982\u679C\u8981\u8FDB\u4E00\u6B65\u8C03\u7528 <code>read()</code> \u6765\u4F7F\u7528 <strong>ByteBuffer</strong> \uFF0C\u8FD8\u9700\u8981\u6BCF\u6B21 <code>clear()</code> \u6765\u51C6\u5907\u7F13\u51B2\u533A\u3002\u4E0B\u9762\u662F\u4E2A\u7B80\u5355\u7684\u4EE3\u7801\u793A\u4F8B:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// newio/ChannelCopy.java</span>

<span class="token comment">// \u4F7F\u7528 channels and buffers \u79FB\u52A8\u6587\u4EF6</span>
<span class="token comment">// {java ChannelCopy ChannelCopy.java test.txt}</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>channels<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ChannelCopy</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> BSIZE <span class="token operator">=</span> <span class="token number">1024</span><span class="token punctuation">;</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>length <span class="token operator">!=</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
        <span class="token string">&quot;arguments: sourcefile destfile&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">try</span><span class="token punctuation">(</span>
      <span class="token class-name">FileChannel</span> in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>
        args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">FileChannel</span> out <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>
        args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">ByteBuffer</span> buffer <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span>BSIZE<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">while</span><span class="token punctuation">(</span>in<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        buffer<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u51C6\u5907\u5199\u5165</span>
        out<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
        buffer<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u51C6\u5907\u8BFB\u53D6</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u7B2C\u4E00\u4E2AFileChannel</strong> \u7528\u4E8E\u8BFB\u53D6\uFF1B<strong>\u7B2C\u4E8C\u4E2AFileChannel</strong> \u7528\u4E8E\u5199\u5165\u3002\u5F53 <strong>ByteBuffer</strong> \u5206\u914D\u597D\u5B58\u50A8\uFF0C\u8C03\u7528 <strong>FileChannel</strong> \u7684 <code>read()</code> \u65B9\u6CD5\u8FD4\u56DE <strong>-1</strong>\uFF08\u6BEB\u65E0\u7591\u95EE\uFF0C\u8FD9\u662F\u6765\u6E90\u4E8E Unix \u548C C \u8BED\u8A00\uFF09\u65F6\uFF0C\u8BF4\u660E\u8F93\u5165\u6D41\u8BFB\u53D6\u5B8C\u4E86\u3002\u5728\u6BCF\u6B21 <code>read()</code> \u5C06\u6570\u636E\u653E\u5165\u7F13\u51B2\u533A\u4E4B\u540E\uFF0C<code>flip()</code> \u90FD\u4F1A\u51C6\u5907\u597D\u7F13\u51B2\u533A\uFF0C\u4EE5\u4FBF <code>write()</code> \u63D0\u53D6\u5B83\u7684\u4FE1\u606F\u3002\u5728 <code>write()</code> \u4E4B\u540E\uFF0C\u6570\u636E\u4ECD\u7136\u5728\u7F13\u51B2\u533A\u4E2D\uFF0C\u6211\u4EEC\u9700\u8981 <code>clear()</code> \u6765\u91CD\u7F6E\u6240\u6709\u5185\u90E8\u6307\u9488\uFF0C\u4EE5\u4FBF\u5728\u4E0B\u4E00\u6B21 <code>read()</code> \u4E2D\u63A5\u53D7\u6570\u636E\u3002</p><p>\u4F46\u662F\uFF0C\u4E0A\u4F8B\u5E76\u4E0D\u662F\u5904\u7406\u8FD9\u79CD\u64CD\u4F5C\u7684\u7406\u60F3\u65B9\u6CD5\u3002\u65B9\u6CD5 <code>transferTo()</code> \u548C <code>transferFrom()</code> \u5141\u8BB8\u4F60\u76F4\u63A5\u8FDE\u63A5\u6B64\u901A\u9053\u5230\u5F7C\u901A\u9053\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// newio/TransferTo.java</span>

<span class="token comment">// \u4F7F\u7528 transferTo() \u5728\u901A\u9053\u95F4\u4F20\u8F93</span>
<span class="token comment">// {java TransferTo TransferTo.java TransferTo.txt}</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>channels<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TransferTo</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>length <span class="token operator">!=</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
        <span class="token string">&quot;arguments: sourcefile destfile&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">try</span><span class="token punctuation">(</span>
      <span class="token class-name">FileChannel</span> in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>
        args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">FileChannel</span> out <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>
        args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      in<span class="token punctuation">.</span><span class="token function">transferTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> in<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> out<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// Or:</span>
      <span class="token comment">// out.transferFrom(in, 0, in.size());</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u80FD\u4E0D\u4F1A\u7ECF\u5E38\u7528\u5230\uFF0C\u4F46\u77E5\u9053\u8FD9\u4E00\u70B9\u5F88\u597D\u3002</p><h2 id="\u6570\u636E\u8F6C\u6362" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u8F6C\u6362" aria-hidden="true">#</a> \u6570\u636E\u8F6C\u6362</h2><p>\u4E3A\u4E86\u5C06 <strong>GetChannel.java</strong> \u6587\u4EF6\u4E2D\u7684\u4FE1\u606F\u6253\u5370\u51FA\u6765\u3002\u5728 Java \u4E2D\uFF0C\u6211\u4EEC\u6BCF\u6B21\u63D0\u53D6\u4E00\u4E2A\u5B57\u8282\u7684\u6570\u636E\u5E76\u5C06\u5176\u8F6C\u6362\u4E3A\u5B57\u7B26\u3002\u770B\u8D77\u6765\u5F88\u7B80\u5355 \u2014\u2014 \u5982\u679C\u4F60\u6709\u770B\u8FC7 <code>java.nio.</code><strong>CharBuffer</strong> \u7C7B\uFF0C\u4F60\u4F1A\u53D1\u73B0\u4E00\u4E2A <code>toString()</code> \u65B9\u6CD5\u3002\u8BE5\u65B9\u6CD5\u7684\u4F5C\u7528\u662F\u201C\u8FD4\u56DE\u4E00\u4E2A\u5305\u542B\u6B64\u7F13\u51B2\u533A\u5B57\u7B26\u7684\u5B57\u7B26\u4E32\u201D\u3002</p><p>\u65E2\u7136 <strong>ByteBuffer</strong> \u53EF\u4EE5\u901A\u8FC7 <strong>CharBuffer</strong> \u7C7B\u7684 <code>asCharBuffer()</code> \u65B9\u6CD5\u67E5\u770B\uFF0C\u90A3\u6211\u4EEC\u5C31\u6765\u5C1D\u8BD5\u4E00\u6837\u3002\u4ECE\u4E0B\u9762\u8F93\u51FA\u8BED\u53E5\u7684\u7B2C\u4E00\u884C\u53EF\u4EE5\u770B\u51FA\uFF0C\u8FD9\u5E76\u4E0D\u6B63\u786E\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// newio/BufferToText.java</span>
<span class="token comment">// (c)2017 MindView LLC: see Copyright.txt</span>
<span class="token comment">// \u6211\u4EEC\u65E0\u6CD5\u4FDD\u8BC1\u8BE5\u4EE3\u7801\u662F\u5426\u9002\u7528\u4E8E\u5176\u4ED6\u7528\u9014\u3002</span>
<span class="token comment">// \u8BBF\u95EE http://OnJava8.com \u4E86\u89E3\u66F4\u591A\u672C\u4E66\u4FE1\u606F\u3002</span>
<span class="token comment">// text \u548C ByteBuffers \u4E92\u8F6C</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>channels<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BufferToText</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> BSIZE <span class="token operator">=</span> <span class="token number">1024</span><span class="token punctuation">;</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token keyword">try</span><span class="token punctuation">(</span>
      <span class="token class-name">FileChannel</span> fc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>
        <span class="token string">&quot;data2.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      fc<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">wrap</span><span class="token punctuation">(</span><span class="token string">&quot;Some text&quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token class-name">ByteBuffer</span> buff <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span>BSIZE<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">try</span><span class="token punctuation">(</span>
      <span class="token class-name">FileChannel</span> fc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>
        <span class="token string">&quot;data2.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      fc<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buff<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    buff<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u65E0\u6CD5\u8FD0\u884C</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>buff<span class="token punctuation">.</span><span class="token function">asCharBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u4F7F\u7528\u9ED8\u8BA4\u7CFB\u7EDF\u9ED8\u8BA4\u7F16\u7801\u89E3\u7801</span>
    buff<span class="token punctuation">.</span><span class="token function">rewind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> encoding <span class="token operator">=</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;file.encoding&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Decoded using &quot;</span> <span class="token operator">+</span>
      encoding <span class="token operator">+</span> <span class="token string">&quot;: &quot;</span>
      <span class="token operator">+</span> <span class="token class-name">Charset</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>encoding<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>buff<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u7F16\u7801\u548C\u6253\u5370</span>
    <span class="token keyword">try</span><span class="token punctuation">(</span>
      <span class="token class-name">FileChannel</span> fc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>
        <span class="token string">&quot;data2.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      fc<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">wrap</span><span class="token punctuation">(</span>
        <span class="token string">&quot;Some text&quot;</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-16BE&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u5C1D\u8BD5\u518D\u6B21\u8BFB\u53D6\uFF1A</span>
    buff<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span><span class="token punctuation">(</span>
      <span class="token class-name">FileChannel</span> fc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>
        <span class="token string">&quot;data2.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      fc<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buff<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    buff<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>buff<span class="token punctuation">.</span><span class="token function">asCharBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u901A\u8FC7 CharBuffer \u5199\u5165\uFF1A</span>
    buff <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    buff<span class="token punctuation">.</span><span class="token function">asCharBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;Some text&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">try</span><span class="token punctuation">(</span>
      <span class="token class-name">FileChannel</span> fc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>
        <span class="token string">&quot;data2.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      fc<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buff<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u8BFB\u53D6\u548C\u663E\u793A\uFF1A</span>
    buff<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">try</span><span class="token punctuation">(</span>
      <span class="token class-name">FileChannel</span> fc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>
        <span class="token string">&quot;data2.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      fc<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buff<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    buff<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>buff<span class="token punctuation">.</span><span class="token function">asCharBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>????
Decoded using windows-1252: Some text
Some text
Some textNULNULNUL
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7F13\u51B2\u533A\u5305\u542B\u666E\u901A\u5B57\u8282\uFF0C\u4E3A\u4E86\u5C06\u8FD9\u4E9B\u5B57\u8282\u8F6C\u6362\u4E3A\u5B57\u7B26\uFF0C\u6211\u4EEC\u5FC5\u987B\u5728\u8F93\u5165\u65F6\u5BF9\u5B83\u4EEC\u8FDB\u884C\u7F16\u7801(\u8FD9\u6837\u5B83\u4EEC\u8F93\u51FA\u65F6\u5C31\u6709\u610F\u4E49\u4E86)\uFF0C\u6216\u8005\u5728\u8F93\u51FA\u65F6\u5BF9\u5B83\u4EEC\u8FDB\u884C\u89E3\u7801\u3002\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528 <code>java.nio.charset.</code><strong>Charset</strong> \u5B57\u7B26\u96C6\u5DE5\u5177\u7C7B\u6765\u5B8C\u6210\u3002\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// newio/AvailableCharSets.java</span>
<span class="token comment">// (c)2017 MindView LLC: see Copyright.txt</span>
<span class="token comment">// \u6211\u4EEC\u65E0\u6CD5\u4FDD\u8BC1\u8BE5\u4EE3\u7801\u662F\u5426\u9002\u7528\u4E8E\u5176\u4ED6\u7528\u9014\u3002</span>
<span class="token comment">// \u8BBF\u95EE http://OnJava8.com \u4E86\u89E3\u66F4\u591A\u672C\u4E66\u4FE1\u606F\u3002</span>
<span class="token comment">// \u5C55\u793A Charsets \u548C aliases</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>charset<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AvailableCharSets</span> <span class="token punctuation">{</span>

  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">SortedMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Charset</span><span class="token punctuation">&gt;</span></span> charSets <span class="token operator">=</span>
      <span class="token class-name">Charset</span><span class="token punctuation">.</span><span class="token function">availableCharsets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">String</span> csName <span class="token operator">:</span> charSets<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>csName<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">Iterator</span> aliases <span class="token operator">=</span> charSets<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>csName<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">aliases</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>aliases<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
      <span class="token keyword">while</span><span class="token punctuation">(</span>aliases<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>aliases<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>aliases<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
          <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;, &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Big5: csBig5
Big5-HKSCS: big5-hkscs, big5hk, Big5_HKSCS, big5hkscs
CESU-8: CESU8, csCESU-8
EUC-JP: csEUCPkdFmtjapanese, x-euc-jp, eucjis,
Extended_UNIX_Code_Packed_Format_for_Japanese, euc_jp,
eucjp, x-eucjp
EUC-KR: ksc5601-1987, csEUCKR, ksc5601_1987, ksc5601,
5601,
euc_kr, ksc_5601, ks_c_5601-1987, euckr
GB18030: gb18030-2000
GB2312: gb2312, euc-cn, x-EUC-CN, euccn, EUC_CN,
gb2312-80,
gb2312-1980
                  ...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56DE\u5230 <strong>BufferToText.java</strong> \u4E2D\uFF0C\u5982\u679C\u4F60 <code>rewind()</code> \u7F13\u51B2\u533A\uFF08\u56DE\u5230\u6570\u636E\u7684\u5F00\u5934\uFF09\uFF0C\u4F7F\u7528\u8BE5\u5E73\u53F0\u7684\u9ED8\u8BA4\u5B57\u7B26\u96C6 <code>decode()</code> \u6570\u636E\uFF0C\u90A3\u4E48\u751F\u6210\u7684 <strong>CharBuffer</strong> \u6570\u636E\u5C06\u5728\u63A7\u5236\u53F0\u4E0A\u6B63\u5E38\u663E\u793A\u3002\u53EF\u4EE5\u901A\u8FC7 <code>System.getProperty(\u201Cfile.encoding\u201D)</code> \u65B9\u6CD5\u6765\u67E5\u770B\u5E73\u53F0\u9ED8\u8BA4\u5B57\u7B26\u96C6\u540D\u79F0\u3002\u4F20\u9012\u8BE5\u540D\u79F0\u53C2\u6570\u5230 <code>Charset.forName()</code> \u65B9\u6CD5\u53EF\u4EE5\u751F\u6210\u5BF9\u5E94\u7684 <code>Charset</code> \u5BF9\u8C61\u7528\u4E8E\u89E3\u7801\u5B57\u7B26\u4E32\u3002</p><p>\u53E6\u4E00\u79CD\u65B9\u6CD5\u662F\u4F7F\u7528\u5B57\u7B26\u96C6 <code>encode()</code> \u65B9\u6CD5\uFF0C\u8BE5\u5B57\u7B26\u96C6\u5728\u8BFB\u53D6\u6587\u4EF6\u65F6\u751F\u6210\u53EF\u6253\u5370\u7684\u5185\u5BB9\uFF0C\u5982\u4F60\u5728 <strong>BufferToText.java</strong> \u7684\u7B2C\u4E09\u90E8\u5206\u4E2D\u6240\u770B\u5230\u7684\u3002\u4E0A\u4F8B\u4E2D\uFF0C<strong>UTF-16BE</strong> \u88AB\u7528\u4E8E\u5C06\u6587\u672C\u5199\u5165\u6587\u4EF6\uFF0C\u5F53\u6587\u672C\u88AB\u8BFB\u53D6\u65F6\uFF0C\u4F60\u6240\u8981\u505A\u7684\u5C31\u662F\u5C06\u5176\u8F6C\u6362\u4E3A <strong>CharBuffer</strong>\uFF0C\u5E76\u751F\u6210\u9884\u671F\u7684\u6587\u672C\u3002</p><p>\u6700\u540E\uFF0C\u5982\u679C\u5C06 <strong>CharBuffer</strong> \u5199\u5165 <strong>ByteBuffer</strong>\uFF0C\u4F60\u4F1A\u770B\u5230\u53D1\u751F\u4E86\u4EC0\u4E48(\u66F4\u591A\u8BE6\u60C5\uFF0C\u7A0D\u540E\u4E86\u89E3)\u3002<strong>\u6CE8\u610F</strong>\uFF0C\u4E3A <strong>ByteBuffer</strong> \u5206\u914D\u4E8624\u4E2A\u5B57\u8282\uFF0C\u6309\u7167\u6BCF\u4E2A\u5B57\u7B26\u5360\u7528 2 \u4E2A\u81EA\u5B57\u8282\uFF0C 12 \u4E2A\u5B57\u7B26\u7684\u7A7A\u95F4\u5DF2\u7ECF\u8DB3\u591F\u4E86\u3002\u7531\u4E8E\u201Csome text\u201D\u53EA\u6709 9 \u4E2A\u5B57\u7B26\uFF0C\u53D7\u5176 <code>toString()</code> \u65B9\u6CD5\u5F71\u54CD\uFF0C\u5269\u4E0B\u7684 0 \u5B57\u8282\u90E8\u5206\u4E5F\u51FA\u73B0\u5728\u4E86 <strong>CharBuffer</strong> \u7684\u5C55\u793A\u4E2D\uFF0C\u5982\u8F93\u51FA\u6240\u793A\u3002</p><h2 id="\u57FA\u672C\u7C7B\u578B\u83B7\u53D6" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u7C7B\u578B\u83B7\u53D6" aria-hidden="true">#</a> \u57FA\u672C\u7C7B\u578B\u83B7\u53D6</h2><p>\u867D\u7136 <strong>ByteBuffer</strong> \u53EA\u5305\u542B\u5B57\u8282\uFF0C\u4F46\u5B83\u5305\u542B\u4E86\u4E00\u4E9B\u65B9\u6CD5\uFF0C\u7528\u4E8E\u4ECE\u5176\u6240\u5305\u542B\u7684\u5B57\u8282\u4E2D\u751F\u6210\u5404\u79CD\u4E0D\u540C\u7684\u57FA\u672C\u7C7B\u578B\u6570\u636E\u3002\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// newio/GetData.java</span>
<span class="token comment">// (c)2017 MindView LLC: see Copyright.txt</span>
<span class="token comment">// \u6211\u4EEC\u65E0\u6CD5\u4FDD\u8BC1\u8BE5\u4EE3\u7801\u662F\u5426\u9002\u7528\u4E8E\u5176\u4ED6\u7528\u9014\u3002</span>
<span class="token comment">// \u8BBF\u95EE http://OnJava8.com \u4E86\u89E3\u66F4\u591A\u672C\u4E66\u4FE1\u606F\u3002</span>
<span class="token comment">// \u4ECE ByteBuffer \u4E2D\u83B7\u53D6\u4E0D\u540C\u7684\u6570\u636E\u5C55\u793A</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GetData</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> BSIZE <span class="token operator">=</span> <span class="token number">1024</span><span class="token punctuation">;</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ByteBuffer</span> bb <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span>BSIZE<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u81EA\u52A8\u5206\u914D 0 \u5230 ByteBuffer:</span>
    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>i<span class="token operator">++</span> <span class="token operator">&lt;</span> bb<span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>bb<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;nonzero&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;i = &quot;</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    bb<span class="token punctuation">.</span><span class="token function">rewind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u4FDD\u5B58\u548C\u8BFB\u53D6 char \u6570\u7EC4:</span>
    bb<span class="token punctuation">.</span><span class="token function">asCharBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;Howdy!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">char</span> c<span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>c <span class="token operator">=</span> bb<span class="token punctuation">.</span><span class="token function">getChar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>c <span class="token operator">+</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    bb<span class="token punctuation">.</span><span class="token function">rewind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u4FDD\u5B58\u548C\u8BFB\u53D6 short:</span>
    bb<span class="token punctuation">.</span><span class="token function">asShortBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span><span class="token number">471142</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>bb<span class="token punctuation">.</span><span class="token function">getShort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    bb<span class="token punctuation">.</span><span class="token function">rewind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u4FDD\u5B58\u548C\u8BFB\u53D6 int:</span>
    bb<span class="token punctuation">.</span><span class="token function">asIntBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token number">99471142</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>bb<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    bb<span class="token punctuation">.</span><span class="token function">rewind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u4FDD\u5B58\u548C\u8BFB\u53D6 long:</span>
    bb<span class="token punctuation">.</span><span class="token function">asLongBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token number">99471142</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>bb<span class="token punctuation">.</span><span class="token function">getLong</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    bb<span class="token punctuation">.</span><span class="token function">rewind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u4FDD\u5B58\u548C\u8BFB\u53D6 float:</span>
    bb<span class="token punctuation">.</span><span class="token function">asFloatBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token number">99471142</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>bb<span class="token punctuation">.</span><span class="token function">getFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    bb<span class="token punctuation">.</span><span class="token function">rewind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u4FDD\u5B58\u548C\u8BFB\u53D6 double:</span>
    bb<span class="token punctuation">.</span><span class="token function">asDoubleBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token number">99471142</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>bb<span class="token punctuation">.</span><span class="token function">getDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    bb<span class="token punctuation">.</span><span class="token function">rewind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>i = 1025
H o w d y !
12390
99471142
99471142
9.9471144E7
9.9471142E7
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u5206\u914D <strong>ByteBuffer</strong> \u4E4B\u540E\uFF0C\u6211\u4EEC\u68C0\u67E5\u5E76\u786E\u8BA4\u5B83\u7684 1,024 \u5143\u7D20\u88AB\u521D\u59CB\u5316\u4E3A 0\u3002\uFF08\u622A\u81F3\u5230\u8FBE <code>limit()</code> \u7ED3\u679C\u7684\u4F4D\u7F6E\uFF09\u3002</p><p>\u5C06\u57FA\u672C\u7C7B\u578B\u6570\u636E\u63D2\u5165 <strong>ByteBuffer</strong> \u7684\u6700\u7B80\u5355\u65B9\u6CD5\u5C31\u662F\u4F7F\u7528 <code>asCharBuffer()</code>\u3001<code>asShortBuffer()</code> \u7B49\u65B9\u6CD5\u83B7\u53D6\u8BE5\u7F13\u51B2\u533A\u9002\u5F53\u7684\u201C\u89C6\u56FE\u201D\uFF08View\uFF09\uFF0C\u7136\u540E\u8C03\u7528\u8BE5\u201C\u89C6\u56FE\u201D\u7684 <code>put()</code> \u65B9\u6CD5\u3002</p><p>\u8FD9\u662F\u9488\u5BF9\u6BCF\u79CD\u57FA\u672C\u6570\u636E\u7C7B\u578B\u6267\u884C\u7684\u3002\u5176\u4E2D\u552F\u4E00\u6709\u70B9\u5947\u602A\u7684\u662F <strong>ShortBuffer</strong> \u7684 <code>put()</code>\uFF0C\u5B83\u9700\u8981\u7C7B\u578B\u5F3A\u5236\u8F6C\u6362\u3002\u5176\u4ED6\u89C6\u56FE\u7F13\u51B2\u533A\u4E0D\u9700\u8981\u5728\u5176 <code>put()</code> \u65B9\u6CD5\u4E2D\u8FDB\u884C\u8F6C\u6362\u3002</p><h2 id="\u89C6\u56FE\u7F13\u51B2\u533A" tabindex="-1"><a class="header-anchor" href="#\u89C6\u56FE\u7F13\u51B2\u533A" aria-hidden="true">#</a> \u89C6\u56FE\u7F13\u51B2\u533A</h2><p>\u201C\u89C6\u56FE\u7F13\u51B2\u533A\u201D\uFF08view buffer\uFF09\u662F\u901A\u8FC7\u7279\u5B9A\u7684\u57FA\u672C\u7C7B\u578B\u7684\u7A97\u53E3\u6765\u67E5\u770B\u5E95\u5C42 <strong>ByteBuffer</strong>\u3002<strong>ByteBuffer</strong> \u4ECD\u7136\u662F\u201C\u652F\u6301\u201D\u89C6\u56FE\u7684\u5B9E\u9645\u5B58\u50A8\uFF0C\u56E0\u6B64\u5BF9\u89C6\u56FE\u6240\u505A\u7684\u4EFB\u4F55\u66F4\u6539\u90FD\u53CD\u6620\u5728\u5BF9 <strong>ByteBuffer</strong> \u4E2D\u7684\u6570\u636E\u7684\u4FEE\u6539\u4E2D\u3002</p><p>\u5982\u524D\u9762\u7684\u793A\u4F8B\u6240\u793A\uFF0C\u8FD9\u65B9\u4FBF\u5730\u5C06\u57FA\u672C\u7C7B\u578B\u63D2\u5165 <strong>ByteBuffer</strong>\u3002\u89C6\u56FE\u7F13\u51B2\u533A\u8FD8\u53EF\u4EE5\u4ECE <strong>ByteBuffer</strong> \u8BFB\u53D6\u57FA\u672C\u7C7B\u578B\u6570\u636E\uFF0C\u6BCF\u6B21\u5355\u4E2A\uFF08<strong>ByteBuffer</strong> \u89C4\u5B9A\uFF09\uFF0C\u6216\u8005\u6279\u91CF\u8BFB\u53D6\u5230\u6570\u7EC4\u3002\u4E0B\u9762\u662F\u4E00\u4E2A\u901A\u8FC7 <strong>IntBuffer</strong> \u5728 <strong>ByteBuffer</strong> \u4E2D\u64CD\u4F5C <strong>int</strong> \u7684\u4F8B\u5B50\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// newio/IntBufferDemo.java</span>
<span class="token comment">// (c)2017 MindView LLC: see Copyright.txt</span>
<span class="token comment">// \u6211\u4EEC\u65E0\u6CD5\u4FDD\u8BC1\u8BE5\u4EE3\u7801\u662F\u5426\u9002\u7528\u4E8E\u5176\u4ED6\u7528\u9014\u3002</span>
<span class="token comment">// \u8BBF\u95EE http://OnJava8.com \u4E86\u89E3\u66F4\u591A\u672C\u4E66\u4FE1\u606F\u3002</span>
<span class="token comment">// \u5229\u7528 IntBuffer \u4FDD\u5B58 int \u6570\u636E\u5230 ByteBuffer</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IntBufferDemo</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> BSIZE <span class="token operator">=</span> <span class="token number">1024</span><span class="token punctuation">;</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ByteBuffer</span> bb <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span>BSIZE<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">IntBuffer</span> ib <span class="token operator">=</span> bb<span class="token punctuation">.</span><span class="token function">asIntBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u4FDD\u5B58 int \u6570\u7EC4\uFF1A</span>
    ib<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">47</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token number">143</span><span class="token punctuation">,</span> <span class="token number">811</span><span class="token punctuation">,</span> <span class="token number">1016</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//\u7EDD\u5BF9\u4F4D\u7F6E\u8BFB\u5199\uFF1A</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ib<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ib<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1811</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5728\u91CD\u7F6E\u7F13\u51B2\u533A\u524D\u8BBE\u7F6E\u65B0\u7684\u9650\u5236</span>
    
    ib<span class="token punctuation">.</span><span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>ib<span class="token punctuation">.</span><span class="token function">hasRemaining</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">int</span> i <span class="token operator">=</span> ib<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>99
11
42
47
1811
143
811
1016
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>put()</code> \u65B9\u6CD5\u91CD\u8F7D\uFF0C\u9996\u5148\u7528\u4E8E\u5B58\u50A8 <strong>int</strong> \u6570\u7EC4\u3002\u4E0B\u9762\u7684 <code>get()</code> \u548C <code>put()</code> \u65B9\u6CD5\u8C03\u7528\u76F4\u63A5\u8BBF\u95EE\u5E95\u5C42 <strong>ByteBuffer</strong> \u4E2D\u7684 <strong>int</strong> \u4F4D\u7F6E\u3002<strong>\u6CE8\u610F</strong>\uFF0C\u901A\u8FC7\u76F4\u63A5\u64CD\u4F5C <strong>ByteBuffer</strong> \uFF0C\u8FD9\u4E9B\u7EDD\u5BF9\u4F4D\u7F6E\u8BBF\u95EE\u4E5F\u53EF\u4EE5\u7528\u4E8E\u57FA\u672C\u7C7B\u578B\u3002</p><p>\u4E00\u65E6\u5E95\u5C42 <strong>ByteBuffer</strong> \u901A\u8FC7\u89C6\u56FE\u7F13\u51B2\u533A\u586B\u5145\u4E86 <strong>int</strong> \u6216\u5176\u4ED6\u57FA\u672C\u7C7B\u578B\uFF0C\u90A3\u4E48\u5C31\u53EF\u4EE5\u76F4\u63A5\u5C06\u8BE5 <strong>ByteBuffer</strong> \u5199\u5165\u901A\u9053\u3002\u4F60\u53EF\u4EE5\u8F7B\u677E\u5730\u4ECE\u901A\u9053\u8BFB\u53D6\u6570\u636E\uFF0C\u5E76\u4F7F\u7528\u89C6\u56FE\u7F13\u51B2\u533A\u5C06\u6240\u6709\u5185\u5BB9\u8F6C\u6362\u4E3A\u7279\u5B9A\u7684\u57FA\u672C\u7C7B\u578B\u3002\u4E0B\u9762\u662F\u4E00\u4E2A\u4F8B\u5B50\uFF0C\u901A\u8FC7\u5728\u540C\u4E00\u4E2A <strong>ByteBuffer</strong> \u4E0A\u751F\u6210\u4E0D\u540C\u7684\u89C6\u56FE\u7F13\u51B2\u533A\uFF0C\u5C06\u76F8\u540C\u7684\u5B57\u8282\u5E8F\u5217\u89E3\u91CA\u4E3A <strong>short</strong>\u3001<strong>int</strong>\u3001<strong>float</strong>\u3001<strong>long</strong> \u548C <strong>double</strong>\u3002\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// newio/ViewBuffers.java</span>
<span class="token comment">// (c)2017 MindView LLC: see Copyright.txt</span>
<span class="token comment">// \u6211\u4EEC\u65E0\u6CD5\u4FDD\u8BC1\u8BE5\u4EE3\u7801\u662F\u5426\u9002\u7528\u4E8E\u5176\u4ED6\u7528\u9014\u3002</span>
<span class="token comment">// \u8BBF\u95EE http://OnJava8.com \u4E86\u89E3\u66F4\u591A\u672C\u4E66\u4FE1\u606F\u3002</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ViewBuffers</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ByteBuffer</span> bb <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">wrap</span><span class="token punctuation">(</span>
      <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token char">&#39;a&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    bb<span class="token punctuation">.</span><span class="token function">rewind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Byte Buffer &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>bb<span class="token punctuation">.</span><span class="token function">hasRemaining</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>
        bb<span class="token punctuation">.</span><span class="token function">position</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span> <span class="token string">&quot; -&gt; &quot;</span> <span class="token operator">+</span> bb<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;, &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">CharBuffer</span> cb <span class="token operator">=</span>
      <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ByteBuffer</span><span class="token punctuation">)</span>bb<span class="token punctuation">.</span><span class="token function">rewind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asCharBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Char Buffer &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>cb<span class="token punctuation">.</span><span class="token function">hasRemaining</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>
        cb<span class="token punctuation">.</span><span class="token function">position</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; -&gt; &quot;</span> <span class="token operator">+</span> cb<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;, &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">FloatBuffer</span> fb <span class="token operator">=</span>
      <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ByteBuffer</span><span class="token punctuation">)</span>bb<span class="token punctuation">.</span><span class="token function">rewind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asFloatBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Float Buffer &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>fb<span class="token punctuation">.</span><span class="token function">hasRemaining</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>
        fb<span class="token punctuation">.</span><span class="token function">position</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span> <span class="token string">&quot; -&gt; &quot;</span> <span class="token operator">+</span> fb<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;, &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">IntBuffer</span> ib <span class="token operator">=</span>
      <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ByteBuffer</span><span class="token punctuation">)</span>bb<span class="token punctuation">.</span><span class="token function">rewind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asIntBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Int Buffer &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>ib<span class="token punctuation">.</span><span class="token function">hasRemaining</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>
        ib<span class="token punctuation">.</span><span class="token function">position</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span> <span class="token string">&quot; -&gt; &quot;</span> <span class="token operator">+</span> ib<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;, &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">LongBuffer</span> lb <span class="token operator">=</span>
      <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ByteBuffer</span><span class="token punctuation">)</span>bb<span class="token punctuation">.</span><span class="token function">rewind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asLongBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Long Buffer &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>lb<span class="token punctuation">.</span><span class="token function">hasRemaining</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>
        lb<span class="token punctuation">.</span><span class="token function">position</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span> <span class="token string">&quot; -&gt; &quot;</span> <span class="token operator">+</span> lb<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;, &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">ShortBuffer</span> sb <span class="token operator">=</span>
      <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ByteBuffer</span><span class="token punctuation">)</span>bb<span class="token punctuation">.</span><span class="token function">rewind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asShortBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Short Buffer &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>sb<span class="token punctuation">.</span><span class="token function">hasRemaining</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>
        sb<span class="token punctuation">.</span><span class="token function">position</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span> <span class="token string">&quot; -&gt; &quot;</span> <span class="token operator">+</span> sb<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;, &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">DoubleBuffer</span> db <span class="token operator">=</span>
      <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ByteBuffer</span><span class="token punctuation">)</span>bb<span class="token punctuation">.</span><span class="token function">rewind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asDoubleBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Double Buffer &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>db<span class="token punctuation">.</span><span class="token function">hasRemaining</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>
        db<span class="token punctuation">.</span><span class="token function">position</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span> <span class="token string">&quot; -&gt; &quot;</span> <span class="token operator">+</span> db<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;, &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Byte Buffer 0 -&gt; 0, 1 -&gt; 0, 2 -&gt; 0, 3 -&gt; 0, 4 -&gt; 0, 5
-&gt; 0, 6 -&gt; 0, 7 -&gt; 97,
Char Buffer 0 -&gt; NUL, 1 -&gt; NUL, 2 -&gt; NUL, 3 -&gt; a,
Float Buffer 0 -&gt; 0.0, 1 -&gt; 1.36E-43,
Int Buffer 0 -&gt; 0, 1 -&gt; 97,
Long Buffer 0 -&gt; 97,
Short Buffer 0 -&gt; 0, 1 -&gt; 0, 2 -&gt; 0, 3 -&gt; 97,
Double Buffer 0 -&gt; 4.8E-322,
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>ByteBuffer</strong> \u901A\u8FC7\u201C\u5305\u88C5\u201D\u4E00\u4E2A 8 \u5B57\u8282\u6570\u7EC4\u751F\u6210\uFF0C\u7136\u540E\u901A\u8FC7\u6240\u6709\u4E0D\u540C\u57FA\u672C\u7C7B\u578B\u7684\u89C6\u56FE\u7F13\u51B2\u533A\u663E\u793A\u8BE5\u6570\u7EC4\u3002\u4E0B\u56FE\u663E\u793A\u4E86\u4ECE\u4E0D\u540C\u7C7B\u578B\u7684\u7F13\u51B2\u533A\u8BFB\u53D6\u6570\u636E\u65F6\uFF0C\u6570\u636E\u663E\u793A\u7684\u5DEE\u5F02\uFF1A</p><p><img src="`+u+'" alt="1554546258113"></p><h3 id="\u5B57\u8282\u5B58\u50A8\u6B21\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5B57\u8282\u5B58\u50A8\u6B21\u5E8F" aria-hidden="true">#</a> \u5B57\u8282\u5B58\u50A8\u6B21\u5E8F</h3><p>\u4E0D\u540C\u7684\u673A\u5668\u53EF\u4EE5\u4F7F\u7528\u4E0D\u540C\u7684\u5B57\u8282\u5B58\u50A8\u987A\u5E8F\uFF08Endians\uFF09\u6765\u5B58\u50A8\u6570\u636E\u3002\u201C\u9AD8\u4F4D\u4F18\u5148\u201D\uFF08Big Endian\uFF09\uFF1A\u5C06\u6700\u91CD\u8981\u7684\u5B57\u8282\u653E\u5728\u6700\u4F4E\u5185\u5B58\u5730\u5740\u4E2D\uFF0C\u800C\u201C\u4F4E\u4F4D\u4F18\u5148\u201D\uFF08Little Endian\uFF09\uFF1A\u5C06\u6700\u91CD\u8981\u7684\u5B57\u8282\u653E\u5728\u6700\u9AD8\u5185\u5B58\u5730\u5740\u4E2D\u3002</p><p>\u5F53\u5B58\u50A8\u5927\u4E8E\u5355\u5B57\u8282\u7684\u6570\u636E\u65F6\uFF0C\u5982 <strong>int</strong>\u3001<strong>float</strong> \u7B49\uFF0C\u6211\u4EEC\u53EF\u80FD\u9700\u8981\u8003\u8651\u5B57\u8282\u6392\u5E8F\u95EE\u9898\u3002<strong>ByteBuffer</strong> \u4EE5\u201C\u9AD8\u4F4D\u4F18\u5148\u201D\u5F62\u5F0F\u5B58\u50A8\u6570\u636E\uFF1B\u901A\u8FC7\u7F51\u7EDC\u53D1\u9001\u7684\u6570\u636E\u603B\u662F\u4F7F\u7528\u201C\u9AD8\u4F4D\u4F18\u5148\u201D\u5F62\u5F0F\u3002\u6211\u4EEC\u53EF\u4EE5 \u4F7F\u7528 <strong>ByteOrder</strong> \u7684 <code>order()</code> \u65B9\u6CD5\u548C\u53C2\u6570 <strong>ByteOrder.BIG_ENDIAN</strong> \u6216 <strong>ByteOrder.LITTLE_ENDIAN</strong> \u6765\u6539\u53D8\u5B83\u7684\u5B57\u8282\u5B58\u50A8\u6B21\u5E8F\u3002</p><p>\u4E0B\u4F8B\u662F\u4E00\u4E2A\u5305\u542B\u4E24\u4E2A\u5B57\u8282\u7684 <strong>ByteBuffer</strong> \uFF1A</p><p><img src="'+k+`" alt="1554546378822"></p><p>\u5C06\u6570\u636E\u4F5C\u4E3A <strong>short</strong> \u578B\u6765\u8BFB\u53D6\uFF08<code>ByteBuffer.asshortbuffer()</code>)\uFF09\uFF0C\u751F\u6210\u6570\u5B57 97 \uFF0800000000 01100001\uFF09\u3002\u66F4\u6539\u4E3A\u201C\u4F4E\u4F4D\u4F18\u5148\u201D\u540E \u5C06\u751F\u6210\u6570\u5B57 24832 \uFF0801100001 00000000\uFF09\u3002</p><p>\u8FD9\u663E\u793A\u4E86\u5B57\u8282\u987A\u5E8F\u7684\u53D8\u5316\u53D6\u51B3\u4E8E\u5B57\u8282\u5B58\u50A8\u6B21\u5E8F\u8BBE\u7F6E:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// newio/Endians.java</span>
<span class="token comment">// (c)2017 MindView LLC: see Copyright.txt</span>
<span class="token comment">// \u6211\u4EEC\u65E0\u6CD5\u4FDD\u8BC1\u8BE5\u4EE3\u7801\u662F\u5426\u9002\u7528\u4E8E\u5176\u4ED6\u7528\u9014\u3002</span>
<span class="token comment">// \u8BBF\u95EE http://OnJava8.com \u4E86\u89E3\u66F4\u591A\u672C\u4E66\u4FE1\u606F\u3002</span>
<span class="token comment">// \u4E0D\u540C\u5B57\u8282\u5B58\u50A8\u6B21\u5E8F\u7684\u5B58\u50A8</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Endians</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ByteBuffer</span> bb <span class="token operator">=</span> <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">wrap</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    bb<span class="token punctuation">.</span><span class="token function">asCharBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;abcdef&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>bb<span class="token punctuation">.</span><span class="token function">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    bb<span class="token punctuation">.</span><span class="token function">rewind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    bb<span class="token punctuation">.</span><span class="token function">order</span><span class="token punctuation">(</span><span class="token class-name">ByteOrder</span><span class="token punctuation">.</span>BIG_ENDIAN<span class="token punctuation">)</span><span class="token punctuation">;</span>
    bb<span class="token punctuation">.</span><span class="token function">asCharBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;abcdef&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>bb<span class="token punctuation">.</span><span class="token function">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    bb<span class="token punctuation">.</span><span class="token function">rewind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    bb<span class="token punctuation">.</span><span class="token function">order</span><span class="token punctuation">(</span><span class="token class-name">ByteOrder</span><span class="token punctuation">.</span>LITTLE_ENDIAN<span class="token punctuation">)</span><span class="token punctuation">;</span>
    bb<span class="token punctuation">.</span><span class="token function">asCharBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;abcdef&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>bb<span class="token punctuation">.</span><span class="token function">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>[0, 97, 0, 98, 0, 99, 0, 100, 0, 101, 0, 102]
[0, 97, 0, 98, 0, 99, 0, 100, 0, 101, 0, 102]
[97, 0, 98, 0, 99, 0, 100, 0, 101, 0, 102, 0]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>ByteBuffer</strong> \u5206\u914D\u7A7A\u95F4\u5C06 <strong>charArray</strong> \u4E2D\u7684\u6240\u6709\u5B57\u8282\u4F5C\u4E3A\u5916\u90E8\u7F13\u51B2\u533A\u4FDD\u5B58\uFF0C\u56E0\u6B64\u53EF\u4EE5\u8C03\u7528 <code>array()</code> \u65B9\u6CD5\u6765\u663E\u793A\u5E95\u5C42\u5B57\u8282\u3002<code>array()</code> \u65B9\u6CD5\u662F\u201C\u53EF\u9009\u7684\u201D\uFF0C\u4F60\u53EA\u80FD\u5728\u6570\u7EC4\u652F\u6301\u7684\u7F13\u51B2\u533A\u4E0A\u8C03\u7528\u5B83\uFF0C\u5426\u5219\u5C06\u629B\u51FA <strong>UnsupportedOperationException</strong> \u5F02\u5E38\u3002</p><p><strong>charArray</strong> \u901A\u8FC7 <strong>CharBuffer</strong> \u89C6\u56FE\u63D2\u5165\u5230 <strong>ByteBuffer</strong> \u4E2D\u3002\u5F53\u663E\u793A\u5E95\u5C42\u5B57\u8282\u65F6\uFF0C\u9ED8\u8BA4\u6392\u5E8F\u4E0E\u540E\u7EED\u201C\u9AD8\u4F4D\u201D\u76F8\u540C\uFF0C\u800C\u201C\u5730\u4F4D\u201D\u4EA4\u6362\u5B57\u8282</p><h2 id="\u7F13\u51B2\u533A\u6570\u636E\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u7F13\u51B2\u533A\u6570\u636E\u64CD\u4F5C" aria-hidden="true">#</a> \u7F13\u51B2\u533A\u6570\u636E\u64CD\u4F5C</h2><p>\u4E0B\u56FE\u8BF4\u660E\u4E86 <strong>nio</strong> \u7C7B\u4E4B\u95F4\u7684\u5173\u7CFB\uFF0C\u5C55\u793A\u4E86\u5982\u4F55\u79FB\u52A8\u548C\u8F6C\u6362\u6570\u636E\u3002\u4F8B\u5982\uFF0C\u8981\u5C06\u5B57\u8282\u6570\u7EC4\u5199\u5165\u6587\u4EF6\uFF0C\u4F7F\u7528 <strong>ByteBuffer.</strong><code>wrap()</code> \u65B9\u6CD5\u5305\u88C5\u5B57\u8282\u6570\u7EC4\uFF0C\u4F7F\u7528 <code>getChannel()</code> \u5728 <strong>FileOutputStream</strong> \u4E0A\u6253\u5F00\u901A\u9053\uFF0C\u7136\u540E\u4ECE <strong>ByteBuffer</strong> \u5C06\u6570\u636E\u5199\u5165 <strong>FileChannel</strong>\u3002</p><p><img src="`+r+`" alt="1554546452861"></p><p><strong>ByteBuffer</strong> \u662F\u5C06\u6570\u636E\u79FB\u5165\u548C\u79FB\u51FA\u901A\u9053\u7684\u552F\u4E00\u65B9\u6CD5\uFF0C\u6211\u4EEC\u53EA\u80FD\u521B\u5EFA\u4E00\u4E2A\u72EC\u7ACB\u7684\u57FA\u672C\u7C7B\u578B\u7F13\u51B2\u533A\uFF0C\u6216\u8005\u4F7F\u7528 <code>as</code> \u65B9\u6CD5\u4ECE <strong>ByteBuffer</strong> \u83B7\u5F97\u4E00\u4E2A\u65B0\u7F13\u51B2\u533A\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u4E0D\u80FD\u5C06\u57FA\u672C\u7C7B\u578B\u7F13\u51B2\u533A\u8F6C\u6362\u4E3A <strong>ByteBuffer</strong>\u3002\u4F46\u6211\u4EEC\u80FD\u591F\u901A\u8FC7\u89C6\u56FE\u7F13\u51B2\u533A\u5C06\u57FA\u672C\u7C7B\u578B\u6570\u636E\u79FB\u52A8\u5230 <strong>ByteBuffer</strong> \u4E2D\u6216\u79FB\u51FA <strong>ByteBuffer</strong>\u3002</p><h3 id="\u7F13\u51B2\u533A\u7EC6\u8282" tabindex="-1"><a class="header-anchor" href="#\u7F13\u51B2\u533A\u7EC6\u8282" aria-hidden="true">#</a> \u7F13\u51B2\u533A\u7EC6\u8282</h3><p>\u7F13\u51B2\u533A\u7531\u6570\u636E\u548C\u56DB\u4E2A\u7D22\u5F15\u7EC4\u6210\uFF0C\u4EE5\u6709\u6548\u5730\u8BBF\u95EE\u548C\u64CD\u4F5C\u8BE5\u6570\u636E\uFF1Amark\u3001position\u3001limit \u548C capacity\uFF08\u6807\u8BB0\u3001\u4F4D\u7F6E\u3001\u9650\u5236\u548C\u5BB9\u91CF\uFF09\u3002\u4F34\u968F\u7740\u7684\u8FD8\u6709\u4E00\u7EC4\u65B9\u6CD5\u53EF\u4EE5\u8BBE\u7F6E\u548C\u91CD\u7F6E\u8FD9\u4E9B\u7D22\u5F15\uFF0C\u5E76\u53EF\u67E5\u8BE2\u5B83\u4EEC\u7684\u503C\u3002</p><table><thead><tr><th style="text-align:left;"></th><th style="text-align:left;"></th></tr></thead><tbody><tr><td style="text-align:left;"><strong>capacity()</strong></td><td style="text-align:left;">\u8FD4\u56DE\u7F13\u51B2\u533A\u7684 capacity</td></tr><tr><td style="text-align:left;"><strong>clear()</strong></td><td style="text-align:left;">\u6E05\u9664\u7F13\u51B2\u533A\uFF0C\u5C06 position \u8BBE\u7F6E\u4E3A\u96F6\u5E76 \u8BBE limit \u4E3A capacity;\u53EF\u8C03\u7528\u6B64\u65B9\u6CD5\u6765\u8986\u76D6\u73B0\u6709\u7F13\u51B2\u533A</td></tr><tr><td style="text-align:left;"><strong>flip()</strong></td><td style="text-align:left;">\u5C06 limit \u8BBE\u7F6E\u4E3A position\uFF0C\u5E76\u5C06 position \u8BBE\u7F6E\u4E3A 0;\u6B64\u65B9\u6CD5\u7528\u4E8E\u51C6\u5907\u7F13\u51B2\u533A\uFF0C\u4EE5\u4FBF\u5728\u6570\u636E\u5199\u5165\u7F13\u51B2\u533A\u540E\u8FDB\u884C\u8BFB\u53D6</td></tr><tr><td style="text-align:left;"><strong>limit()</strong></td><td style="text-align:left;">\u8FD4\u56DE limit \u7684\u503C</td></tr><tr><td style="text-align:left;"><strong>limit(int limit)</strong></td><td style="text-align:left;">\u91CD\u8BBE limit</td></tr><tr><td style="text-align:left;"><strong>mark()</strong></td><td style="text-align:left;">\u8BBE\u7F6E mark \u4E3A\u5F53\u524D\u7684 position</td></tr><tr><td style="text-align:left;"><strong>position()</strong></td><td style="text-align:left;">\u8FD4\u56DE position</td></tr><tr><td style="text-align:left;"><strong>position(int pos)</strong></td><td style="text-align:left;">\u8BBE\u7F6E position</td></tr><tr><td style="text-align:left;"><strong>remaining()</strong></td><td style="text-align:left;">\u8FD4\u56DE limit \u5230 position</td></tr><tr><td style="text-align:left;"><strong>hasRemaining()</strong></td><td style="text-align:left;">\u5982\u679C\u5728 position \u4E0E limit \u4E2D\u95F4\u6709\u5143\u7D20\uFF0C\u8FD4\u56DE <code>true</code></td></tr></tbody></table><p>\u4ECE\u7F13\u51B2\u533A\u63D2\u5165\u548C\u63D0\u53D6\u6570\u636E\u7684\u65B9\u6CD5\u901A\u8FC7\u66F4\u65B0\u7D22\u5F15\u6765\u53CD\u6620\u6240\u505A\u7684\u66F4\u6539\u3002\u4E0B\u4F8B\u4F7F\u7528\u4E00\u79CD\u975E\u5E38\u7B80\u5355\u7684\u7B97\u6CD5\uFF08\u4EA4\u6362\u76F8\u90BB\u5B57\u7B26\uFF09\u6765\u5BF9 <strong>CharBuffer</strong> \u4E2D\u7684\u5B57\u7B26\u8FDB\u884C\u52A0\u6270\u548C\u89E3\u6270\u3002\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// newio/UsingBuffers.java</span>
<span class="token comment">// (c)2017 MindView LLC: see Copyright.txt</span>
<span class="token comment">// \u6211\u4EEC\u65E0\u6CD5\u4FDD\u8BC1\u8BE5\u4EE3\u7801\u662F\u5426\u9002\u7528\u4E8E\u5176\u4ED6\u7528\u9014\u3002</span>
<span class="token comment">// \u8BBF\u95EE http://OnJava8.com \u4E86\u89E3\u66F4\u591A\u672C\u4E66\u4FE1\u606F\u3002</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UsingBuffers</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> <span class="token keyword">static</span>
  <span class="token keyword">void</span> <span class="token function">symmetricScramble</span><span class="token punctuation">(</span><span class="token class-name">CharBuffer</span> buffer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>buffer<span class="token punctuation">.</span><span class="token function">hasRemaining</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      buffer<span class="token punctuation">.</span><span class="token function">mark</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">char</span> c1 <span class="token operator">=</span> buffer<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">char</span> c2 <span class="token operator">=</span> buffer<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      buffer<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      buffer<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>c2<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>c1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> data <span class="token operator">=</span> <span class="token string">&quot;UsingBuffers&quot;</span><span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">ByteBuffer</span> bb <span class="token operator">=</span>
      <span class="token class-name">ByteBuffer</span><span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>length <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">CharBuffer</span> cb <span class="token operator">=</span> bb<span class="token punctuation">.</span><span class="token function">asCharBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cb<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>cb<span class="token punctuation">.</span><span class="token function">rewind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">symmetricScramble</span><span class="token punctuation">(</span>cb<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>cb<span class="token punctuation">.</span><span class="token function">rewind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">symmetricScramble</span><span class="token punctuation">(</span>cb<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>cb<span class="token punctuation">.</span><span class="token function">rewind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>UsingBuffers
sUniBgfuefsr
UsingBuffers
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u867D\u7136\u53EF\u4EE5\u901A\u8FC7\u4F7F\u7528 <strong>char</strong> \u6570\u7EC4\u8C03\u7528 <code>wrap()</code> \u76F4\u63A5\u751F\u6210 <strong>CharBuffer</strong>\uFF0C\u4F46\u662F\u5E95\u5C42\u7684 <strong>ByteBuffer</strong> \u5C06\u88AB\u5206\u914D\uFF0C\u800C <strong>CharBuffer</strong> \u5C06\u4F5C\u4E3A <strong>ByteBuffer</strong> \u4E0A\u7684\u89C6\u56FE\u751F\u6210\u3002\u8FD9\u5F3A\u8C03\u4E86\u76EE\u6807\u59CB\u7EC8\u662F\u64CD\u4F5C <strong>ByteBuffer</strong>\uFF0C\u56E0\u4E3A\u5B83\u4E0E\u901A\u9053\u4EA4\u4E92\u3002</p><p>\u4E0B\u9762\u662F\u7A0B\u5E8F\u5728 <code>symmetricgrab()</code> \u65B9\u6CD5\u5165\u53E3\u65F6\u7F13\u51B2\u533A\u7684\u6837\u5B50:</p><p><img src="`+d+'" alt="1554546627710"></p><p>position \u6307\u5411\u7F13\u51B2\u533A\u4E2D\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\uFF0Ccapacity \u548C limit \u7D27\u63A5\u5728\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u4E4B\u540E\u3002\u5728<code>symmetricgrab()</code> \u4E2D\uFF0C<strong>while</strong> \u5FAA\u73AF\u8FED\u4EE3\u5230 position \u7B49\u4E8E limit\u3002\u5F53\u5728\u7F13\u51B2\u533A\u4E0A\u8C03\u7528\u76F8\u5BF9\u4F4D\u7F6E\u7684 <code>get()</code> \u6216 <code>put()</code> \u51FD\u6570\u65F6\uFF0C\u7F13\u51B2\u533A\u7684\u4F4D\u7F6E\u4F1A\u53D1\u751F\u53D8\u5316\u3002\u4F60\u53EF\u4EE5\u8C03\u7528\u7EDD\u5BF9\u4F4D\u7F6E\u7684 <code>get()</code> \u548C <code>put()</code> \u65B9\u6CD5\uFF0C\u5B83\u4EEC\u5305\u542B\u7D22\u5F15\u53C2\u6570\uFF1A<code>get()</code> \u6216 <code>put()</code> \u53D1\u751F\u7684\u4F4D\u7F6E\u3002\u8FD9\u4E9B\u65B9\u6CD5\u4E0D\u4FEE\u6539\u7F13\u51B2\u533A position \u7684\u503C\u3002</p><p>\u5F53\u63A7\u4EF6\u8FDB\u5165 <strong>while</strong> \u5FAA\u73AF\u65F6\uFF0C\u4F7F\u7528 <code>mark()</code> \u8BBE\u7F6E mark \u7684\u503C\u3002\u7F13\u51B2\u533A\u7684\u72B6\u6001\u4E3A\uFF1A</p><p><img src="'+v+'" alt="1554546666685"></p><p>\u4E24\u4E2A\u76F8\u5BF9 <code>get()</code> \u8C03\u7528\u5C06\u524D\u4E24\u4E2A\u5B57\u7B26\u7684\u503C\u4FDD\u5B58\u5728\u53D8\u91CF <code>c1</code> \u548C <code>c2</code> \u4E2D\u3002\u5728\u8FD9\u4E24\u4E2A\u8C03\u7528\u4E4B\u540E\uFF0C\u7F13\u51B2\u533A\u770B\u8D77\u6765\u662F\u8FD9\u6837\u7684\uFF1A</p><p><img src="'+m+'" alt="1554546693664"></p><p>\u4E3A\u4E86\u6267\u884C\u4EA4\u6362\uFF0C\u6211\u4EEC\u5728\u4F4D\u7F6E 0 \u5904\u7F16\u5199 <code>c2</code>\uFF0C\u5728\u4F4D\u7F6E 1 \u5904\u7F16\u5199 <code>c1</code>\u3002\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528\u7EDD\u5BF9 <code>put()</code> \u65B9\u6CD5\u6765\u5B9E\u73B0\u8FD9\u4E00\u70B9\uFF0C\u6216\u8005\u7528 <code>reset()</code> \u65B9\u6CD5\uFF0C\u5C06 position \u7684\u503C\u8BBE\u7F6E\u4E3A mark\uFF1A</p><p><img src="'+b+'" alt="1554546847181"></p><p>\u4E24\u4E2A <code>put()</code> \u65B9\u6CD5\u5206\u522B\u7F16\u5199 <code>c2</code> \u548C <code>c1</code> \uFF1A</p><p><img src="'+f+'" alt="1554546861836"></p><p>\u5728\u4E0B\u4E00\u6B21\u5FAA\u73AF\u4E2D\uFF0C\u5C06 mark \u8BBE\u7F6E\u4E3A position \u7684\u5F53\u524D\u503C\uFF1A</p><p><img src="'+g+'" alt="1554546881189"></p><p>\u8BE5\u8FC7\u7A0B\u5C06\u7EE7\u7EED\uFF0C\u76F4\u5230\u904D\u5386\u6574\u4E2A\u7F13\u51B2\u533A\u4E3A\u6B62\u3002\u5728 <strong>while</strong> \u5FAA\u73AF\u7684\u672B\u5C3E\uFF0Cposition \u4F4D\u4E8E\u7F13\u51B2\u533A\u7684\u672B\u5C3E\u3002\u5982\u679C\u663E\u793A\u7F13\u51B2\u533A\uFF0C\u5219\u53EA\u663E\u793A\u4F4D\u7F6E\u548C\u9650\u5236\u4E4B\u95F4\u7684\u5B57\u7B26\u3002\u56E0\u6B64\uFF0C\u8981\u663E\u793A\u7F13\u51B2\u533A\u7684\u5168\u90E8\u5185\u5BB9\uFF0C\u5FC5\u987B\u4F7F\u7528 <code>rewind()</code> \u5C06 position \u8BBE\u7F6E\u4E3A\u7F13\u51B2\u533A\u7684\u5F00\u59CB\u4F4D\u7F6E\u3002\u8FD9\u662F <code>rewind()</code> \u8C03\u7528\u540E\u7F13\u51B2\u533A\u7684\u72B6\u6001\uFF08mark \u7684\u503C\u53D8\u6210\u672A\u5B9A\u4E49\uFF09\uFF1A</p><p><img src="'+y+`" alt="1554546890132"></p><p>\u518D\u6B21\u8C03\u7528 <code>symmetricgrab()</code> \u65B9\u6CD5\u65F6\uFF0C<strong>CharBuffer</strong> \u5C06\u7ECF\u5386\u76F8\u540C\u7684\u8FC7\u7A0B\u5E76\u6062\u590D\u5230\u539F\u59CB\u72B6\u6001\u3002</p><h2 id="\u5185\u5B58\u6620\u5C04\u6587\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u5185\u5B58\u6620\u5C04\u6587\u4EF6" aria-hidden="true">#</a> \u5185\u5B58\u6620\u5C04\u6587\u4EF6</h2><p>\u5185\u5B58\u6620\u5C04\u6587\u4EF6\u80FD\u8BA9\u4F60\u521B\u5EFA\u548C\u4FEE\u6539\u90A3\u4E9B\u56E0\u4E3A\u592A\u5927\u800C\u65E0\u6CD5\u653E\u5165\u5185\u5B58\u7684\u6587\u4EF6\u3002\u6709\u4E86\u5185\u5B58\u6620\u5C04\u6587\u4EF6\uFF0C\u4F60\u5C31\u53EF\u4EE5\u8BA4\u4E3A\u6587\u4EF6\u5DF2\u7ECF\u5168\u90E8\u8BFB\u8FDB\u4E86\u5185\u5B58\uFF0C\u7136\u540E\u628A\u5B83\u5F53\u6210\u4E00\u4E2A\u975E\u5E38\u5927\u7684\u6570\u7EC4\u6765\u8BBF\u95EE\u3002\u8FD9\u79CD\u89E3\u51B3\u529E\u6CD5\u80FD\u5927\u5927\u7B80\u5316\u4FEE\u6539\u6587\u4EF6\u7684\u4EE3\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// newio/LargeMappedFiles.java</span>
<span class="token comment">// (c)2017 MindView LLC: see Copyright.txt</span>
<span class="token comment">// \u6211\u4EEC\u65E0\u6CD5\u4FDD\u8BC1\u8BE5\u4EE3\u7801\u662F\u5426\u9002\u7528\u4E8E\u5176\u4ED6\u7528\u9014\u3002</span>
<span class="token comment">// \u8BBF\u95EE http://OnJava8.com \u4E86\u89E3\u66F4\u591A\u672C\u4E66\u4FE1\u606F\u3002</span>
<span class="token comment">// \u4F7F\u7528\u5185\u5B58\u6620\u5C04\u6765\u521B\u5EFA\u4E00\u4E2A\u5927\u6587\u4EF6</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>channels<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LargeMappedFiles</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token keyword">int</span> length <span class="token operator">=</span> <span class="token number">0x8000000</span><span class="token punctuation">;</span> <span class="token comment">// 128 MB</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span>
  <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span><span class="token punctuation">(</span>
      <span class="token class-name">RandomAccessFile</span> tdat <span class="token operator">=</span>
        <span class="token keyword">new</span> <span class="token class-name">RandomAccessFile</span><span class="token punctuation">(</span><span class="token string">&quot;test.dat&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;rw&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">MappedByteBuffer</span> out <span class="token operator">=</span> tdat<span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>
        <span class="token class-name">FileChannel<span class="token punctuation">.</span>MapMode</span><span class="token punctuation">.</span>READ_WRITE<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> length<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        out<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span><span class="token char">&#39;x&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Finished writing&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> length<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token operator">/</span><span class="token number">2</span> <span class="token operator">+</span> <span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span>out<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Finished writing
xxxxxx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E3A\u4E86\u8BFB\u5199\uFF0C\u6211\u4EEC\u4ECE <strong>RandomAccessFile</strong> \u5F00\u59CB\uFF0C\u83B7\u53D6\u8BE5\u6587\u4EF6\u7684\u901A\u9053\uFF0C\u7136\u540E\u8C03\u7528 <code>map()</code> \u6765\u751F\u6210 <strong>MappedByteBuffer</strong> \uFF0C\u8FD9\u662F\u4E00\u79CD\u7279\u6B8A\u7684\u76F4\u63A5\u7F13\u51B2\u533A\u3002\u4F60\u5FC5\u987B\u6307\u5B9A\u8981\u5728\u6587\u4EF6\u4E2D\u6620\u5C04\u7684\u533A\u57DF\u7684\u8D77\u59CB\u70B9\u548C\u957F\u5EA6\u2014\u8FD9\u610F\u5473\u7740\u4F60\u53EF\u4EE5\u9009\u62E9\u6620\u5C04\u5927\u6587\u4EF6\u7684\u8F83\u5C0F\u533A\u57DF\u3002</p><p><strong>MappedByteBuffer</strong> \u7EE7\u627F\u4E86 <strong>ByteBuffer</strong>\uFF0C\u6240\u4EE5\u62E5\u6709<strong>ByteBuffer</strong> \u5168\u90E8\u7684\u65B9\u6CD5\u3002\u8FD9\u91CC\u53EA\u5C55\u793A\u4E86 <code>put()</code> \u548C <code>get()</code> \u7684\u6700\u7B80\u5355\u7528\u6CD5\uFF0C\u4F46\u662F\u4F60\u4E5F\u53EF\u4EE5\u4F7F\u7528 <code>asCharBuffer()</code> \u7B49\u65B9\u6CD5\u3002</p><p>\u4F7F\u7528\u524D\u9762\u7684\u7A0B\u5E8F\u521B\u5EFA\u7684\u6587\u4EF6\u957F\u5EA6\u4E3A 128MB\uFF0C\u53EF\u80FD\u6BD4\u4F60\u7684\u64CD\u4F5C\u7CFB\u7EDF\u5355\u6B21\u6240\u5141\u8BB8\u7684\u64CD\u4F5C\u7684\u5185\u5B58\u8981\u5927\u3002\u8BE5\u6587\u4EF6\u4F3C\u4E4E\u53EF\u4EE5\u540C\u65F6\u8BBF\u95EE\uFF0C\u56E0\u4E3A\u5B83\u53EA\u6709\u4E00\u90E8\u5206\u88AB\u5E26\u8FDB\u5185\u5B58\uFF0C\u800C\u5176\u4ED6\u90E8\u5206\u88AB\u4EA4\u6362\u51FA\u53BB\u3002\u8FD9\u6837\uFF0C\u4E00\u4E2A\u975E\u5E38\u5927\u7684\u6587\u4EF6\uFF08\u6700\u591A 2GB\uFF09\u53EF\u4EE5\u5F88\u5BB9\u6613\u5730\u4FEE\u6539\u3002<strong>\u6CE8\u610F</strong>\uFF0C\u64CD\u4F5C\u7CFB\u7EDF\u5E95\u5C42\u7684\u6587\u4EF6\u6620\u5C04\u5DE5\u5177\u7528\u4E8E\u6027\u80FD\u7684\u6700\u5927\u5316\u3002</p><h3 id="\u6027\u80FD" tabindex="-1"><a class="header-anchor" href="#\u6027\u80FD" aria-hidden="true">#</a> \u6027\u80FD</h3><p>\u867D\u7136\u65E7\u7684 I/O \u6D41\u7684\u6027\u80FD\u901A\u8FC7\u4F7F\u7528 <strong>NIO</strong> \u5B9E\u73B0\u5F97\u5230\u4E86\u6539\u8FDB\uFF0C\u4F46\u662F\u6620\u5C04\u6587\u4EF6\u8BBF\u95EE\u5F80\u5F80\u8981\u5FEB\u5F97\u591A\u3002\u4E0B\u4F8B\u5E26\u6765\u4E00\u4E2A\u7B80\u5355\u7684\u6027\u80FD\u6BD4\u8F83\u3002\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// newio/MappedIO.java</span>
<span class="token comment">// \u6211\u4EEC\u65E0\u6CD5\u4FDD\u8BC1\u8BE5\u4EE3\u7801\u662F\u5426\u9002\u7528\u4E8E\u5176\u4ED6\u7528\u9014\u3002</span>
<span class="token comment">// \u8BBF\u95EE http://OnJava8.com \u4E86\u89E3\u66F4\u591A\u672C\u4E66\u4FE1\u606F\u3002</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>channels<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MappedIO</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> numOfInts <span class="token operator">=</span>      <span class="token number">4_000_000</span><span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> numOfUbuffInts <span class="token operator">=</span> <span class="token number">100_000</span><span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token keyword">abstract</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Tester</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token class-name">Tester</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">runTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>name <span class="token operator">+</span> <span class="token string">&quot;: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">long</span> start <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">double</span> duration <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start<span class="token punctuation">;</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%.3f%n&quot;</span><span class="token punctuation">,</span> duration<span class="token operator">/</span><span class="token number">1.0e9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Tester</span><span class="token punctuation">[</span><span class="token punctuation">]</span> tests <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token keyword">new</span> <span class="token class-name">Tester</span><span class="token punctuation">(</span><span class="token string">&quot;Stream Write&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token annotation punctuation">@Override</span>
      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span><span class="token punctuation">(</span>
          <span class="token class-name">DataOutputStream</span> dos <span class="token operator">=</span>
            <span class="token keyword">new</span> <span class="token class-name">DataOutputStream</span><span class="token punctuation">(</span>
              <span class="token keyword">new</span> <span class="token class-name">BufferedOutputStream</span><span class="token punctuation">(</span>
                <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>
                  <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;temp.tmp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> numOfInts<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
            dos<span class="token punctuation">.</span><span class="token function">writeInt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">new</span> <span class="token class-name">Tester</span><span class="token punctuation">(</span><span class="token string">&quot;Mapped Write&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token annotation punctuation">@Override</span>
      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span><span class="token punctuation">(</span>
          <span class="token class-name">FileChannel</span> fc <span class="token operator">=</span>
            <span class="token keyword">new</span> <span class="token class-name">RandomAccessFile</span><span class="token punctuation">(</span><span class="token string">&quot;temp.tmp&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;rw&quot;</span><span class="token punctuation">)</span>
              <span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token class-name">IntBuffer</span> ib <span class="token operator">=</span>
            fc<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">FileChannel<span class="token punctuation">.</span>MapMode</span><span class="token punctuation">.</span>READ_WRITE<span class="token punctuation">,</span>
              <span class="token number">0</span><span class="token punctuation">,</span> fc<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asIntBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> numOfInts<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
            ib<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">new</span> <span class="token class-name">Tester</span><span class="token punctuation">(</span><span class="token string">&quot;Stream Read&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token annotation punctuation">@Override</span>
      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span><span class="token punctuation">(</span>
          <span class="token class-name">DataInputStream</span> dis <span class="token operator">=</span>
            <span class="token keyword">new</span> <span class="token class-name">DataInputStream</span><span class="token punctuation">(</span>
              <span class="token keyword">new</span> <span class="token class-name">BufferedInputStream</span><span class="token punctuation">(</span>
                <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token string">&quot;temp.tmp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> numOfInts<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
            dis<span class="token punctuation">.</span><span class="token function">readInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">new</span> <span class="token class-name">Tester</span><span class="token punctuation">(</span><span class="token string">&quot;Mapped Read&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token annotation punctuation">@Override</span>
      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span><span class="token punctuation">(</span>
          <span class="token class-name">FileChannel</span> fc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>
            <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;temp.tmp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token class-name">IntBuffer</span> ib <span class="token operator">=</span>
            fc<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">FileChannel<span class="token punctuation">.</span>MapMode</span><span class="token punctuation">.</span>READ_ONLY<span class="token punctuation">,</span>
              <span class="token number">0</span><span class="token punctuation">,</span> fc<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asIntBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">while</span><span class="token punctuation">(</span>ib<span class="token punctuation">.</span><span class="token function">hasRemaining</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            ib<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">new</span> <span class="token class-name">Tester</span><span class="token punctuation">(</span><span class="token string">&quot;Stream Read/Write&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token annotation punctuation">@Override</span>
      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span><span class="token punctuation">(</span>
          <span class="token class-name">RandomAccessFile</span> raf <span class="token operator">=</span>
            <span class="token keyword">new</span> <span class="token class-name">RandomAccessFile</span><span class="token punctuation">(</span>
              <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;temp.tmp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;rw&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span> <span class="token punctuation">{</span>
          raf<span class="token punctuation">.</span><span class="token function">writeInt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> numOfUbuffInts<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            raf<span class="token punctuation">.</span><span class="token function">seek</span><span class="token punctuation">(</span>raf<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            raf<span class="token punctuation">.</span><span class="token function">writeInt</span><span class="token punctuation">(</span>raf<span class="token punctuation">.</span><span class="token function">readInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">new</span> <span class="token class-name">Tester</span><span class="token punctuation">(</span><span class="token string">&quot;Mapped Read/Write&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token annotation punctuation">@Override</span>
      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span><span class="token punctuation">(</span>
          <span class="token class-name">FileChannel</span> fc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RandomAccessFile</span><span class="token punctuation">(</span>
            <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;temp.tmp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;rw&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token class-name">IntBuffer</span> ib <span class="token operator">=</span>
            fc<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">FileChannel<span class="token punctuation">.</span>MapMode</span><span class="token punctuation">.</span>READ_WRITE<span class="token punctuation">,</span>
              <span class="token number">0</span><span class="token punctuation">,</span> fc<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asIntBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          ib<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> numOfUbuffInts<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
            ib<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>ib<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>tests<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">Tester</span><span class="token operator">::</span><span class="token function">runTest</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Stream Write: 0.615
Mapped Write: 0.050
Stream Read: 0.577
Mapped Read: 0.015
Stream Read/Write: 4.069
Mapped Read/Write: 0.013
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Tester</strong> \u4F7F\u7528\u4E86\u6A21\u677F\u65B9\u6CD5\uFF08Template Method\uFF09\u6A21\u5F0F\uFF0C\u5B83\u4E3A\u533F\u540D\u5185\u90E8\u5B50\u7C7B\u4E2D\u5B9A\u4E49\u7684 <code>test()</code> \u7684\u5404\u79CD\u5B9E\u73B0\u521B\u5EFA\u4E00\u4E2A\u6D4B\u8BD5\u6846\u67B6\u3002\u6BCF\u4E2A\u5B50\u7C7B\u90FD\u6267\u884C\u4E00\u79CD\u6D4B\u8BD5\uFF0C\u56E0\u6B64 <code>test()</code> \u65B9\u6CD5\u8FD8\u63D0\u4F9B\u4E86\u6267\u884C\u5404\u79CDI/O \u6D3B\u52A8\u7684\u539F\u578B\u3002</p><p>\u867D\u7136\u6620\u5C04\u7684\u5199\u4F3C\u4E4E\u4F7F\u7528 <strong>FileOutputStream</strong>\uFF0C\u4F46\u662F\u6587\u4EF6\u6620\u5C04\u4E2D\u7684\u6240\u6709\u8F93\u51FA\u5FC5\u987B\u4F7F\u7528 <strong>RandomAccessFile</strong>\uFF0C\u5C31\u50CF\u524D\u9762\u4EE3\u7801\u4E2D\u7684\u8BFB/\u5199\u4E00\u6837\u3002</p><p>\u8BF7\u6CE8\u610F\uFF0C<code>test()</code> \u65B9\u6CD5\u5305\u62EC\u521D\u59CB\u5316\u5404\u79CD I/O \u5BF9\u8C61\u7684\u65F6\u95F4\uFF0C\u56E0\u6B64\uFF0C\u5C3D\u7BA1\u6620\u5C04\u6587\u4EF6\u7684\u8BBE\u7F6E\u53EF\u80FD\u5F88\u6602\u8D35\uFF0C\u4F46\u662F\u4E0E\u6D41 I/O \u76F8\u6BD4\uFF0C\u603B\u4F53\u6536\u76CA\u975E\u5E38\u53EF\u89C2\u3002</p><h2 id="\u6587\u4EF6\u9501\u5B9A" tabindex="-1"><a class="header-anchor" href="#\u6587\u4EF6\u9501\u5B9A" aria-hidden="true">#</a> \u6587\u4EF6\u9501\u5B9A</h2><p>\u6587\u4EF6\u9501\u5B9A\u53EF\u540C\u6B65\u8BBF\u95EE\uFF0C\u56E0\u6B64\u6587\u4EF6\u53EF\u4EE5\u5171\u4EAB\u8D44\u6E90\u3002\u4F46\u662F\uFF0C\u4E89\u7528\u540C\u4E00\u6587\u4EF6\u7684\u4E24\u4E2A\u7EBF\u7A0B\u53EF\u80FD\u4F4D\u4E8E\u4E0D\u540C\u7684 JVM \u4E2D\uFF0C\u6216\u8005\u4E00\u4E2A\u53EF\u80FD\u662F Java \u7EBF\u7A0B\uFF0C\u53E6\u4E00\u4E2A\u53EF\u80FD\u662F\u64CD\u4F5C\u7CFB\u7EDF\u4E2D\u7684\u672C\u673A\u7EBF\u7A0B\u3002\u6587\u4EF6\u9501\u5BF9\u5176\u4ED6\u64CD\u4F5C\u7CFB\u7EDF\u8FDB\u7A0B\u53EF\u89C1\uFF0C\u56E0\u4E3A Java \u6587\u4EF6\u9501\u5B9A\u76F4\u63A5\u6620\u5C04\u5230\u672C\u673A\u64CD\u4F5C\u7CFB\u7EDF\u9501\u5B9A\u5DE5\u5177\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// newio/FileLocking.java</span>
<span class="token comment">// (c)2017 MindView LLC: see Copyright.txt</span>
<span class="token comment">// \u6211\u4EEC\u65E0\u6CD5\u4FDD\u8BC1\u8BE5\u4EE3\u7801\u662F\u5426\u9002\u7528\u4E8E\u5176\u4ED6\u7528\u9014\u3002</span>
<span class="token comment">// \u8BBF\u95EE http://OnJava8.com \u4E86\u89E3\u66F4\u591A\u672C\u4E66\u4FE1\u606F\u3002</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>channels<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FileLocking</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span><span class="token punctuation">(</span>
      <span class="token class-name">FileOutputStream</span> fos <span class="token operator">=</span>
        <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token string">&quot;file.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">FileLock</span> fl <span class="token operator">=</span> fos<span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">tryLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>fl <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Locked File&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>MILLISECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        fl<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Released Lock&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> <span class="token operator">|</span> <span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Locked File
Released Lock
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u8FC7\u8C03\u7528 <strong>FileChannel</strong> \u4E0A\u7684 <code>tryLock()</code> \u6216 <code>lock()</code>\uFF0C\u53EF\u4EE5\u83B7\u5F97\u6574\u4E2A\u6587\u4EF6\u7684 <strong>FileLock</strong>\u3002\uFF08<strong>SocketChannel</strong>\u3001<strong>DatagramChannel</strong> \u548C <strong>ServerSocketChannel</strong> \u4E0D\u9700\u8981\u9501\u5B9A\uFF0C\u56E0\u4E3A\u5B83\u4EEC\u672C\u8D28\u4E0A\u662F\u5355\u8FDB\u7A0B\u5B9E\u4F53\uFF1B\u901A\u5E38\u4E0D\u4F1A\u5728\u4E24\u4E2A\u8FDB\u7A0B\u4E4B\u95F4\u5171\u4EAB\u4E00\u4E2A\u7F51\u7EDC\u5957\u63A5\u5B57\uFF09\u3002</p><p><code>tryLock()</code> \u662F\u975E\u963B\u585E\u7684\u3002\u5B83\u8BD5\u56FE\u83B7\u53D6\u9501\uFF0C\u82E5\u4E0D\u80FD\u83B7\u53D6\uFF08\u5F53\u5176\u4ED6\u8FDB\u7A0B\u5DF2\u7ECF\u6301\u6709\u76F8\u540C\u7684\u9501\uFF0C\u5E76\u4E14\u5B83\u4E0D\u662F\u5171\u4EAB\u7684\uFF09\uFF0C\u5B83\u53EA\u662F\u4ECE\u65B9\u6CD5\u8C03\u7528\u8FD4\u56DE\u3002</p><p><code>lock()</code> \u4F1A\u963B\u585E\uFF0C\u76F4\u5230\u83B7\u5F97\u9501\uFF0C\u6216\u8005\u8C03\u7528 <code>lock()</code> \u7684\u7EBF\u7A0B\u4E2D\u65AD\uFF0C\u6216\u8005\u8C03\u7528 <code>lock()</code> \u65B9\u6CD5\u7684\u901A\u9053\u5173\u95ED\u3002\u4F7F\u7528 <strong>FileLock.</strong><code>release()</code> \u91CA\u653E\u9501\u3002</p><p>\u8FD8\u53EF\u4EE5\u4F7F\u7528</p><blockquote><p><code>tryLock(long position, long size, boolean shared)</code></p></blockquote><p>\u6216</p><blockquote><p><code>lock(long position, long size, boolean shared)</code></p></blockquote><p>\u9501\u5B9A\u6587\u4EF6\u7684\u4E00\u90E8\u5206\uFF0C\u9501\u4F4F <strong>size-position</strong> \u533A\u57DF\u3002\u7B2C\u4E09\u4E2A\u53C2\u6570\u6307\u5B9A\u662F\u5426\u5171\u4EAB\u6B64\u9501\u3002</p><p>\u867D\u7136\u96F6\u53C2\u6570\u9501\u5B9A\u65B9\u6CD5\u9002\u5E94\u6587\u4EF6\u5927\u5C0F\u7684\u53D8\u5316\uFF0C\u4F46\u662F\u5982\u679C\u6587\u4EF6\u5927\u5C0F\u53D1\u751F\u53D8\u5316\uFF0C\u5177\u6709\u56FA\u5B9A\u5927\u5C0F\u7684\u9501\u4E0D\u4F1A\u53D1\u751F\u53D8\u5316\u3002\u5982\u679C\u4ECE\u4E00\u4E2A\u4F4D\u7F6E\u5230\u53E6\u4E00\u4E2A\u4F4D\u7F6E\u83B7\u5F97\u4E00\u4E2A\u9501\uFF0C\u5E76\u4E14\u6587\u4EF6\u7684\u589E\u957F\u8D85\u8FC7\u4E86 position + size \uFF0C\u90A3\u4E48\u8D85\u51FA position + size \u7684\u90E8\u5206\u6CA1\u6709\u88AB\u9501\u5B9A\u3002\u96F6\u53C2\u6570\u9501\u5B9A\u65B9\u6CD5\u9501\u5B9A\u6574\u4E2A\u6587\u4EF6\uFF0C\u5373\u4F7F\u5B83\u5728\u589E\u957F\u3002</p><p>\u5E95\u5C42\u64CD\u4F5C\u7CFB\u7EDF\u5FC5\u987B\u63D0\u4F9B\u5BF9\u72EC\u5360\u9501\u6216\u5171\u4EAB\u9501\u7684\u652F\u6301\u3002\u5982\u679C\u64CD\u4F5C\u7CFB\u7EDF\u4E0D\u652F\u6301\u5171\u4EAB\u9501\u5E76\u4E14\u5BF9\u4E00\u4E2A\u64CD\u4F5C\u7CFB\u7EDF\u53D1\u51FA\u8BF7\u6C42\uFF0C\u5219\u4F7F\u7528\u72EC\u5360\u9501\u3002\u53EF\u4EE5\u4F7F\u7528 <strong>FileLock.</strong><code>isShared()</code> \u67E5\u8BE2\u9501\u7684\u7C7B\u578B\uFF08\u5171\u4EAB\u6216\u72EC\u5360\uFF09\u3002</p><h3 id="\u6620\u5C04\u6587\u4EF6\u7684\u90E8\u5206\u9501\u5B9A" tabindex="-1"><a class="header-anchor" href="#\u6620\u5C04\u6587\u4EF6\u7684\u90E8\u5206\u9501\u5B9A" aria-hidden="true">#</a> \u6620\u5C04\u6587\u4EF6\u7684\u90E8\u5206\u9501\u5B9A</h3><p>\u6587\u4EF6\u6620\u5C04\u901A\u5E38\u7528\u4E8E\u975E\u5E38\u5927\u7684\u6587\u4EF6\u3002\u4F60\u53EF\u80FD\u9700\u8981\u9501\u5B9A\u6B64\u7C7B\u6587\u4EF6\u7684\u67D0\u4E9B\u90E8\u5206\uFF0C\u4EE5\u4FBF\u5176\u4ED6\u8FDB\u7A0B\u53EF\u4EE5\u4FEE\u6539\u672A\u9501\u5B9A\u7684\u90E8\u5206\u3002\u4F8B\u5982\uFF0C\u6570\u636E\u5E93\u5FC5\u987B\u540C\u65F6\u5BF9\u8BB8\u591A\u7528\u6237\u53EF\u7528\u3002\u8FD9\u91CC\u4F60\u53EF\u4EE5\u770B\u5230\u4E24\u4E2A\u7EBF\u7A0B\uFF0C\u6BCF\u4E2A\u7EBF\u7A0B\u90FD\u9501\u5B9A\u6587\u4EF6\u7684\u4E0D\u540C\u90E8\u5206:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// newio/LockingMappedFiles.java</span>
<span class="token comment">// (c)2017 MindView LLC: see Copyright.txt</span>
<span class="token comment">// \u6211\u4EEC\u65E0\u6CD5\u4FDD\u8BC1\u8BE5\u4EE3\u7801\u662F\u5426\u9002\u7528\u4E8E\u5176\u4ED6\u7528\u9014\u3002</span>
<span class="token comment">// \u8BBF\u95EE http://OnJava8.com \u4E86\u89E3\u66F4\u591A\u672C\u4E66\u4FE1\u606F\u3002</span>
<span class="token comment">// Locking portions of a mapped file</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>channels<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LockingMappedFiles</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> LENGTH <span class="token operator">=</span> <span class="token number">0x8FFFFFF</span><span class="token punctuation">;</span> <span class="token comment">// 128 MB</span>
  <span class="token keyword">static</span> <span class="token class-name">FileChannel</span> fc<span class="token punctuation">;</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span>
  <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    fc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RandomAccessFile</span><span class="token punctuation">(</span><span class="token string">&quot;test.dat&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;rw&quot;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">MappedByteBuffer</span> out <span class="token operator">=</span> fc<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>
      <span class="token class-name">FileChannel<span class="token punctuation">.</span>MapMode</span><span class="token punctuation">.</span>READ_WRITE<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> LENGTH<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> LENGTH<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
      out<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span><span class="token char">&#39;x&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">new</span> <span class="token class-name">LockAndModify</span><span class="token punctuation">(</span>out<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span> <span class="token operator">+</span> LENGTH<span class="token operator">/</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">new</span> <span class="token class-name">LockAndModify</span><span class="token punctuation">(</span>
      out<span class="token punctuation">,</span> LENGTH<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">,</span> LENGTH<span class="token operator">/</span><span class="token number">2</span> <span class="token operator">+</span> LENGTH<span class="token operator">/</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">LockAndModify</span> <span class="token keyword">extends</span> <span class="token class-name">Thread</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">ByteBuffer</span> buff<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> start<span class="token punctuation">,</span> end<span class="token punctuation">;</span>
    <span class="token class-name">LockAndModify</span><span class="token punctuation">(</span><span class="token class-name">ByteBuffer</span> mbb<span class="token punctuation">,</span> <span class="token keyword">int</span> start<span class="token punctuation">,</span> <span class="token keyword">int</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>start <span class="token operator">=</span> start<span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>end <span class="token operator">=</span> end<span class="token punctuation">;</span>
      mbb<span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span>end<span class="token punctuation">)</span><span class="token punctuation">;</span>
      mbb<span class="token punctuation">.</span><span class="token function">position</span><span class="token punctuation">(</span>start<span class="token punctuation">)</span><span class="token punctuation">;</span>
      buff <span class="token operator">=</span> mbb<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment">// Exclusive lock with no overlap:</span>
        <span class="token class-name">FileLock</span> fl <span class="token operator">=</span> fc<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> end<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
          <span class="token string">&quot;Locked: &quot;</span><span class="token operator">+</span> start <span class="token operator">+</span><span class="token string">&quot; to &quot;</span><span class="token operator">+</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Perform modification:</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>buff<span class="token punctuation">.</span><span class="token function">position</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> buff<span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
          buff<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span><span class="token punctuation">(</span>buff<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        fl<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
          <span class="token string">&quot;Released: &quot;</span> <span class="token operator">+</span> start <span class="token operator">+</span> <span class="token string">&quot; to &quot;</span> <span class="token operator">+</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Locked: 75497471 to 113246206
Locked: 0 to 50331647
Released: 75497471 to 113246206
Released: 0 to 50331647
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>LockAndModify</strong> \u7EBF\u7A0B\u7C7B\u8BBE\u7F6E\u7F13\u51B2\u533A\u5E76\u521B\u5EFA\u8981\u4FEE\u6539\u7684 <code>slice()</code>\uFF0C\u5728 <code>run()</code> \u4E2D\uFF0C\u9501\u5728\u6587\u4EF6\u901A\u9053\u4E0A\u83B7\u53D6\uFF08\u4E0D\u80FD\u5728\u7F13\u51B2\u533A\u4E0A\u83B7\u53D6\u9501\u2014\u53EA\u80FD\u5728\u901A\u9053\u4E0A\u83B7\u53D6\u9501\uFF09\u3002<code>lock()</code> \u7684\u8C03\u7528\u975E\u5E38\u7C7B\u4F3C\u4E8E\u83B7\u53D6\u5BF9\u8C61\u4E0A\u7684\u7EBF\u7A0B\u9501 \u2014\u2014 \u73B0\u5728\u6709\u4E86\u4E00\u4E2A\u201C\u4E34\u754C\u533A\u201D\uFF0C\u53EF\u4EE5\u5BF9\u6587\u4EF6\u7684\u8FD9\u90E8\u5206\u8FDB\u884C\u72EC\u5360\u8BBF\u95EE\u3002<a href="%E6%9B%B4%E5%A4%9A%E8%AF%A6%E6%83%85%E5%8F%AF%E5%8F%82%E8%80%83%5B%E9%99%84%E5%BD%95:%E5%B9%B6%E5%8F%91%E5%BA%95%E5%B1%82%E5%8E%9F%E7%90%86%5D(./book/Appendix-Low-Level-Concurrency.md)%E3%80%82">^1</a></p><p>\u5F53 JVM \u9000\u51FA\u6216\u5173\u95ED\u83B7\u53D6\u9501\u7684\u901A\u9053\u65F6\uFF0C\u9501\u4F1A\u81EA\u52A8\u91CA\u653E\uFF0C\u4F46\u662F\u4F60\u4E5F\u53EF\u4EE5\u663E\u5F0F\u5730\u8C03\u7528 <strong>FileLock</strong> \u5BF9\u8C61\u4E0A\u7684 <code>release()</code>\uFF0C\u5982\u4E0A\u6240\u793A\u3002</p><div style="page-break-after:always;"></div>`,132);function R(T,M){const t=e("RouterLink");return o(),c("div",null,[h,s("p",null,[B,x,S,q,C,l(t,{to:"/docs/reprint/onjava8/book/17-Files.html"},{default:i(()=>[E]),_:1}),I,F,j,O,_]),L])}var A=p(w,[["render",R],["__file","Appendix-New-IO.html.vue"]]);export{A as default};
