import{_ as n,o as s,c as a,e as t}from"./app.205a3d76.js";const p={},e=t(`<p>[TOC]</p><h1 id="\u7B2C\u4E8C\u5341\u4E09\u7AE0-\u6CE8\u89E3" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E8C\u5341\u4E09\u7AE0-\u6CE8\u89E3" aria-hidden="true">#</a> \u7B2C\u4E8C\u5341\u4E09\u7AE0 \u6CE8\u89E3</h1><p>\u6CE8\u89E3\uFF08\u4E5F\u88AB\u79F0\u4E3A\u5143\u6570\u636E\uFF09\u4E3A\u6211\u4EEC\u5728\u4EE3\u7801\u4E2D\u6DFB\u52A0\u4FE1\u606F\u63D0\u4F9B\u4E86\u4E00\u79CD\u5F62\u5F0F\u5316\u7684\u65B9\u5F0F\uFF0C\u4F7F\u6211\u4EEC\u53EF\u4EE5\u5728\u7A0D\u540E\u7684\u67D0\u4E2A\u65F6\u523B\u66F4\u5BB9\u6613\u7684\u4F7F\u7528\u8FD9\u4E9B\u6570\u636E\u3002</p><p>\u6CE8\u89E3\u5728\u4E00\u5B9A\u7A0B\u5EA6\u4E0A\u662F\u628A\u5143\u6570\u636E\u548C\u6E90\u4EE3\u7801\u6587\u4EF6\u7ED3\u5408\u5728\u4E00\u8D77\u7684\u8D8B\u52BF\u6240\u6FC0\u53D1\u7684\uFF0C\u800C\u4E0D\u662F\u4FDD\u5B58\u5728\u5916\u90E8\u6587\u6863\u3002\u8FD9\u540C\u6837\u662F\u5BF9\u50CF C# \u8BED\u8A00\u5BF9\u4E8E Java \u8BED\u8A00\u7279\u6027\u538B\u529B\u7684\u4E00\u79CD\u56DE\u5E94\u3002</p><p>\u6CE8\u89E3\u662F Java 5 \u6240\u5F15\u5165\u7684\u4F17\u591A\u8BED\u8A00\u53D8\u5316\u4E4B\u4E00\u3002\u5B83\u4EEC\u63D0\u4F9B\u4E86 Java \u65E0\u6CD5\u8868\u8FBE\u7684\u4F46\u662F\u4F60\u9700\u8981\u5B8C\u6574\u8868\u8FF0\u7A0B\u5E8F\u6240\u9700\u7684\u4FE1\u606F\u3002\u56E0\u6B64\uFF0C\u6CE8\u89E3\u4F7F\u5F97\u6211\u4EEC\u53EF\u4EE5\u4EE5\u7F16\u8BD1\u5668\u9A8C\u8BC1\u7684\u683C\u5F0F\u5B58\u50A8\u7A0B\u5E8F\u7684\u989D\u5916\u4FE1\u606F\u3002\u6CE8\u89E3\u53EF\u4EE5\u751F\u6210\u63CF\u8FF0\u7B26\u6587\u4EF6\uFF0C\u751A\u81F3\u662F\u65B0\u7684\u7C7B\u5B9A\u4E49\uFF0C\u5E76\u4E14\u6709\u52A9\u4E8E\u51CF\u8F7B\u7F16\u5199\u201C\u6837\u677F\u201D\u4EE3\u7801\u7684\u8D1F\u62C5\u3002\u901A\u8FC7\u4F7F\u7528\u6CE8\u89E3\uFF0C\u4F60\u53EF\u4EE5\u5C06\u5143\u6570\u636E\u4FDD\u5B58\u5728 Java \u6E90\u4EE3\u7801\u4E2D\u3002\u5E76\u62E5\u6709\u5982\u4E0B\u4F18\u52BF\uFF1A\u7B80\u5355\u6613\u8BFB\u7684\u4EE3\u7801\uFF0C\u7F16\u8BD1\u5668\u7C7B\u578B\u68C0\u67E5\uFF0C\u4F7F\u7528 annotation API \u4E3A\u81EA\u5DF1\u7684\u6CE8\u89E3\u6784\u9020\u5904\u7406\u5DE5\u5177\u3002\u5373\u4F7F Java \u5B9A\u4E49\u4E86\u4E00\u4E9B\u7C7B\u578B\u7684\u5143\u6570\u636E\uFF0C\u4F46\u662F\u4E00\u822C\u6765\u8BF4\u6CE8\u89E3\u7C7B\u578B\u7684\u6DFB\u52A0\u548C\u5982\u4F55\u4F7F\u7528\u5B8C\u5168\u53D6\u51B3\u4E8E\u4F60\u3002</p><p>\u6CE8\u89E3\u7684\u8BED\u6CD5\u5341\u5206\u7B80\u5355\uFF0C\u4E3B\u8981\u662F\u5728\u73B0\u6709\u8BED\u6CD5\u4E2D\u6DFB\u52A0 @ \u7B26\u53F7\u3002Java 5 \u5F15\u5165\u4E86\u524D\u4E09\u79CD\u5B9A\u4E49\u5728 <strong>java.lang</strong> \u5305\u4E2D\u7684\u6CE8\u89E3\uFF1A</p><ul><li><strong>@Override</strong>\uFF1A\u8868\u793A\u5F53\u524D\u7684\u65B9\u6CD5\u5B9A\u4E49\u5C06\u8986\u76D6\u57FA\u7C7B\u7684\u65B9\u6CD5\u3002\u5982\u679C\u4F60\u4E0D\u5C0F\u5FC3\u62FC\u5199\u9519\u8BEF\uFF0C\u6216\u8005\u65B9\u6CD5\u7B7E\u540D\u88AB\u9519\u8BEF\u62FC\u5199\u7684\u65F6\u5019\uFF0C\u7F16\u8BD1\u5668\u5C31\u4F1A\u53D1\u51FA\u9519\u8BEF\u63D0\u793A\u3002</li><li><strong>@Deprecated</strong>\uFF1A\u5982\u679C\u4F7F\u7528\u8BE5\u6CE8\u89E3\u7684\u5143\u7D20\u88AB\u8C03\u7528\uFF0C\u7F16\u8BD1\u5668\u5C31\u4F1A\u53D1\u51FA\u8B66\u544A\u4FE1\u606F\u3002</li><li><strong>@SuppressWarnings</strong>\uFF1A\u5173\u95ED\u4E0D\u5F53\u7684\u7F16\u8BD1\u5668\u8B66\u544A\u4FE1\u606F\u3002</li><li><strong>@SafeVarargs</strong>\uFF1A\u5728 Java 7 \u4E2D\u52A0\u5165\u7528\u4E8E\u7981\u6B62\u5BF9\u5177\u6709\u6CDB\u578Bvarargs\u53C2\u6570\u7684\u65B9\u6CD5\u6216\u6784\u9020\u51FD\u6570\u7684\u8C03\u7528\u65B9\u53D1\u51FA\u8B66\u544A\u3002</li><li><strong>@FunctionalInterface</strong>\uFF1AJava 8 \u4E2D\u52A0\u5165\u7528\u4E8E\u8868\u793A\u7C7B\u578B\u58F0\u660E\u4E3A\u51FD\u6570\u5F0F\u63A5\u53E3\u3002</li></ul><p>\u8FD8\u6709 5 \u79CD\u989D\u5916\u7684\u6CE8\u89E3\u7C7B\u578B\u7528\u4E8E\u521B\u9020\u65B0\u7684\u6CE8\u89E3\u3002\u4F60\u5C06\u4F1A\u5728\u8FD9\u4E00\u7AE0\u5B66\u4E60\u5B83\u4EEC\u3002</p><p>\u6BCF\u5F53\u521B\u5EFA\u6D89\u53CA\u91CD\u590D\u5DE5\u4F5C\u7684\u7C7B\u6216\u63A5\u53E3\u65F6\uFF0C\u4F60\u901A\u5E38\u53EF\u4EE5\u4F7F\u7528\u6CE8\u89E3\u6765\u81EA\u52A8\u5316\u548C\u7B80\u5316\u6D41\u7A0B\u3002\u4F8B\u5982\u5728 Enterprise JavaBean\uFF08EJB\uFF09\u4E2D\u7684\u8BB8\u591A\u989D\u5916\u5DE5\u4F5C\u5C31\u662F\u901A\u8FC7\u6CE8\u89E3\u6765\u6D88\u9664\u7684\u3002</p><p>\u6CE8\u89E3\u7684\u51FA\u73B0\u53EF\u4EE5\u66FF\u4EE3\u4E00\u4E9B\u73B0\u6709\u7684\u7CFB\u7EDF\uFF0C\u4F8B\u5982 XDoclet\uFF0C\u5B83\u662F\u4E00\u79CD\u72EC\u7ACB\u7684\u6587\u6863\u5316\u5DE5\u5177\uFF0C\u4E13\u95E8\u8BBE\u8BA1\u7528\u6765\u751F\u6210\u6CE8\u89E3\u98CE\u683C\u7684\u6587\u6863\u3002\u4E0E\u4E4B\u76F8\u6BD4\uFF0C\u6CE8\u89E3\u662F\u771F\u6B63\u8BED\u8A00\u5C42\u7EA7\u7684\u6982\u5FF5\uFF0C\u4EE5\u524D\u6784\u9020\u51FA\u6765\u5C31\u4EAB\u6709\u7F16\u8BD1\u5668\u7684\u7C7B\u578B\u68C0\u67E5\u4FDD\u62A4\u3002\u6CE8\u89E3\u5728\u6E90\u4EE3\u7801\u7EA7\u522B\u4FDD\u5B58\u6240\u6709\u4FE1\u606F\u800C\u4E0D\u662F\u901A\u8FC7\u6CE8\u91CA\u6587\u5B57\uFF0C\u8FD9\u4F7F\u5F97\u4EE3\u7801\u66F4\u52A0\u6574\u6D01\u548C\u4FBF\u4E8E\u7EF4\u62A4\u3002\u901A\u8FC7\u4F7F\u7528\u62D3\u5C55\u7684 annotation API \u6216\u7A0D\u540E\u5728\u672C\u7AE0\u8282\u53EF\u4EE5\u770B\u5230\u7684\u5916\u90E8\u7684\u5B57\u8282\u7801\u5DE5\u5177\u7C7B\u5E93\uFF0C\u4F60\u4F1A\u62E5\u6709\u5BF9\u6E90\u4EE3\u7801\u53CA\u5B57\u8282\u7801\u5F3A\u5927\u7684\u68C0\u67E5\u4E0E\u64CD\u4F5C\u80FD\u529B\u3002</p><h2 id="\u57FA\u672C\u8BED\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u8BED\u6CD5" aria-hidden="true">#</a> \u57FA\u672C\u8BED\u6CD5</h2><p>\u5728\u4E0B\u9762\u7684\u4F8B\u5B50\u4E2D\uFF0C\u4F7F\u7528 <code>@Test</code> \u5BF9 <code>testExecute()</code> \u8FDB\u884C\u6CE8\u89E3\u3002\u8BE5\u6CE8\u89E3\u672C\u8EAB\u4E0D\u505A\u4EFB\u4F55\u4E8B\u60C5\uFF0C\u4F46\u662F\u7F16\u8BD1\u5668\u8981\u4FDD\u8BC1\u5176\u7C7B\u8DEF\u5F84\u4E0A\u6709 <code>@Test</code> \u6CE8\u89E3\u7684\u5B9A\u4E49\u3002\u4F60\u5C06\u5728\u672C\u7AE0\u770B\u5230\uFF0C\u6211\u4EEC\u901A\u8FC7\u6CE8\u89E3\u521B\u5EFA\u4E86\u4E00\u4E2A\u5DE5\u5177\u7528\u4E8E\u8FD0\u884C\u8FD9\u4E2A\u65B9\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// annotations/Testable.java</span>
<span class="token keyword">package</span> <span class="token namespace">annotations</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">onjava<span class="token punctuation">.</span>atunit<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Testable</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Executing..&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">testExecute</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u88AB\u6CE8\u89E3\u6807\u6CE8\u7684\u65B9\u6CD5\u548C\u5176\u4ED6\u65B9\u6CD5\u6CA1\u6709\u4EFB\u4F55\u533A\u522B\u3002\u5728\u8FD9\u4E2A\u4F8B\u5B50\u4E2D\uFF0C\u6CE8\u89E3 <code>@Test</code> \u53EF\u4EE5\u548C\u4EFB\u4F55\u4FEE\u9970\u7B26\u5171\u540C\u7528\u4E8E\u65B9\u6CD5\uFF0C\u8BF8\u5982 <strong>public</strong>\u3001<strong>static</strong> \u6216 <strong>void</strong>\u3002\u4ECE\u8BED\u6CD5\u7684\u89D2\u5EA6\u4E0A\u770B\uFF0C\u6CE8\u89E3\u548C\u4FEE\u9970\u7B26\u7684\u4F7F\u7528\u65B9\u5F0F\u662F\u4E00\u81F4\u7684\u3002</p><h3 id="\u5B9A\u4E49\u6CE8\u89E3" tabindex="-1"><a class="header-anchor" href="#\u5B9A\u4E49\u6CE8\u89E3" aria-hidden="true">#</a> \u5B9A\u4E49\u6CE8\u89E3</h3><p>\u5982\u4E0B\u662F\u4E00\u4E2A\u6CE8\u89E3\u7684\u5B9A\u4E49\u3002\u6CE8\u89E3\u7684\u5B9A\u4E49\u770B\u8D77\u6765\u5F88\u50CF\u63A5\u53E3\u7684\u5B9A\u4E49\u3002\u4E8B\u5B9E\u4E0A\uFF0C\u5B83\u4EEC\u548C\u5176\u4ED6 Java \u63A5\u53E3\u4E00\u6837\uFF0C\u4E5F\u4F1A\u88AB\u7F16\u8BD1\u6210 class \u6587\u4EF6\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// onjava/atunit/Test.java</span>
<span class="token comment">// The @Test tag</span>
<span class="token keyword">package</span> <span class="token namespace">onjava<span class="token punctuation">.</span>atunit</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span>METHOD<span class="token punctuation">)</span>
<span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span>RUNTIME<span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9664\u4E86 @ \u7B26\u53F7\u4E4B\u5916\uFF0C <code>@Test</code> \u7684\u5B9A\u4E49\u770B\u8D77\u6765\u66F4\u50CF\u4E00\u4E2A\u7A7A\u63A5\u53E3\u3002\u6CE8\u89E3\u7684\u5B9A\u4E49\u4E5F\u9700\u8981\u4E00\u4E9B\u5143\u6CE8\u89E3\uFF08meta-annotation\uFF09\uFF0C\u6BD4\u5982 <code>@Target</code> \u548C <code>@Retention</code>\u3002<code>@Target</code> \u5B9A\u4E49\u4F60\u7684\u6CE8\u89E3\u53EF\u4EE5\u5E94\u7528\u5728\u54EA\u91CC\uFF08\u4F8B\u5982\u662F\u65B9\u6CD5\u8FD8\u662F\u5B57\u6BB5\uFF09\u3002<code>@Retention</code> \u5B9A\u4E49\u4E86\u6CE8\u89E3\u5728\u54EA\u91CC\u53EF\u7528\uFF0C\u5728\u6E90\u4EE3\u7801\u4E2D\uFF08SOURCE\uFF09\uFF0Cclass\u6587\u4EF6\uFF08CLASS\uFF09\u4E2D\u6216\u8005\u662F\u5728\u8FD0\u884C\u65F6\uFF08RUNTIME\uFF09\u3002</p><p>\u6CE8\u89E3\u901A\u5E38\u4F1A\u5305\u542B\u4E00\u4E9B\u8868\u793A\u7279\u5B9A\u503C\u7684\u5143\u7D20\u3002\u5F53\u5206\u6790\u5904\u7406\u6CE8\u89E3\u7684\u65F6\u5019\uFF0C\u7A0B\u5E8F\u6216\u5DE5\u5177\u53EF\u4EE5\u5229\u7528\u8FD9\u4E9B\u503C\u3002\u6CE8\u89E3\u7684\u5143\u7D20\u770B\u8D77\u6765\u5C31\u50CF\u63A5\u53E3\u7684\u65B9\u6CD5\uFF0C\u4F46\u662F\u53EF\u4EE5\u4E3A\u5176\u6307\u5B9A\u9ED8\u8BA4\u503C\u3002</p><p>\u4E0D\u5305\u542B\u4EFB\u4F55\u5143\u7D20\u7684\u6CE8\u89E3\u79F0\u4E3A\u6807\u8BB0\u6CE8\u89E3\uFF08marker annotation\uFF09\uFF0C\u4F8B\u5982\u4E0A\u4F8B\u4E2D\u7684 <code>@Test</code> \u5C31\u662F\u6807\u8BB0\u6CE8\u89E3\u3002</p><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u7B80\u5355\u7684\u6CE8\u89E3\uFF0C\u6211\u4EEC\u53EF\u4EE5\u7528\u5B83\u6765\u8FFD\u8E2A\u9879\u76EE\u4E2D\u7684\u7528\u4F8B\u3002\u7A0B\u5E8F\u5458\u53EF\u4EE5\u4F7F\u7528\u8BE5\u6CE8\u89E3\u6765\u6807\u6CE8\u6EE1\u8DB3\u7279\u5B9A\u7528\u4F8B\u7684\u4E00\u4E2A\u65B9\u6CD5\u6216\u8005\u4E00\u7EC4\u65B9\u6CD5\u3002\u4E8E\u662F\uFF0C\u9879\u76EE\u7ECF\u7406\u53EF\u4EE5\u901A\u8FC7\u7EDF\u8BA1\u5DF2\u7ECF\u5B9E\u73B0\u7684\u7528\u4F8B\u6765\u638C\u63A7\u9879\u76EE\u7684\u8FDB\u5C55\uFF0C\u800C\u5F00\u53D1\u8005\u5728\u7EF4\u62A4\u9879\u76EE\u65F6\u53EF\u4EE5\u8F7B\u677E\u7684\u627E\u5230\u7528\u4F8B\u7528\u4E8E\u66F4\u65B0\uFF0C\u6216\u8005\u4ED6\u4EEC\u53EF\u4EE5\u8C03\u8BD5\u7CFB\u7EDF\u4E2D\u4E1A\u52A1\u903B\u8F91\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// annotations/UseCase.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span>METHOD<span class="token punctuation">)</span>
<span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span>RUNTIME<span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">UseCase</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> <span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> <span class="token function">description</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;no description&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F <strong>id</strong> \u548C <strong>description</strong> \u4E0E\u65B9\u6CD5\u5B9A\u4E49\u7C7B\u4F3C\u3002\u7531\u4E8E\u7F16\u8BD1\u5668\u4F1A\u5BF9 <strong>id</strong> \u8FDB\u884C\u7C7B\u578B\u68C0\u67E5\uFF0C\u56E0\u6B64\u5C06\u8DDF\u8E2A\u6570\u636E\u5E93\u4E0E\u7528\u4F8B\u6587\u6863\u548C\u6E90\u4EE3\u7801\u76F8\u5173\u8054\u662F\u53EF\u9760\u7684\u65B9\u5F0F\u3002<strong>description</strong> \u5143\u7D20\u62E5\u6709\u4E00\u4E2A <strong>default</strong> \u503C\uFF0C\u5982\u679C\u5728\u6CE8\u89E3\u67D0\u4E2A\u65B9\u6CD5\u65F6\u6CA1\u6709\u7ED9\u51FA <strong>description</strong> \u7684\u503C\u3002\u5219\u8BE5\u6CE8\u89E3\u7684\u5904\u7406\u5668\u4F1A\u4F7F\u7528\u6B64\u5143\u7D20\u7684\u9ED8\u8BA4\u503C\u3002</p><p>\u5728\u4E0B\u9762\u7684\u7C7B\u4E2D\uFF0C\u6709\u4E09\u4E2A\u65B9\u6CD5\u88AB\u6CE8\u89E3\u4E3A\u7528\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// annotations/PasswordUtils.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PasswordUtils</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@UseCase</span><span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">47</span><span class="token punctuation">,</span> description <span class="token operator">=</span>
            <span class="token string">&quot;Passwords must contain at least one numeric&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">validatePassword</span><span class="token punctuation">(</span><span class="token class-name">String</span> passwd<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>passwd<span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span><span class="token string">&quot;\\\\w*\\\\d\\\\w*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@UseCase</span><span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">48</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">encryptPassword</span><span class="token punctuation">(</span><span class="token class-name">String</span> passwd<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span>passwd<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@UseCase</span><span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token number">49</span><span class="token punctuation">,</span> description <span class="token operator">=</span>
            <span class="token string">&quot;New passwords can&#39;t equal previously used ones&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">checkForNewPassword</span><span class="token punctuation">(</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> prevPasswords<span class="token punctuation">,</span> <span class="token class-name">String</span> passwd<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token operator">!</span>prevPasswords<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>passwd<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u89E3\u7684\u5143\u7D20\u5728\u4F7F\u7528\u65F6\u8868\u73B0\u4E3A \u540D-\u503C \u5BF9\u7684\u5F62\u5F0F\uFF0C\u5E76\u4E14\u9700\u8981\u653E\u7F6E\u5728 <code>@UseCase</code> \u58F0\u660E\u4E4B\u540E\u7684\u62EC\u53F7\u5185\u3002\u5728 <code>encryptPassword()</code> \u65B9\u6CD5\u7684\u6CE8\u89E3\u4E2D\uFF0C\u5E76\u6CA1\u6709\u7ED9\u51FA <strong>description</strong> \u7684\u503C\uFF0C\u6240\u4EE5\u5728 <strong>@interface UseCase</strong> \u7684\u6CE8\u89E3\u5904\u7406\u5668\u5206\u6790\u5904\u7406\u8FD9\u4E2A\u7C7B\u7684\u65F6\u5019\u4F1A\u4F7F\u7528\u8BE5\u5143\u7D20\u7684\u9ED8\u8BA4\u503C\u3002</p><p>\u4F60\u5E94\u8BE5\u80FD\u591F\u60F3\u8C61\u5230\u5982\u4F55\u4F7F\u7528\u8FD9\u5957\u5DE5\u5177\u6765\u201C\u52FE\u52D2\u201D\u51FA\u5C06\u8981\u5EFA\u9020\u7684\u7CFB\u7EDF\uFF0C\u7136\u540E\u5728\u5EFA\u9020\u7684\u8FC7\u7A0B\u4E2D\u9010\u6E10\u5B9E\u73B0\u7CFB\u7EDF\u7684\u5404\u9879\u529F\u80FD\u3002</p><h3 id="\u5143\u6CE8\u89E3" tabindex="-1"><a class="header-anchor" href="#\u5143\u6CE8\u89E3" aria-hidden="true">#</a> \u5143\u6CE8\u89E3</h3><p>Java \u8BED\u8A00\u4E2D\u76EE\u524D\u6709 5 \u79CD\u6807\u51C6\u6CE8\u89E3\uFF08\u524D\u9762\u4ECB\u7ECD\u8FC7\uFF09\uFF0C\u4EE5\u53CA 5 \u79CD\u5143\u6CE8\u89E3\u3002\u5143\u6CE8\u89E3\u7528\u4E8E\u6CE8\u89E3\u5176\u4ED6\u7684\u6CE8\u89E3</p><table><thead><tr><th>\u6CE8\u89E3</th><th>\u89E3\u91CA</th></tr></thead><tbody><tr><td>@Target</td><td>\u8868\u793A\u6CE8\u89E3\u53EF\u4EE5\u7528\u4E8E\u54EA\u4E9B\u5730\u65B9\u3002\u53EF\u80FD\u7684 <strong>ElementType</strong> \u53C2\u6570\u5305\u62EC\uFF1A<br><strong>CONSTRUCTOR</strong>\uFF1A\u6784\u9020\u5668\u7684\u58F0\u660E\uFF1B<br><strong>FIELD</strong>\uFF1A\u5B57\u6BB5\u58F0\u660E\uFF08\u5305\u62EC enum \u5B9E\u4F8B\uFF09\uFF1B<br><strong>LOCAL_VARIABLE</strong>\uFF1A\u5C40\u90E8\u53D8\u91CF\u58F0\u660E\uFF1B<br><strong>METHOD</strong>\uFF1A\u65B9\u6CD5\u58F0\u660E\uFF1B<br><strong>PACKAGE</strong>\uFF1A\u5305\u58F0\u660E\uFF1B<br><strong>PARAMETER</strong>\uFF1A\u53C2\u6570\u58F0\u660E\uFF1B<br><strong>TYPE</strong>\uFF1A\u7C7B\u3001\u63A5\u53E3\uFF08\u5305\u62EC\u6CE8\u89E3\u7C7B\u578B\uFF09\u6216\u8005 enum \u58F0\u660E\u3002</td></tr><tr><td>@Retention</td><td>\u8868\u793A\u6CE8\u89E3\u4FE1\u606F\u4FDD\u5B58\u7684\u65F6\u957F\u3002\u53EF\u9009\u7684 <strong>RetentionPolicy</strong> \u53C2\u6570\u5305\u62EC\uFF1A<br><strong>SOURCE</strong>\uFF1A\u6CE8\u89E3\u5C06\u88AB\u7F16\u8BD1\u5668\u4E22\u5F03\uFF1B<br><strong>CLASS</strong>\uFF1A\u6CE8\u89E3\u5728 class \u6587\u4EF6\u4E2D\u53EF\u7528\uFF0C\u4F46\u662F\u4F1A\u88AB VM \u4E22\u5F03\uFF1B<br><strong>RUNTIME</strong>\uFF1AVM \u5C06\u5728\u8FD0\u884C\u671F\u4E5F\u4FDD\u7559\u6CE8\u89E3\uFF0C\u56E0\u6B64\u53EF\u4EE5\u901A\u8FC7\u53CD\u5C04\u673A\u5236\u8BFB\u53D6\u6CE8\u89E3\u7684\u4FE1\u606F\u3002</td></tr><tr><td>@Documented</td><td>\u5C06\u6B64\u6CE8\u89E3\u4FDD\u5B58\u5728 Javadoc \u4E2D</td></tr><tr><td>@Inherited</td><td>\u5141\u8BB8\u5B50\u7C7B\u7EE7\u627F\u7236\u7C7B\u7684\u6CE8\u89E3</td></tr><tr><td>@Repeatable</td><td>\u5141\u8BB8\u4E00\u4E2A\u6CE8\u89E3\u53EF\u4EE5\u88AB\u4F7F\u7528\u4E00\u6B21\u6216\u8005\u591A\u6B21\uFF08Java 8\uFF09\u3002</td></tr></tbody></table><p>\u5927\u591A\u6570\u65F6\u5019\uFF0C\u7A0B\u5E8F\u5458\u5B9A\u4E49\u81EA\u5DF1\u7684\u6CE8\u89E3\uFF0C\u5E76\u7F16\u5199\u81EA\u5DF1\u7684\u5904\u7406\u5668\u6765\u5904\u7406\u4ED6\u4EEC\u3002</p><h2 id="\u7F16\u5199\u6CE8\u89E3\u5904\u7406\u5668" tabindex="-1"><a class="header-anchor" href="#\u7F16\u5199\u6CE8\u89E3\u5904\u7406\u5668" aria-hidden="true">#</a> \u7F16\u5199\u6CE8\u89E3\u5904\u7406\u5668</h2><p>\u5982\u679C\u6CA1\u6709\u7528\u4E8E\u8BFB\u53D6\u6CE8\u89E3\u7684\u5DE5\u5177\uFF0C\u90A3\u4E48\u6CE8\u89E3\u4E0D\u4F1A\u6BD4\u6CE8\u91CA\u66F4\u6709\u7528\u3002\u4F7F\u7528\u6CE8\u89E3\u4E2D\u4E00\u4E2A\u5F88\u91CD\u8981\u7684\u90E8\u5206\u5C31\u662F\uFF0C\u521B\u5EFA\u4E0E\u4F7F\u7528\u6CE8\u89E3\u5904\u7406\u5668\u3002Java \u62D3\u5C55\u4E86\u53CD\u5C04\u673A\u5236\u7684 API \u7528\u4E8E\u5E2E\u52A9\u4F60\u521B\u9020\u8FD9\u7C7B\u5DE5\u5177\u3002\u540C\u65F6\u4ED6\u8FD8\u63D0\u4F9B\u4E86 javac \u7F16\u8BD1\u5668\u94A9\u5B50\u5728\u7F16\u8BD1\u65F6\u4F7F\u7528\u6CE8\u89E3\u3002</p><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u975E\u5E38\u7B80\u5355\u7684\u6CE8\u89E3\u5904\u7406\u5668\uFF0C\u6211\u4EEC\u7528\u5B83\u6765\u8BFB\u53D6\u88AB\u6CE8\u89E3\u7684 <strong>PasswordUtils</strong> \u7C7B\uFF0C\u5E76\u4E14\u4F7F\u7528\u53CD\u5C04\u673A\u5236\u6765\u5BFB\u627E <strong>@UseCase</strong> \u6807\u8BB0\u3002\u7ED9\u5B9A\u4E00\u7EC4 <strong>id</strong> \u503C\uFF0C\u7136\u540E\u5217\u51FA\u5728 <strong>PasswordUtils</strong> \u4E2D\u627E\u5230\u7684\u7528\u4F8B\uFF0C\u4EE5\u53CA\u7F3A\u5931\u7684\u7528\u4F8B\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// annotations/UseCaseTracker.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UseCaseTracker</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span>
    <span class="token function">trackUseCases</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> useCases<span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> cl<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Method</span> m <span class="token operator">:</span> cl<span class="token punctuation">.</span><span class="token function">getDeclaredMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">UseCase</span> uc <span class="token operator">=</span> m<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token class-name">UseCase</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>uc <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Found Use Case &quot;</span> <span class="token operator">+</span>
                        uc<span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\n &quot;</span> <span class="token operator">+</span> uc<span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                useCases<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>uc<span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        useCases<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>i <span class="token operator">-&gt;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Missing use case &quot;</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> useCases <span class="token operator">=</span> <span class="token class-name">IntStream</span><span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token number">47</span><span class="token punctuation">,</span> <span class="token number">51</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">boxed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">trackUseCases</span><span class="token punctuation">(</span>useCases<span class="token punctuation">,</span> <span class="token class-name">PasswordUtils</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u4E3A\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Found</span> <span class="token class-name">Use</span> <span class="token class-name">Case</span> <span class="token number">48</span>
no description
<span class="token class-name">Found</span> <span class="token class-name">Use</span> <span class="token class-name">Case</span> <span class="token number">47</span>
<span class="token class-name">Passwords</span> must contain at least one numeric
<span class="token class-name">Found</span> <span class="token class-name">Use</span> <span class="token class-name">Case</span> <span class="token number">49</span>
<span class="token class-name">New</span> passwords can&#39;t equal previously used ones
<span class="token class-name">Missing</span> use <span class="token keyword">case</span> <span class="token number">50</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u7A0B\u5E8F\u7528\u4E86\u4E24\u4E2A\u53CD\u5C04\u7684\u65B9\u6CD5\uFF1A<code>getDeclaredMethods()</code> \u548C <code>getAnnotation()</code>\uFF0C\u5B83\u4EEC\u90FD\u5C5E\u4E8E <strong>AnnotatedElement</strong> \u63A5\u53E3\uFF08<strong>Class</strong>\uFF0C<strong>Method</strong> \u4E0E <strong>Field</strong> \u7C7B\u90FD\u5B9E\u73B0\u4E86\u8BE5\u63A5\u53E3\uFF09\u3002<code>getAnnotation()</code> \u65B9\u6CD5\u8FD4\u56DE\u6307\u5B9A\u7C7B\u578B\u7684\u6CE8\u89E3\u5BF9\u8C61\uFF0C\u5728\u672C\u4F8B\u4E2D\u5C31\u662F \u201C<strong>UseCase</strong>\u201D\u3002\u5982\u679C\u88AB\u6CE8\u89E3\u7684\u65B9\u6CD5\u4E0A\u6CA1\u6709\u8BE5\u7C7B\u578B\u7684\u6CE8\u89E3\uFF0C\u8FD4\u56DE\u503C\u5C31\u4E3A <strong>null</strong>\u3002\u6211\u4EEC\u901A\u8FC7\u8C03\u7528 <code>id()</code> \u548C <code>description()</code> \u65B9\u6CD5\u6765\u63D0\u53D6\u5143\u7D20\u503C\u3002\u6CE8\u610F <code>encryptPassword()</code> \u65B9\u6CD5\u5728\u6CE8\u89E3\u7684\u65F6\u5019\u6CA1\u6709\u6307\u5B9A <strong>description</strong> \u7684\u503C\uFF0C\u56E0\u6B64\u5904\u7406\u5668\u5728\u5904\u7406\u5B83\u5BF9\u5E94\u7684\u6CE8\u89E3\u65F6\uFF0C\u901A\u8FC7 <code>description()</code> \u53D6\u5F97\u7684\u662F\u9ED8\u8BA4\u503C \u201Cno description\u201D\u3002</p><h3 id="\u6CE8\u89E3\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#\u6CE8\u89E3\u5143\u7D20" aria-hidden="true">#</a> \u6CE8\u89E3\u5143\u7D20</h3><p>\u5728 <strong>UseCase.java</strong> \u4E2D\u5B9A\u4E49\u7684 <strong>@UseCase</strong> \u7684\u6807\u7B7E\u5305\u542B int \u5143\u7D20 <strong>id</strong> \u548C String \u5143\u7D20 <strong>description</strong>\u3002\u6CE8\u89E3\u5143\u7D20\u53EF\u7528\u7684\u7C7B\u578B\u5982\u4E0B\u6240\u793A\uFF1A</p><ul><li>\u6240\u6709\u57FA\u672C\u7C7B\u578B\uFF08int\u3001float\u3001boolean\u7B49\uFF09</li><li>String</li><li>Class</li><li>enum</li><li>Annotation</li><li>\u4EE5\u4E0A\u7C7B\u578B\u7684\u6570\u7EC4</li></ul><p>\u5982\u679C\u4F60\u4F7F\u7528\u4E86\u5176\u4ED6\u7C7B\u578B\uFF0C\u7F16\u8BD1\u5668\u5C31\u4F1A\u62A5\u9519\u3002\u6CE8\u610F\uFF0C\u4E5F\u4E0D\u5141\u8BB8\u4F7F\u7528\u4EFB\u4F55\u5305\u88C5\u7C7B\u578B\uFF0C\u4F46\u662F\u7531\u4E8E\u81EA\u52A8\u88C5\u7BB1\u7684\u5B58\u5728\uFF0C\u8FD9\u4E0D\u7B97\u662F\u4EC0\u4E48\u9650\u5236\u3002\u6CE8\u89E3\u4E5F\u53EF\u4EE5\u4F5C\u4E3A\u5143\u7D20\u7684\u7C7B\u578B\u3002\u7A0D\u540E\u4F60\u4F1A\u770B\u5230\uFF0C\u6CE8\u89E3\u5D4C\u5957\u662F\u4E00\u4E2A\u975E\u5E38\u6709\u7528\u7684\u6280\u5DE7\u3002</p><h3 id="\u9ED8\u8BA4\u503C\u9650\u5236" tabindex="-1"><a class="header-anchor" href="#\u9ED8\u8BA4\u503C\u9650\u5236" aria-hidden="true">#</a> \u9ED8\u8BA4\u503C\u9650\u5236</h3><p>\u7F16\u8BD1\u5668\u5BF9\u4E8E\u5143\u7D20\u7684\u9ED8\u8BA4\u503C\u6709\u4E9B\u8FC7\u4E8E\u6311\u5254\u3002\u9996\u5148\uFF0C\u5143\u7D20\u4E0D\u80FD\u6709\u4E0D\u786E\u5B9A\u7684\u503C\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u5143\u7D20\u8981\u4E48\u6709\u9ED8\u8BA4\u503C\uFF0C\u8981\u4E48\u5C31\u5728\u4F7F\u7528\u6CE8\u89E3\u65F6\u63D0\u4F9B\u5143\u7D20\u7684\u503C\u3002</p><p>\u8FD9\u91CC\u6709\u53E6\u5916\u4E00\u4E2A\u9650\u5236\uFF1A\u4EFB\u4F55\u975E\u57FA\u672C\u7C7B\u578B\u7684\u5143\u7D20\uFF0C \u65E0\u8BBA\u662F\u5728\u6E90\u4EE3\u7801\u58F0\u660E\u65F6\u8FD8\u662F\u5728\u6CE8\u89E3\u63A5\u53E3\u4E2D\u5B9A\u4E49\u9ED8\u8BA4\u503C\u65F6\uFF0C\u90FD\u4E0D\u80FD\u4F7F\u7528 null \u4F5C\u4E3A\u5176\u503C\u3002\u8FD9\u4E2A\u9650\u5236\u4F7F\u5F97\u5904\u7406\u5668\u5F88\u96BE\u8868\u73B0\u4E00\u4E2A\u5143\u7D20\u7684\u5B58\u5728\u6216\u8005\u7F3A\u5931\u7684\u72B6\u6001\uFF0C\u56E0\u4E3A\u5728\u6BCF\u4E2A\u6CE8\u89E3\u7684\u58F0\u660E\u4E2D\uFF0C\u6240\u6709\u7684\u5143\u7D20\u90FD\u5B58\u5728\uFF0C\u5E76\u4E14\u5177\u6709\u76F8\u5E94\u7684\u503C\u3002\u4E3A\u4E86\u7ED5\u5F00\u8FD9\u4E2A\u7EA6\u675F\uFF0C\u53EF\u4EE5\u81EA\u5B9A\u4E49\u4E00\u4E9B\u7279\u6B8A\u7684\u503C\uFF0C\u6BD4\u5982\u7A7A\u5B57\u7B26\u4E32\u6216\u8005\u8D1F\u6570\u7528\u4E8E\u8868\u8FBE\u67D0\u4E2A\u5143\u7D20\u4E0D\u5B58\u5728\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// annotations/SimulatingNull.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span>METHOD<span class="token punctuation">)</span>
<span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span>RUNTIME<span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">SimulatingNull</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> <span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> <span class="token function">description</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u662F\u4E00\u4E2A\u5728\u5B9A\u4E49\u6CE8\u89E3\u7684\u4E60\u60EF\u7528\u6CD5\u3002</p><h3 id="\u751F\u6210\u5916\u90E8\u6587\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u751F\u6210\u5916\u90E8\u6587\u4EF6" aria-hidden="true">#</a> \u751F\u6210\u5916\u90E8\u6587\u4EF6</h3><p>\u5F53\u6709\u4E9B\u6846\u67B6\u9700\u8981\u4E00\u4E9B\u989D\u5916\u7684\u4FE1\u606F\u624D\u80FD\u4E0E\u4F60\u7684\u6E90\u4EE3\u7801\u534F\u540C\u5DE5\u4F5C\uFF0C\u8FD9\u79CD\u60C5\u51B5\u4E0B\u6CE8\u89E3\u5C31\u4F1A\u53D8\u5F97\u5341\u5206\u6709\u7528\u3002\u50CF Enterprise JavaBeans \uFF08EJB3 \u4E4B\u524D\uFF09\u8FD9\u6837\u7684\u6280\u672F\uFF0C\u6BCF\u4E00\u4E2A Bean \u90FD\u9700\u8981\u5927\u91CF\u7684\u63A5\u53E3\u548C\u90E8\u7F72\u63CF\u8FF0\u6587\u4EF6\uFF0C\u800C\u8FD9\u4E9B\u5C31\u662F\u201C\u6837\u677F\u201D\u6587\u4EF6\u3002Web Service\uFF0C\u81EA\u5B9A\u4E49\u6807\u7B7E\u5E93\u4EE5\u53CA\u5BF9\u8C61/\u5173\u7CFB\u6620\u5C04\u5DE5\u5177\uFF08\u4F8B\u5982 Toplink \u548C Hibernate\uFF09\u901A\u5E38\u90FD\u9700\u8981 XML \u63CF\u8FF0\u6587\u4EF6\uFF0C\u800C\u8FD9\u4E9B\u6587\u4EF6\u8131\u79BB\u4E8E\u4EE3\u7801\u4E4B\u5916\u3002\u9664\u4E86\u5B9A\u4E49 Java \u7C7B\uFF0C\u7A0B\u5E8F\u5458\u8FD8\u5FC5\u987B\u5FCD\u53D7\u6C89\u95F7\uFF0C\u91CD\u590D\u7684\u63D0\u4F9B\u67D0\u4E9B\u4FE1\u606F\uFF0C\u4F8B\u5982\u7C7B\u540D\u548C\u5305\u540D\u7B49\u5DF2\u7ECF\u5728\u539F\u59CB\u7C7B\u4E2D\u63D0\u4F9B\u8FC7\u7684\u4FE1\u606F\u3002\u6BCF\u5F53\u4F60\u4F7F\u7528\u5916\u90E8\u63CF\u8FF0\u6587\u4EF6\u65F6\uFF0C\u4ED6\u5C31\u62E5\u6709\u4E86\u4E00\u4E2A\u7C7B\u7684\u4E24\u4E2A\u72EC\u7ACB\u4FE1\u606F\u6E90\uFF0C\u8FD9\u7ECF\u5E38\u5BFC\u81F4\u4EE3\u7801\u7684\u540C\u6B65\u95EE\u9898\u3002\u540C\u65F6\u8FD9\u4E5F\u8981\u6C42\u4E86\u4E3A\u9879\u76EE\u5DE5\u4F5C\u7684\u7A0B\u5E8F\u5458\u5728\u77E5\u9053\u5982\u4F55\u7F16\u5199 Java \u7A0B\u5E8F\u7684\u540C\u65F6\uFF0C\u4E5F\u5FC5\u987B\u77E5\u9053\u5982\u4F55\u7F16\u8F91\u63CF\u8FF0\u6587\u4EF6\u3002</p><p>\u5047\u8BBE\u4F60\u60F3\u63D0\u4F9B\u4E00\u4E9B\u57FA\u672C\u7684\u5BF9\u8C61/\u5173\u7CFB\u6620\u5C04\u529F\u80FD\uFF0C\u80FD\u591F\u81EA\u52A8\u751F\u6210\u6570\u636E\u5E93\u8868\u3002\u4F60\u53EF\u4EE5\u4F7F\u7528 XML \u63CF\u8FF0\u6587\u4EF6\u6765\u6307\u660E\u7C7B\u7684\u540D\u5B57\u3001\u6BCF\u4E2A\u6210\u5458\u4EE5\u53CA\u6570\u636E\u5E93\u6620\u5C04\u7684\u76F8\u5173\u4FE1\u606F\u3002\u4F46\u662F\uFF0C\u901A\u8FC7\u4F7F\u7528\u6CE8\u89E3\uFF0C\u4F60\u53EF\u4EE5\u628A\u6240\u6709\u4FE1\u606F\u90FD\u4FDD\u5B58\u5728 <strong>JavaBean</strong> \u6E90\u6587\u4EF6\u4E2D\u3002\u4E3A\u6B64\u4F60\u9700\u8981\u4E00\u4E9B\u7528\u4E8E\u5B9A\u4E49\u6570\u636E\u5E93\u8868\u540D\u79F0\u3001\u6570\u636E\u5E93\u5217\u4EE5\u53CA\u5C06 SQL \u7C7B\u578B\u6620\u5C04\u5230\u5C5E\u6027\u7684\u6CE8\u89E3\u3002</p><p>\u4EE5\u4E0B\u662F\u4E00\u4E2A\u6CE8\u89E3\u7684\u5B9A\u4E49\uFF0C\u5B83\u544A\u8BC9\u6CE8\u89E3\u5904\u7406\u5668\u5E94\u8BE5\u521B\u5EFA\u4E00\u4E2A\u6570\u636E\u5E93\u8868\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// annotations/database/DBTable.java</span>
<span class="token keyword">package</span> <span class="token namespace">annotations<span class="token punctuation">.</span>database</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span>TYPE<span class="token punctuation">)</span> <span class="token comment">// Applies to classes only</span>
<span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span>RUNTIME<span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">DBTable</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728 <code>@Target</code> \u6CE8\u89E3\u4E2D\u6307\u5B9A\u7684\u6BCF\u4E00\u4E2A <strong>ElementType</strong> \u5C31\u662F\u4E00\u4E2A\u7EA6\u675F\uFF0C\u5B83\u544A\u8BC9\u7F16\u8BD1\u5668\uFF0C\u8FD9\u4E2A\u81EA\u5B9A\u4E49\u7684\u6CE8\u89E3\u53EA\u80FD\u7528\u4E8E\u6307\u5B9A\u7684\u7C7B\u578B\u3002\u4F60\u53EF\u4EE5\u6307\u5B9A <strong>enum ElementType</strong> \u4E2D\u7684\u4E00\u4E2A\u503C\uFF0C\u6216\u8005\u4EE5\u9017\u53F7\u5206\u5272\u7684\u5F62\u5F0F\u6307\u5B9A\u591A\u4E2A\u503C\u3002\u5982\u679C\u60F3\u8981\u5C06\u6CE8\u89E3\u5E94\u7528\u4E8E\u6240\u6709\u7684 <strong>ElementType</strong>\uFF0C\u90A3\u4E48\u53EF\u4EE5\u7701\u53BB <code>@Target</code> \u6CE8\u89E3\uFF0C\u4F46\u662F\u8FD9\u5E76\u4E0D\u5E38\u89C1\u3002</p><p>\u6CE8\u610F <strong>@DBTable</strong> \u4E2D\u6709\u4E00\u4E2A <code>name()</code> \u5143\u7D20\uFF0C\u8BE5\u6CE8\u89E3\u901A\u8FC7\u8FD9\u4E2A\u5143\u7D20\u4E3A\u5904\u7406\u5668\u521B\u5EFA\u6570\u636E\u5E93\u65F6\u63D0\u4F9B\u8868\u7684\u540D\u5B57\u3002</p><p>\u5982\u4E0B\u662F\u4FEE\u9970\u5B57\u6BB5\u7684\u6CE8\u89E3\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// annotations/database/Constraints.java</span>
<span class="token keyword">package</span> <span class="token namespace">annotations<span class="token punctuation">.</span>database</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span>FIELD<span class="token punctuation">)</span>
<span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span>RUNTIME<span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">Constraints</span> <span class="token punctuation">{</span>
    <span class="token keyword">boolean</span> <span class="token function">primaryKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> <span class="token function">allowNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> <span class="token function">unique</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// annotations/database/SQLString.java</span>
<span class="token keyword">package</span> <span class="token namespace">annotations<span class="token punctuation">.</span>database</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span>FIELD<span class="token punctuation">)</span>
<span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span>RUNTIME<span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">SQLString</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">Constraints</span> <span class="token function">constraints</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token annotation punctuation">@Constraints</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// annotations/database/SQLInteger.java</span>
<span class="token keyword">package</span> <span class="token namespace">annotations<span class="token punctuation">.</span>database</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span>FIELD<span class="token punctuation">)</span>
<span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span>RUNTIME<span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">SQLInteger</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">Constraints</span> <span class="token function">constraints</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token annotation punctuation">@Constraints</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>@Constraints</strong> \u6CE8\u89E3\u5141\u8BB8\u5904\u7406\u5668\u63D0\u4F9B\u6570\u636E\u5E93\u8868\u7684\u5143\u6570\u636E\u3002<strong>@Constraints</strong> \u4EE3\u8868\u4E86\u6570\u636E\u5E93\u901A\u5E38\u63D0\u4F9B\u7684\u7EA6\u675F\u7684\u4E00\u5C0F\u90E8\u5206\uFF0C\u4F46\u662F\u5B83\u6240\u8981\u8868\u8FBE\u7684\u601D\u60F3\u5DF2\u7ECF\u5F88\u6E05\u695A\u4E86\u3002<code>primaryKey()</code>\uFF0C<code>allowNull()</code> \u548C <code>unique()</code> \u5143\u7D20\u660E\u663E\u7684\u63D0\u4F9B\u4E86\u9ED8\u8BA4\u503C\uFF0C\u4ECE\u800C\u4F7F\u5F97\u5728\u5927\u591A\u6570\u60C5\u51B5\u4E0B\uFF0C\u8BE5\u6CE8\u89E3\u7684\u4F7F\u7528\u8005\u4E0D\u9700\u8981\u8F93\u5165\u592A\u591A\u4E1C\u897F\u3002</p><p>\u53E6\u5916\u4E24\u4E2A <strong>@interface</strong> \u5B9A\u4E49\u7684\u662F SQL \u7C7B\u578B\u3002\u5982\u679C\u5E0C\u671B\u8FD9\u4E2A\u6846\u67B6\u66F4\u6709\u4EF7\u503C\u7684\u8BDD\uFF0C\u6211\u4EEC\u5E94\u8BE5\u4E3A\u6BCF\u4E2A SQL \u7C7B\u578B\u90FD\u5B9A\u4E49\u76F8\u5E94\u7684\u6CE8\u89E3\u3002\u4E0D\u8FC7\u4F5C\u4E3A\u793A\u4F8B\uFF0C\u4E24\u4E2A\u5143\u7D20\u8DB3\u591F\u4E86\u3002</p><p>\u8FD9\u4E9B SQL \u7C7B\u578B\u5177\u6709 <code>name()</code> \u5143\u7D20\u548C <code>constraints()</code> \u5143\u7D20\u3002\u540E\u8005\u5229\u7528\u4E86\u5D4C\u5957\u6CE8\u89E3\u7684\u529F\u80FD\uFF0C\u5C06\u6570\u636E\u5E93\u5217\u7684\u7C7B\u578B\u7EA6\u675F\u4FE1\u606F\u5D4C\u5165\u5176\u4E2D\u3002\u6CE8\u610F <code>constraints()</code> \u5143\u7D20\u7684\u9ED8\u8BA4\u503C\u662F <strong>@Constraints</strong>\u3002\u7531\u4E8E\u5728 <strong>@Constraints</strong> \u6CE8\u89E3\u7C7B\u578B\u4E4B\u540E\uFF0C\u6CA1\u6709\u5728\u62EC\u53F7\u4E2D\u6307\u660E <strong>@Constraints</strong> \u5143\u7D20\u7684\u503C\uFF0C\u56E0\u6B64\uFF0C<strong>constraints()</strong> \u7684\u9ED8\u8BA4\u503C\u4E3A\u6240\u6709\u5143\u7D20\u90FD\u4E3A\u9ED8\u8BA4\u503C\u7684 <strong>@Constraints</strong> \u6CE8\u89E3\u3002\u5982\u679C\u8981\u4F7F\u5F97\u5D4C\u5165\u7684 <strong>@Constraints</strong> \u6CE8\u89E3\u4E2D\u7684 <code>unique()</code> \u5143\u7D20\u4E3A true\uFF0C\u5E76\u4F5C\u4E3A <code>constraints()</code> \u5143\u7D20\u7684\u9ED8\u8BA4\u503C\uFF0C\u4F60\u53EF\u4EE5\u50CF\u5982\u4E0B\u5B9A\u4E49\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// annotations/database/Uniqueness.java</span>
<span class="token comment">// Sample of nested annotations</span>
<span class="token keyword">package</span> <span class="token namespace">annotations<span class="token punctuation">.</span>database</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">Uniqueness</span> <span class="token punctuation">{</span>
    <span class="token class-name">Constraints</span> <span class="token function">constraints</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">default</span> <span class="token annotation punctuation">@Constraints</span><span class="token punctuation">(</span>unique <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u7B80\u5355\u7684\uFF0C\u4F7F\u7528\u4E86\u5982\u4E0A\u6CE8\u89E3\u7684\u7C7B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// annotations/database/Member.java</span>
<span class="token keyword">package</span> <span class="token namespace">annotations<span class="token punctuation">.</span>database</span><span class="token punctuation">;</span>
<span class="token annotation punctuation">@DBTable</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;MEMBER&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Member</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@SQLString</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token class-name">String</span> firstName<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@SQLString</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token class-name">String</span> lastName<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@SQLInteger</span> <span class="token class-name">Integer</span> age<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@SQLString</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">,</span>
            constraints <span class="token operator">=</span> <span class="token annotation punctuation">@Constraints</span><span class="token punctuation">(</span>primaryKey <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token class-name">String</span> reference<span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token keyword">int</span> memberCount<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getReference</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> reference<span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getFirstName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> firstName<span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getLastName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> lastName<span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> reference<span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> age<span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7C7B\u6CE8\u89E3 <strong>@DBTable</strong> \u6CE8\u89E3\u7ED9\u5B9A\u4E86\u5143\u7D20\u503C MEMBER\uFF0C\u5B83\u5C06\u4F1A\u4F5C\u4E3A\u8868\u7684\u540D\u5B57\u3002\u7C7B\u7684\u5C5E\u6027 <strong>firstName</strong> \u548C <strong>lastName</strong> \u90FD\u88AB\u6CE8\u89E3\u4E3A <strong>@SQLString</strong> \u7C7B\u578B\u5E76\u4E14\u7ED9\u4E86\u9ED8\u8BA4\u5143\u7D20\u503C\u5206\u522B\u4E3A 30 \u548C 50\u3002\u8FD9\u4E9B\u6CE8\u89E3\u90FD\u6709\u4E24\u4E2A\u6709\u8DA3\u7684\u5730\u65B9\uFF1A\u9996\u5148\uFF0C\u4ED6\u4EEC\u90FD\u4F7F\u7528\u4E86\u5D4C\u5165\u7684 <strong>@Constraints</strong> \u6CE8\u89E3\u7684\u9ED8\u8BA4\u503C\uFF1B\u5176\u6B21\uFF0C\u5B83\u4EEC\u90FD\u662F\u7528\u4E86\u5FEB\u6377\u65B9\u5F0F\u7279\u6027\u3002\u5982\u679C\u4F60\u5728\u6CE8\u89E3\u4E2D\u5B9A\u4E49\u4E86\u540D\u4E3A <strong>value</strong> \u7684\u5143\u7D20\uFF0C\u5E76\u4E14\u5728\u4F7F\u7528\u8BE5\u6CE8\u89E3\u65F6\uFF0C<strong>value</strong> \u4E3A\u552F\u4E00\u4E00\u4E2A\u9700\u8981\u8D4B\u503C\u7684\u5143\u7D20\uFF0C\u4F60\u5C31\u4E0D\u9700\u8981\u4F7F\u7528\u540D\u2014\u503C\u5BF9\u7684\u8BED\u6CD5\uFF0C\u4F60\u53EA\u9700\u8981\u5728\u62EC\u53F7\u4E2D\u7ED9\u51FA <strong>value</strong> \u5143\u7D20\u7684\u503C\u5373\u53EF\u3002\u8FD9\u53EF\u4EE5\u5E94\u7528\u4E8E\u4EFB\u4F55\u5408\u6CD5\u7C7B\u578B\u7684\u5143\u7D20\u3002\u8FD9\u4E5F\u9650\u5236\u4E86\u4F60\u5FC5\u987B\u5C06\u5143\u7D20\u547D\u540D\u4E3A <strong>value</strong>\uFF0C\u4E0D\u8FC7\u5728\u4E0A\u9762\u7684\u4F8B\u5B50\u4E2D\uFF0C\u8FD9\u6837\u7684\u6CE8\u89E3\u8BED\u53E5\u4E5F\u66F4\u6613\u4E8E\u7406\u89E3\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@SQLString</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5904\u7406\u5668\u5C06\u5728\u521B\u5EFA\u8868\u7684\u65F6\u5019\u4F7F\u7528\u8BE5\u503C\u8BBE\u7F6E SQL \u5217\u7684\u5927\u5C0F\u3002</p><p>\u9ED8\u8BA4\u503C\u7684\u8BED\u6CD5\u867D\u7136\u5F88\u7075\u5DE7\uFF0C\u4F46\u662F\u5B83\u5F88\u5FEB\u5C31\u53D8\u7684\u590D\u6742\u8D77\u6765\u3002\u4EE5 <strong>reference</strong> \u5B57\u6BB5\u7684\u6CE8\u89E3\u4E3A\u4F8B\uFF0C\u4E0A\u9762\u62E5\u6709 <strong>@SQLString</strong> \u6CE8\u89E3\uFF0C\u4F46\u662F\u8FD9\u4E2A\u5B57\u6BB5\u4E5F\u5C06\u6210\u4E3A\u8868\u7684\u4E3B\u952E\uFF0C\u56E0\u6B64\u5728\u5D4C\u5165\u7684 <strong>@Constraint</strong> \u6CE8\u89E3\u4E2D\u8BBE\u5B9A <strong>primaryKey</strong> \u5143\u7D20\u7684\u503C\u3002\u8FD9\u65F6\u4E8B\u60C5\u5C31\u53D8\u7684\u590D\u6742\u4E86\u3002\u4F60\u4E0D\u5F97\u4E0D\u4E3A\u8FD9\u4E2A\u5D4C\u5165\u7684\u6CE8\u89E3\u4F7F\u7528\u5F88\u957F\u7684\u952E\u2014\u503C\u5BF9\u7684\u5F62\u5F0F\uFF0C\u6765\u6307\u5B9A\u5143\u7D20\u540D\u79F0\u548C <strong>@interface</strong> \u7684\u540D\u79F0\u3002\u540C\u65F6\uFF0C\u7531\u4E8E\u6709\u7279\u6B8A\u547D\u540D\u7684 <strong>value</strong> \u4E5F\u4E0D\u662F\u552F\u4E00\u9700\u8981\u8D4B\u503C\u7684\u5143\u7D20\uFF0C\u56E0\u6B64\u4E0D\u80FD\u518D\u4F7F\u7528\u5FEB\u6377\u65B9\u5F0F\u7279\u6027\u3002\u5982\u4F60\u6240\u89C1\uFF0C\u6700\u7EC8\u7ED3\u679C\u4E0D\u7B97\u6E05\u6670\u6613\u61C2\u3002</p><h3 id="\u66FF\u4EE3\u65B9\u6848" tabindex="-1"><a class="header-anchor" href="#\u66FF\u4EE3\u65B9\u6848" aria-hidden="true">#</a> \u66FF\u4EE3\u65B9\u6848</h3><p>\u53EF\u4EE5\u4F7F\u7528\u591A\u79CD\u4E0D\u540C\u7684\u65B9\u5F0F\u6765\u5B9A\u4E49\u81EA\u5DF1\u7684\u6CE8\u89E3\u7528\u4E8E\u4E0A\u8FF0\u4EFB\u52A1\u3002\u4F8B\u5982\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528\u4E00\u4E2A\u5355\u4E00\u7684\u6CE8\u89E3\u7C7B <strong>@TableColumn</strong>\uFF0C\u5B83\u62E5\u6709\u4E00\u4E2A <strong>enum</strong> \u5143\u7D20\uFF0C\u5143\u7D20\u503C\u5B9A\u4E49\u4E86 <strong>STRING</strong>\uFF0C<strong>INTEGER</strong>\uFF0C<strong>FLOAT</strong> \u7B49\u7C7B\u578B\u3002\u8FD9\u6D88\u9664\u4E86\u6BCF\u4E2A SQL \u7C7B\u578B\u90FD\u9700\u8981\u5B9A\u4E49\u4E00\u4E2A <strong>@interface</strong> \u7684\u8D1F\u62C5\uFF0C\u4E0D\u8FC7\u4E5F\u4F7F\u5F97\u7528\u989D\u5916\u4FE1\u606F\u4FEE\u9970 SQL \u7C7B\u578B\u53D8\u7684\u4E0D\u53EF\u80FD\uFF0C\u8FD9\u4E9B\u989D\u5916\u7684\u4FE1\u606F\u4F8B\u5982\u957F\u5EA6\u6216\u7CBE\u5EA6\u7B49\uFF0C\u90FD\u53EF\u80FD\u662F\u975E\u5E38\u6709\u7528\u7684\u3002</p><p>\u4F60\u4E5F\u53EF\u4EE5\u4F7F\u7528\u4E00\u4E2A <strong>String</strong> \u7C7B\u578B\u7684\u5143\u7D20\u6765\u63CF\u8FF0\u5B9E\u9645\u7684 SQL \u7C7B\u578B\uFF0C\u6BD4\u5982 \u201CVARCHAR(30)\u201D \u6216\u8005 \u201CINTEGER\u201D\u3002\u8FD9\u4F7F\u5F97\u4F60\u53EF\u4EE5\u4FEE\u9970 SQL \u7C7B\u578B\uFF0C\u4F46\u662F\u8FD9\u4E5F\u5C06 Java \u7C7B\u578B\u5230 SQL \u7C7B\u578B\u7684\u6620\u5C04\u7ED1\u5728\u4E86\u4E00\u8D77\uFF0C\u8FD9\u4E0D\u662F\u4E00\u4E2A\u597D\u7684\u8BBE\u8BA1\u3002\u4F60\u5E76\u4E0D\u60F3\u5728\u6570\u636E\u5E93\u66F4\u6539\u4E4B\u540E\u91CD\u65B0\u7F16\u8BD1\u4F60\u7684\u4EE3\u7801\uFF1B\u5982\u679C\u6211\u4EEC\u53EA\u9700\u8981\u544A\u8BC9\u6CE8\u89E3\u5904\u7406\u5668\uFF0C\u6211\u4EEC\u6B63\u5728\u4F7F\u7528\u7684\u662F\u4EC0\u4E48\u201C\u53E3\u5473\uFF08favor\uFF09\u201D\u7684 SQL\uFF0C\u7136\u540E\u6CE8\u89E3\u5904\u7406\u5668\u6765\u4E3A\u6211\u4EEC\u5904\u7406 SQL \u7C7B\u578B\u7684\u7EC6\u8282\uFF0C\u90A3\u5C06\u662F\u4E00\u4E2A\u4F18\u96C5\u7684\u8BBE\u8BA1\u3002</p><p>\u7B2C\u4E09\u79CD\u53EF\u884C\u7684\u65B9\u6848\u662F\u4E00\u8D77\u4F7F\u7528\u4E24\u4E2A\u6CE8\u89E3\uFF0C<strong>@Constraints</strong> \u548C\u76F8\u5E94\u7684 SQL \u7C7B\u578B\uFF08\u4F8B\u5982\uFF0C<strong>@SQLInteger</strong>\uFF09\u53BB\u6CE8\u89E3\u540C\u4E00\u4E2A\u5B57\u6BB5\u3002\u8FD9\u53EF\u80FD\u4F1A\u8BA9\u4EE3\u7801\u6709\u4E9B\u6DF7\u4E71\uFF0C\u4F46\u662F\u7F16\u8BD1\u5668\u5141\u8BB8\u4F60\u5BF9\u540C\u4E00\u4E2A\u76EE\u6807\u4F7F\u7528\u591A\u4E2A\u6CE8\u89E3\u3002\u5728 Java 8\uFF0C\u5728\u4F7F\u7528\u591A\u4E2A\u6CE8\u89E3\u7684\u65F6\u5019\uFF0C\u4F60\u53EF\u4EE5\u91CD\u590D\u4F7F\u7528\u540C\u4E00\u4E2A\u6CE8\u89E3\u3002</p><h3 id="\u6CE8\u89E3\u4E0D\u652F\u6301\u7EE7\u627F" tabindex="-1"><a class="header-anchor" href="#\u6CE8\u89E3\u4E0D\u652F\u6301\u7EE7\u627F" aria-hidden="true">#</a> \u6CE8\u89E3\u4E0D\u652F\u6301\u7EE7\u627F</h3><p>\u4F60\u4E0D\u80FD\u4F7F\u7528 <strong>extends</strong> \u5173\u952E\u5B57\u6765\u7EE7\u627F <strong>@interfaces</strong>\u3002\u8FD9\u771F\u662F\u4E00\u4E2A\u9057\u61BE\uFF0C\u5982\u679C\u53EF\u4EE5\u5B9A\u4E49 <strong>@TableColumn</strong> \u6CE8\u89E3\uFF08\u53C2\u8003\u524D\u9762\u7684\u5EFA\u8BAE\uFF09\uFF0C\u540C\u65F6\u5D4C\u5957\u4E00\u4E2A <strong>@SQLType</strong> \u7C7B\u578B\u7684\u6CE8\u89E3\uFF0C\u5C06\u6210\u4E3A\u4E00\u4E2A\u4F18\u96C5\u7684\u8BBE\u8BA1\u3002\u6309\u7167\u8FD9\u79CD\u65B9\u5F0F\uFF0C\u4F60\u53EF\u4EE5\u901A\u8FC7\u7EE7\u627F <strong>@SQLType</strong> \u6765\u521B\u9020\u5404\u79CD SQL \u7C7B\u578B\u3002\u4F8B\u5982 <strong>@SQLInteger</strong> \u548C <strong>@SQLString</strong>\u3002\u5982\u679C\u652F\u6301\u7EE7\u627F\uFF0C\u5C31\u4F1A\u5927\u5927\u51CF\u5C11\u6253\u5B57\u7684\u5DE5\u4F5C\u91CF\u5E76\u4E14\u4F7F\u5F97\u8BED\u6CD5\u66F4\u6574\u6D01\u3002\u5728 Java \u7684\u672A\u6765\u7248\u672C\u4E2D\uFF0C\u4F3C\u4E4E\u6CA1\u6709\u4EFB\u4F55\u5173\u4E8E\u8BA9\u6CE8\u89E3\u652F\u6301\u7EE7\u627F\u7684\u63D0\u6848\uFF0C\u6240\u4EE5\u5728\u5F53\u524D\u60C5\u51B5\u4E0B\uFF0C\u4E0A\u4F8B\u4E2D\u7684\u89E3\u51B3\u65B9\u6848\u53EF\u80FD\u5DF2\u7ECF\u662F\u6700\u4F73\u65B9\u6848\u4E86\u3002</p><h3 id="\u5B9E\u73B0\u5904\u7406\u5668" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u5904\u7406\u5668" aria-hidden="true">#</a> \u5B9E\u73B0\u5904\u7406\u5668</h3><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u6CE8\u89E3\u5904\u7406\u5668\u7684\u4F8B\u5B50\uFF0C\u4ED6\u5C06\u8BFB\u53D6\u4E00\u4E2A\u7C7B\u6587\u4EF6\uFF0C\u68C0\u67E5\u4E0A\u9762\u7684\u6570\u636E\u5E93\u6CE8\u89E3\uFF0C\u5E76\u751F\u6210\u7528\u4E8E\u521B\u5EFA\u6570\u636E\u5E93\u7684 SQL \u547D\u4EE4\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// annotations/database/TableCreator.java</span>
<span class="token comment">// Reflection-based annotation processor</span>
<span class="token comment">// {java annotations.database.TableCreator</span>
<span class="token comment">// annotations.database.Member}</span>
<span class="token keyword">package</span> <span class="token namespace">annotations<span class="token punctuation">.</span>database</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Annotation</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token class-name">Field</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TableCreator</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span>
    <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>args<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
                    <span class="token string">&quot;arguments: annotated classes&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> className <span class="token operator">:</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> cl <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>className<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">DBTable</span> dbTable <span class="token operator">=</span> cl<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token class-name">DBTable</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>dbTable <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
                        <span class="token string">&quot;No DBTable annotations in class &quot;</span> <span class="token operator">+</span>
                                className<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">String</span> tableName <span class="token operator">=</span> dbTable<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// If the name is empty, use the Class name:</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>tableName<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span>
                tableName <span class="token operator">=</span> cl<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> columnDefs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Field</span> field <span class="token operator">:</span> cl<span class="token punctuation">.</span><span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">String</span> columnName <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                <span class="token class-name">Annotation</span><span class="token punctuation">[</span><span class="token punctuation">]</span> anns <span class="token operator">=</span>
                        field<span class="token punctuation">.</span><span class="token function">getDeclaredAnnotations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>anns<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span>
                    <span class="token keyword">continue</span><span class="token punctuation">;</span> <span class="token comment">// Not a db table column</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>anns<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">instanceof</span> <span class="token class-name">SQLInteger</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">SQLInteger</span> sInt <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">SQLInteger</span><span class="token punctuation">)</span> anns<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                    <span class="token comment">// Use field name if name not specified</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>sInt<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span>
                        columnName <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">else</span>
                        columnName <span class="token operator">=</span> sInt<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    columnDefs<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>columnName <span class="token operator">+</span> <span class="token string">&quot; INT&quot;</span> <span class="token operator">+</span>
                            <span class="token function">getConstraints</span><span class="token punctuation">(</span>sInt<span class="token punctuation">.</span><span class="token function">constraints</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>anns<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">instanceof</span> <span class="token class-name">SQLString</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">SQLString</span> sString <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">SQLString</span><span class="token punctuation">)</span> anns<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                    <span class="token comment">// Use field name if name not specified.</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>sString<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span>
                        columnName <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">else</span>
                        columnName <span class="token operator">=</span> sString<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    columnDefs<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>columnName <span class="token operator">+</span> <span class="token string">&quot; VARCHAR(&quot;</span> <span class="token operator">+</span>
                            sString<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;)&quot;</span> <span class="token operator">+</span>
                            <span class="token function">getConstraints</span><span class="token punctuation">(</span>sString<span class="token punctuation">.</span><span class="token function">constraints</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token class-name">StringBuilder</span> createCommand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span>
                        <span class="token string">&quot;CREATE TABLE &quot;</span> <span class="token operator">+</span> tableName <span class="token operator">+</span> <span class="token string">&quot;(&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> columnDef <span class="token operator">:</span> columnDefs<span class="token punctuation">)</span>
                    createCommand<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>
                            <span class="token string">&quot;\\n &quot;</span> <span class="token operator">+</span> columnDef <span class="token operator">+</span> <span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// Remove trailing comma</span>
                <span class="token class-name">String</span> tableCreate <span class="token operator">=</span> createCommand<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>
                        <span class="token number">0</span><span class="token punctuation">,</span> createCommand<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;);&quot;</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Table Creation SQL for &quot;</span> <span class="token operator">+</span>
                        className <span class="token operator">+</span> <span class="token string">&quot; is:\\n&quot;</span> <span class="token operator">+</span> tableCreate<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">getConstraints</span><span class="token punctuation">(</span><span class="token class-name">Constraints</span> con<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> constraints <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>con<span class="token punctuation">.</span><span class="token function">allowNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            constraints <span class="token operator">+=</span> <span class="token string">&quot; NOT NULL&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>con<span class="token punctuation">.</span><span class="token function">primaryKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            constraints <span class="token operator">+=</span> <span class="token string">&quot; PRIMARY KEY&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>con<span class="token punctuation">.</span><span class="token function">unique</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            constraints <span class="token operator">+=</span> <span class="token string">&quot; UNIQUE&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> constraints<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u4E3A\uFF1A</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">Table</span> Creation <span class="token keyword">SQL</span> <span class="token keyword">for</span> annotations<span class="token punctuation">.</span><span class="token keyword">database</span><span class="token punctuation">.</span>Member <span class="token operator">is</span>:
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> MEMBER<span class="token punctuation">(</span>
    FIRSTNAME <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">Table</span> Creation <span class="token keyword">SQL</span> <span class="token keyword">for</span> annotations<span class="token punctuation">.</span><span class="token keyword">database</span><span class="token punctuation">.</span>Member <span class="token operator">is</span>:
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> MEMBER<span class="token punctuation">(</span>
    FIRSTNAME <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    LASTNAME <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">Table</span> Creation <span class="token keyword">SQL</span> <span class="token keyword">for</span> annotations<span class="token punctuation">.</span><span class="token keyword">database</span><span class="token punctuation">.</span>Member <span class="token operator">is</span>:
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> MEMBER<span class="token punctuation">(</span>
    FIRSTNAME <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    LASTNAME <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    AGE <span class="token keyword">INT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">Table</span> Creation <span class="token keyword">SQL</span> <span class="token keyword">for</span> annotations<span class="token punctuation">.</span><span class="token keyword">database</span><span class="token punctuation">.</span>Member <span class="token operator">is</span>:
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> MEMBER<span class="token punctuation">(</span>
    FIRSTNAME <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    LASTNAME <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    AGE <span class="token keyword">INT</span><span class="token punctuation">,</span>
    REFERENCE <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E3B\u65B9\u6CD5\u4F1A\u5FAA\u73AF\u5904\u7406\u547D\u4EE4\u884C\u4F20\u5165\u7684\u6BCF\u4E00\u4E2A\u7C7B\u540D\u3002\u6BCF\u4E00\u4E2A\u7C7B\u90FD\u662F\u7528 <code> forName()</code> \u65B9\u6CD5\u8FDB\u884C\u52A0\u8F7D\uFF0C\u5E76\u4F7F\u7528 <code>getAnnotation(DBTable.class)</code> \u6765\u68C0\u67E5\u8BE5\u7C7B\u662F\u5426\u5E26\u6709 <strong>@DBTable</strong> \u6CE8\u89E3\u3002\u5982\u679C\u5B58\u5728\uFF0C\u5C06\u8868\u540D\u5B58\u50A8\u8D77\u6765\u3002\u7136\u540E\u8BFB\u53D6\u8FD9\u4E2A\u7C7B\u7684\u6240\u6709\u5B57\u6BB5\uFF0C\u5E76\u4F7F\u7528 <code>getDeclaredAnnotations()</code> \u8FDB\u884C\u68C0\u67E5\u3002\u8FD9\u4E2A\u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u5305\u542B\u7279\u5B9A\u5B57\u6BB5\u4E0A\u6240\u6709\u6CE8\u89E3\u7684\u6570\u7EC4\u3002\u7136\u540E\u4F7F\u7528 <strong>instanceof</strong> \u64CD\u4F5C\u7B26\u5224\u65AD\u8FD9\u4E9B\u6CE8\u89E3\u662F\u5426\u662F <strong>@SQLInteger</strong> \u6216\u8005 <strong>@SQLString</strong> \u7C7B\u578B\u3002\u5982\u679C\u662F\u7684\u8BDD\uFF0C\u5728\u5BF9\u5E94\u7684\u5904\u7406\u5757\u4E2D\u5C06\u6784\u9020\u51FA\u76F8\u5E94\u7684\u6570\u636E\u5E93\u5217\u7684\u5B57\u7B26\u4E32\u7247\u6BB5\u3002\u6CE8\u610F\uFF0C\u7531\u4E8E\u6CE8\u89E3\u6CA1\u6709\u7EE7\u627F\u673A\u5236\uFF0C\u5982\u679C\u8981\u83B7\u53D6\u8FD1\u4F3C\u591A\u6001\u7684\u884C\u4E3A\uFF0C\u4F7F\u7528 <code>getDeclaredAnnotations()</code> \u4F3C\u4E4E\u662F\u552F\u4E00\u7684\u65B9\u5F0F\u3002</p><p>\u5D4C\u5957\u7684 <strong>@Constraint</strong> \u6CE8\u89E3\u88AB\u4F20\u9012\u7ED9 <code>getConstraints()</code>\u65B9\u6CD5\uFF0C\u5E76\u7528\u5B83\u6765\u6784\u9020\u4E00\u4E2A\u5305\u542B SQL \u7EA6\u675F\u7684 String \u5BF9\u8C61\u3002</p><p>\u9700\u8981\u63D0\u9192\u7684\u662F\uFF0C\u4E0A\u9762\u6F14\u793A\u7684\u6280\u5DE7\u5BF9\u4E8E\u771F\u5B9E\u7684\u5BF9\u8C61/\u6620\u5C04\u5173\u7CFB\u800C\u8A00\uFF0C\u662F\u5341\u5206\u5E7C\u7A1A\u7684\u3002\u4F7F\u7528 <strong>@DBTable</strong> \u7684\u6CE8\u89E3\u6765\u83B7\u53D6\u8868\u7684\u540D\u79F0\uFF0C\u8FD9\u4F7F\u5F97\u5982\u679C\u8981\u4FEE\u6539\u8868\u7684\u540D\u5B57\uFF0C\u5219\u8FEB\u4F7F\u4F60\u91CD\u65B0\u7F16\u8BD1 Java \u4EE3\u7801\u3002\u8FD9\u79CD\u6548\u679C\u5E76\u4E0D\u7406\u60F3\u3002\u73B0\u5728\u5DF2\u7ECF\u6709\u4E86\u5F88\u591A\u53EF\u7528\u7684\u6846\u67B6\uFF0C\u7528\u4E8E\u5C06\u5BF9\u8C61\u6620\u5C04\u5230\u6570\u636E\u5E93\u4E2D\uFF0C\u5E76\u4E14\u8D8A\u6765\u8D8A\u591A\u7684\u6846\u67B6\u5F00\u59CB\u4F7F\u7528\u6CE8\u89E3\u4E86\u3002</p><h2 id="\u4F7F\u7528javac\u5904\u7406\u6CE8\u89E3" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528javac\u5904\u7406\u6CE8\u89E3" aria-hidden="true">#</a> \u4F7F\u7528javac\u5904\u7406\u6CE8\u89E3</h2><p>\u901A\u8FC7 <strong>javac</strong>\uFF0C\u4F60\u53EF\u4EE5\u901A\u8FC7\u521B\u5EFA\u7F16\u8BD1\u65F6\uFF08compile-time\uFF09\u6CE8\u89E3\u5904\u7406\u5668\u5728 Java \u6E90\u6587\u4EF6\u4E0A\u4F7F\u7528\u6CE8\u89E3\uFF0C\u800C\u4E0D\u662F\u7F16\u8BD1\u4E4B\u540E\u7684 class \u6587\u4EF6\u3002\u4F46\u662F\u8FD9\u91CC\u6709\u4E00\u4E2A\u91CD\u5927\u9650\u5236\uFF1A\u4F60\u4E0D\u80FD\u901A\u8FC7\u5904\u7406\u5668\u6765\u6539\u53D8\u6E90\u4EE3\u7801\u3002\u552F\u4E00\u5F71\u54CD\u8F93\u51FA\u7684\u65B9\u5F0F\u5C31\u662F\u521B\u5EFA\u65B0\u7684\u6587\u4EF6\u3002</p><p>\u5982\u679C\u4F60\u7684\u6CE8\u89E3\u5904\u7406\u5668\u521B\u5EFA\u4E86\u65B0\u7684\u6E90\u6587\u4EF6\uFF0C\u5728\u65B0\u4E00\u8F6E\u5904\u7406\u4E2D\u6CE8\u89E3\u4F1A\u68C0\u67E5\u6E90\u6587\u4EF6\u672C\u8EAB\u3002\u5DE5\u5177\u5728\u68C0\u6D4B\u4E00\u8F6E\u4E4B\u540E\u6301\u7EED\u5FAA\u73AF\uFF0C\u76F4\u5230\u4E0D\u518D\u6709\u65B0\u7684\u6E90\u6587\u4EF6\u4EA7\u751F\u3002\u7136\u540E\u5B83\u7F16\u8BD1\u6240\u6709\u7684\u6E90\u6587\u4EF6\u3002</p><p>\u6BCF\u4E00\u4E2A\u4F60\u7F16\u5199\u7684\u6CE8\u89E3\u90FD\u9700\u8981\u5904\u7406\u5668\uFF0C\u4F46\u662F <strong>javac</strong> \u53EF\u4EE5\u975E\u5E38\u5BB9\u6613\u7684\u5C06\u591A\u4E2A\u6CE8\u89E3\u5904\u7406\u5668\u5408\u5E76\u5728\u4E00\u8D77\u3002\u4F60\u53EF\u4EE5\u6307\u5B9A\u591A\u4E2A\u9700\u8981\u5904\u7406\u7684\u7C7B\uFF0C\u5E76\u4E14\u4F60\u53EF\u4EE5\u6DFB\u52A0\u76D1\u542C\u5668\u7528\u4E8E\u76D1\u542C\u6CE8\u89E3\u5904\u7406\u5B8C\u6210\u540E\u63A5\u5230\u901A\u77E5\u3002</p><p>\u672C\u8282\u4E2D\u7684\u793A\u4F8B\u5C06\u5E2E\u52A9\u4F60\u5F00\u59CB\u5B66\u4E60\uFF0C\u4F46\u5982\u679C\u4F60\u5FC5\u987B\u6DF1\u5165\u5B66\u4E60\uFF0C\u8BF7\u505A\u597D\u53CD\u590D\u5B66\u4E60\uFF0C\u5927\u91CF\u8BBF\u95EE Google \u548C StackOverflow \u7684\u51C6\u5907\u3002</p><h3 id="\u6700\u7B80\u5355\u7684\u5904\u7406\u5668" tabindex="-1"><a class="header-anchor" href="#\u6700\u7B80\u5355\u7684\u5904\u7406\u5668" aria-hidden="true">#</a> \u6700\u7B80\u5355\u7684\u5904\u7406\u5668</h3><p>\u8BA9\u6211\u4EEC\u5F00\u59CB\u5B9A\u4E49\u6211\u4EEC\u80FD\u60F3\u5230\u7684\u6700\u7B80\u5355\u7684\u5904\u7406\u5668\uFF0C\u53EA\u662F\u4E3A\u4E86\u7F16\u8BD1\u548C\u6D4B\u8BD5\u3002\u5982\u4E0B\u662F\u6CE8\u89E3\u7684\u5B9A\u4E49\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// annotations/simplest/Simple.java</span>
<span class="token comment">// A bare-bones annotation</span>
<span class="token keyword">package</span> <span class="token namespace">annotations<span class="token punctuation">.</span>simplest</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Retention</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RetentionPolicy</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Target</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ElementType</span></span><span class="token punctuation">;</span>
<span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span>SOURCE<span class="token punctuation">)</span>
<span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span>TYPE<span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span>METHOD<span class="token punctuation">,</span>
        <span class="token class-name">ElementType</span><span class="token punctuation">.</span>CONSTRUCTOR<span class="token punctuation">,</span>
        <span class="token class-name">ElementType</span><span class="token punctuation">.</span>ANNOTATION_TYPE<span class="token punctuation">,</span>
        <span class="token class-name">ElementType</span><span class="token punctuation">.</span>PACKAGE<span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span>FIELD<span class="token punctuation">,</span>
        <span class="token class-name">ElementType</span><span class="token punctuation">.</span>LOCAL_VARIABLE<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">Simple</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;-default-&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>@Retention</strong> \u7684\u53C2\u6570\u73B0\u5728\u4E3A <strong>SOURCE</strong>\uFF0C\u8FD9\u610F\u5473\u7740\u6CE8\u89E3\u4E0D\u4F1A\u518D\u5B58\u7559\u5728\u7F16\u8BD1\u540E\u7684\u4EE3\u7801\u3002\u8FD9\u5728\u7F16\u8BD1\u65F6\u5904\u7406\u6CE8\u89E3\u662F\u6CA1\u6709\u5FC5\u8981\u7684\uFF0C\u5B83\u53EA\u662F\u6307\u51FA\uFF0C\u5728\u8FD9\u91CC\uFF0C<strong>javac</strong> \u662F\u552F\u4E00\u6709\u673A\u4F1A\u5904\u7406\u6CE8\u89E3\u7684\u4EE3\u7406\u3002</p><p><strong>@Target</strong> \u58F0\u660E\u4E86\u51E0\u4E4E\u6240\u6709\u7684\u76EE\u6807\u7C7B\u578B\uFF08\u9664\u4E86 <strong>PACKAGE</strong>\uFF09 \uFF0C\u540C\u6837\u662F\u4E3A\u4E86\u6F14\u793A\u3002\u4E0B\u9762\u662F\u4E00\u4E2A\u6D4B\u8BD5\u793A\u4F8B\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// annotations/simplest/SimpleTest.java</span>
<span class="token comment">// Test the &quot;Simple&quot; annotation</span>
<span class="token comment">// {java annotations.simplest.SimpleTest}</span>
<span class="token keyword">package</span> <span class="token namespace">annotations<span class="token punctuation">.</span>simplest</span><span class="token punctuation">;</span>
<span class="token annotation punctuation">@Simple</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SimpleTest</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Simple</span>
    <span class="token keyword">int</span> i<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Simple</span>
    <span class="token keyword">public</span> <span class="token class-name">SimpleTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Simple</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;SimpleTest.foo()&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Simple</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">float</span> f<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;SimpleTest.bar()&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Simple</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Simple</span>
        <span class="token class-name">SimpleTest</span> st <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        st<span class="token punctuation">.</span><span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u4E3A\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">SimpleTest</span><span class="token punctuation">.</span><span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5728\u8FD9\u91CC\u6211\u4EEC\u4F7F\u7528 <strong>@Simple</strong> \u6CE8\u89E3\u4E86\u6240\u6709 <strong>@Target</strong> \u58F0\u660E\u5141\u8BB8\u7684\u5730\u65B9\u3002</p><p><strong>SimpleTest.java</strong> \u53EA\u9700\u8981 <strong>Simple.java</strong> \u5C31\u53EF\u4EE5\u7F16\u8BD1\u6210\u529F\u3002\u5F53\u6211\u4EEC\u7F16\u8BD1\u7684\u65F6\u5019\u4EC0\u4E48\u90FD\u6CA1\u6709\u53D1\u751F\u3002</p><p><strong>javac</strong> \u5141\u8BB8 <strong>@Simple</strong> \u6CE8\u89E3\uFF08\u53EA\u8981\u5B83\u5B58\u5728\uFF09\u5728\u6211\u4EEC\u521B\u5EFA\u5904\u7406\u5668\u5E76\u5C06\u5176 hook \u5230\u7F16\u8BD1\u5668\u4E4B\u524D\uFF0C\u4E0D\u505A\u4EFB\u4F55\u4E8B\u60C5\u3002</p><p>\u5982\u4E0B\u662F\u4E00\u4E2A\u5341\u5206\u7B80\u5355\u7684\u5904\u7406\u5668\uFF0C\u5176\u6240\u4F5C\u7684\u4E8B\u60C5\u5C31\u662F\u628A\u6CE8\u89E3\u76F8\u5173\u7684\u4FE1\u606F\u6253\u5370\u51FA\u6765\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// annotations/simplest/SimpleProcessor.java</span>
<span class="token comment">// A bare-bones annotation processor</span>
<span class="token keyword">package</span> <span class="token namespace">annotations<span class="token punctuation">.</span>simplest</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>processing<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>model<span class="token punctuation">.</span></span><span class="token class-name">SourceVersion</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>model<span class="token punctuation">.</span>element<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token annotation punctuation">@SupportedAnnotationTypes</span><span class="token punctuation">(</span>
        <span class="token string">&quot;annotations.simplest.Simple&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@SupportedSourceVersion</span><span class="token punctuation">(</span><span class="token class-name">SourceVersion</span><span class="token punctuation">.</span>RELEASE_8<span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SimpleProcessor</span>
        <span class="token keyword">extends</span> <span class="token class-name">AbstractProcessor</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">process</span><span class="token punctuation">(</span>
            <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">TypeElement</span><span class="token punctuation">&gt;</span></span> annotations<span class="token punctuation">,</span>
            <span class="token class-name">RoundEnvironment</span> env<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">TypeElement</span> t <span class="token operator">:</span> annotations<span class="token punctuation">)</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Element</span> el <span class="token operator">:</span>
                env<span class="token punctuation">.</span><span class="token function">getElementsAnnotatedWith</span><span class="token punctuation">(</span><span class="token class-name">Simple</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token function">display</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">display</span><span class="token punctuation">(</span><span class="token class-name">Element</span> el<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;==== &quot;</span> <span class="token operator">+</span> el <span class="token operator">+</span> <span class="token string">&quot; ====&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>el<span class="token punctuation">.</span><span class="token function">getKind</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
                <span class="token string">&quot; : &quot;</span> <span class="token operator">+</span> el<span class="token punctuation">.</span><span class="token function">getModifiers</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
                <span class="token string">&quot; : &quot;</span> <span class="token operator">+</span> el<span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
                <span class="token string">&quot; : &quot;</span> <span class="token operator">+</span> el<span class="token punctuation">.</span><span class="token function">asType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>el<span class="token punctuation">.</span><span class="token function">getKind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">ElementKind</span><span class="token punctuation">.</span>CLASS<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">TypeElement</span> te <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TypeElement</span><span class="token punctuation">)</span>el<span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>te<span class="token punctuation">.</span><span class="token function">getQualifiedName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>te<span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>te<span class="token punctuation">.</span><span class="token function">getEnclosedElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>el<span class="token punctuation">.</span><span class="token function">getKind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">ElementKind</span><span class="token punctuation">.</span>METHOD<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">ExecutableElement</span> ex <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ExecutableElement</span><span class="token punctuation">)</span>el<span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>ex<span class="token punctuation">.</span><span class="token function">getReturnType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>ex<span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;(&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ex<span class="token punctuation">.</span><span class="token function">getParameters</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uFF08\u65E7\u7684\uFF0C\u5931\u6548\u7684\uFF09<strong>apt</strong> \u7248\u672C\u7684\u5904\u7406\u5668\u9700\u8981\u989D\u5916\u7684\u65B9\u6CD5\u6765\u786E\u5B9A\u652F\u6301\u54EA\u4E9B\u6CE8\u89E3\u4EE5\u53CA\u652F\u6301\u7684 Java \u7248\u672C\u3002\u4E0D\u8FC7\uFF0C\u4F60\u73B0\u5728\u53EF\u4EE5\u7B80\u5355\u7684\u4F7F\u7528 <strong>@SupportedAnnotationTypes</strong> \u548C <strong>@SupportedSourceVersion</strong> \u6CE8\u89E3\uFF08\u8FD9\u662F\u4E00\u4E2A\u5F88\u597D\u7684\u7528\u6CE8\u89E3\u7B80\u5316\u4EE3\u7801\u7684\u793A\u4F8B\uFF09\u3002</p><p>\u4F60\u552F\u4E00\u9700\u8981\u5B9E\u73B0\u7684\u65B9\u6CD5\u5C31\u662F <code>process()</code>\uFF0C\u8FD9\u91CC\u662F\u6240\u6709\u884C\u4E3A\u53D1\u751F\u7684\u5730\u65B9\u3002\u7B2C\u4E00\u4E2A\u53C2\u6570\u544A\u8BC9\u4F60\u54EA\u4E2A\u6CE8\u89E3\u662F\u5B58\u5728\u7684\uFF0C\u7B2C\u4E8C\u4E2A\u53C2\u6570\u4FDD\u7559\u4E86\u5269\u4F59\u4FE1\u606F\u3002\u6211\u4EEC\u6240\u505A\u7684\u4E8B\u60C5\u53EA\u662F\u6253\u5370\u4E86\u6CE8\u89E3\uFF08\u8FD9\u91CC\u53EA\u5B58\u5728\u4E00\u4E2A\uFF09\uFF0C\u53EF\u4EE5\u770B <strong>TypeElement</strong> \u6587\u6863\u4E2D\u7684\u5176\u4ED6\u884C\u4E3A\u3002\u901A\u8FC7\u4F7F\u7528 <code>process()</code> \u7684\u7B2C\u4E8C\u4E2A\u64CD\u4F5C\uFF0C\u6211\u4EEC\u5FAA\u73AF\u6240\u6709\u88AB <strong>@Simple</strong> \u6CE8\u89E3\u7684\u5143\u7D20\uFF0C\u5E76\u4E14\u9488\u5BF9\u6BCF\u4E00\u4E2A\u5143\u7D20\u8C03\u7528\u6211\u4EEC\u7684 <code>display()</code> \u65B9\u6CD5\u3002\u6240\u6709 <strong>Element</strong> \u5C55\u793A\u4E86\u81EA\u8EAB\u7684\u57FA\u672C\u4FE1\u606F\uFF1B\u4F8B\u5982\uFF0C<code>getModifiers()</code> \u544A\u8BC9\u4F60\u5B83\u662F\u5426\u4E3A <strong>public</strong> \u548C <strong>static</strong> \u3002</p><p><strong>Element</strong> \u53EA\u80FD\u6267\u884C\u90A3\u4E9B\u7F16\u8BD1\u5668\u89E3\u6790\u7684\u6240\u6709\u57FA\u672C\u5BF9\u8C61\u5171\u6709\u7684\u64CD\u4F5C\uFF0C\u800C\u7C7B\u548C\u65B9\u6CD5\u4E4B\u7C7B\u7684\u4E1C\u897F\u6709\u989D\u5916\u7684\u4FE1\u606F\u9700\u8981\u63D0\u53D6\u3002\u6240\u4EE5\uFF08\u5982\u679C\u4F60\u9605\u8BFB\u4E86\u6B63\u786E\u7684\u6587\u6863\uFF0C\u4F46\u662F\u6211\u6CA1\u6709\u5728\u4EFB\u4F55\u6587\u6863\u4E2D\u627E\u5230\u2014\u2014\u6211\u4E0D\u5F97\u4E0D\u901A\u8FC7 StackOverflow \u5BFB\u627E\u7EBF\u7D22\uFF09\u4F60\u68C0\u67E5\u5B83\u662F\u54EA\u79CD <strong>ElementKind</strong>\uFF0C\u7136\u540E\u5C06\u5176\u5411\u4E0B\u8F6C\u6362\u4E3A\u66F4\u5177\u4F53\u7684\u5143\u7D20\u7C7B\u578B\uFF0C\u6CE8\u5165\u9488\u5BF9 CLASS \u7684 TypeElement \u548C\u9488\u5BF9 METHOD \u7684ExecutableElement\u3002\u6B64\u65F6\uFF0C\u53EF\u4EE5\u4E3A\u8FD9\u4E9B\u5143\u7D20\u8C03\u7528\u5176\u4ED6\u65B9\u6CD5\u3002</p><p>\u52A8\u6001\u5411\u4E0B\u8F6C\u578B\uFF08\u5728\u7F16\u8BD1\u671F\u4E0D\u8FDB\u884C\u68C0\u67E5\uFF09\u5E76\u4E0D\u50CF\u662F Java \u7684\u505A\u4E8B\u65B9\u5F0F\uFF0C\u8FD9\u975E\u5E38\u4E0D\u76F4\u89C2\u8FD9\u4E5F\u662F\u4E3A\u4EC0\u4E48\u6211\u4ECE\u672A\u60F3\u8FC7\u8981\u8FD9\u6837\u505A\u4E8B\u3002\u76F8\u53CD\uFF0C\u6211\u82B1\u4E86\u597D\u51E0\u5929\u7684\u65F6\u95F4\uFF0C\u8BD5\u56FE\u53D1\u73B0\u4F60\u5E94\u8BE5\u5982\u4F55\u8BBF\u95EE\u8FD9\u4E9B\u4FE1\u606F\uFF0C\u800C\u8FD9\u4E9B\u4FE1\u606F\u81F3\u5C11\u5728\u67D0\u79CD\u7A0B\u5EA6\u4E0A\u662F\u7528\u4E0D\u8D77\u4F5C\u7528\u7684\u6070\u5F53\u65B9\u6CD5\u7B80\u5355\u660E\u4E86\u7684\u3002\u6211\u8FD8\u6CA1\u6709\u9047\u5230\u4EFB\u4F55\u4E1C\u897F\u8BF4\u4E0A\u9762\u662F\u89C4\u8303\u7684\u5F62\u5F0F\uFF0C\u4F46\u5728\u6211\u770B\u6765\u662F\u3002</p><p>\u5982\u679C\u53EA\u662F\u901A\u8FC7\u5E73\u5E38\u7684\u65B9\u5F0F\u6765\u7F16\u8BD1 <strong>SimpleTest.java</strong>\uFF0C\u4F60\u4E0D\u4F1A\u5F97\u5230\u4EFB\u4F55\u7ED3\u679C\u3002\u4E3A\u4E86\u5F97\u5230\u6CE8\u89E3\u8F93\u51FA\uFF0C\u4F60\u5FC5\u987B\u589E\u52A0\u4E00\u4E2A <strong>processor</strong> \u6807\u5FD7\u5E76\u4E14\u8FDE\u63A5\u6CE8\u89E3\u5904\u7406\u5668\u7C7B</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>javac -processor annotations.simplest.SimpleProcessor SimpleTest.java
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u73B0\u5728\u7F16\u8BD1\u5668\u6709\u4E86\u8F93\u51FA</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>annotations.simplest.Simple
<span class="token operator">==</span><span class="token operator">==</span> annotations.simplest.SimpleTest <span class="token operator">==</span><span class="token operator">==</span>
CLASS <span class="token builtin class-name">:</span> <span class="token punctuation">[</span>public<span class="token punctuation">]</span> <span class="token builtin class-name">:</span> SimpleTest <span class="token builtin class-name">:</span> annotations.simplest.SimpleTest
annotations.simplest.SimpleTest
java.lang.Object
i,SimpleTest<span class="token punctuation">(</span><span class="token punctuation">)</span>,foo<span class="token punctuation">(</span><span class="token punctuation">)</span>,bar<span class="token punctuation">(</span>java.lang.String,int,float<span class="token punctuation">)</span>,main<span class="token punctuation">(</span>java.lang.String<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token operator">==</span><span class="token operator">==</span> i <span class="token operator">==</span><span class="token operator">==</span>
FIELD <span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token builtin class-name">:</span> i <span class="token builtin class-name">:</span> int
<span class="token operator">==</span><span class="token operator">==</span> SimpleTest<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span><span class="token operator">==</span>
CONSTRUCTOR <span class="token builtin class-name">:</span> <span class="token punctuation">[</span>public<span class="token punctuation">]</span> <span class="token builtin class-name">:</span> <span class="token operator">&lt;</span>init<span class="token operator">&gt;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>void
<span class="token operator">==</span><span class="token operator">==</span> foo<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span><span class="token operator">==</span>
METHOD <span class="token builtin class-name">:</span> <span class="token punctuation">[</span>public<span class="token punctuation">]</span> <span class="token builtin class-name">:</span> foo <span class="token builtin class-name">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>void
void foo<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">==</span><span class="token operator">==</span> bar<span class="token punctuation">(</span>java.lang.String,int,float<span class="token punctuation">)</span> <span class="token operator">==</span><span class="token operator">==</span>
METHOD <span class="token builtin class-name">:</span> <span class="token punctuation">[</span>public<span class="token punctuation">]</span> <span class="token builtin class-name">:</span> bar <span class="token builtin class-name">:</span> <span class="token punctuation">(</span>java.lang.String,int,float<span class="token punctuation">)</span>void
void bar<span class="token punctuation">(</span>s,i,f<span class="token punctuation">)</span>
<span class="token operator">==</span><span class="token operator">==</span> main<span class="token punctuation">(</span>java.lang.String<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span><span class="token operator">==</span>
METHOD <span class="token builtin class-name">:</span> <span class="token punctuation">[</span>public, static<span class="token punctuation">]</span> <span class="token builtin class-name">:</span> main <span class="token builtin class-name">:</span> <span class="token punctuation">(</span>java.lang.String<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>void
void main<span class="token punctuation">(</span>args<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u7ED9\u4E86\u4F60\u4E00\u4E9B\u53EF\u4EE5\u53D1\u73B0\u7684\u4E1C\u897F\uFF0C\u5305\u62EC\u53C2\u6570\u540D\u548C\u7C7B\u578B\u3001\u8FD4\u56DE\u503C\u7B49\u3002</p><h3 id="\u66F4\u590D\u6742\u7684\u5904\u7406\u5668" tabindex="-1"><a class="header-anchor" href="#\u66F4\u590D\u6742\u7684\u5904\u7406\u5668" aria-hidden="true">#</a> \u66F4\u590D\u6742\u7684\u5904\u7406\u5668</h3><p>\u5F53\u4F60\u521B\u5EFA\u7528\u4E8E javac \u6CE8\u89E3\u5904\u7406\u5668\u65F6\uFF0C\u4F60\u4E0D\u80FD\u4F7F\u7528 Java \u7684\u53CD\u5C04\u7279\u6027\uFF0C\u56E0\u4E3A\u4F60\u5904\u7406\u7684\u662F\u6E90\u4EE3\u7801\uFF0C\u800C\u5E76\u975E\u662F\u7F16\u8BD1\u540E\u7684 class \u6587\u4EF6\u3002\u5404\u79CD mirror[^3 ] \u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\u7684\u65B9\u6CD5\u662F\uFF0C\u901A\u8FC7\u5141\u8BB8\u4F60\u5728\u672A\u7F16\u8BD1\u7684\u6E90\u4EE3\u7801\u4E2D\u67E5\u770B\u65B9\u6CD5\u3001\u5B57\u6BB5\u548C\u7C7B\u578B\u3002</p><p>\u5982\u4E0B\u662F\u4E00\u4E2A\u7528\u4E8E\u63D0\u53D6\u7C7B\u4E2D\u65B9\u6CD5\u7684\u6CE8\u89E3\uFF0C\u6240\u4EE5\u5B83\u53EF\u4EE5\u88AB\u62BD\u53D6\u6210\u4E3A\u4E00\u4E2A\u63A5\u53E3\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// annotations/ifx/ExtractInterface.java</span>
<span class="token comment">// javac-based annotation processing</span>
<span class="token keyword">package</span> <span class="token namespace">annotations<span class="token punctuation">.</span>ifx</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span>TYPE<span class="token punctuation">)</span>
<span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span>SOURCE<span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">ExtractInterface</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> <span class="token function">interfaceName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;-!!-&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>RetentionPolicy</strong> \u7684\u503C\u4E3A <strong>SOURCE</strong>\uFF0C\u8FD9\u662F\u4E3A\u4E86\u5728\u63D0\u53D6\u7C7B\u4E2D\u7684\u63A5\u53E3\u4E4B\u540E\u4E0D\u518D\u5C06\u6CE8\u89E3\u4FE1\u606F\u4FDD\u7559\u5728 class \u6587\u4EF6\u4E2D\u3002\u63A5\u4E0B\u6765\u7684\u6D4B\u8BD5\u7C7B\u63D0\u4F9B\u4E86\u4E00\u4E9B\u516C\u7528\u65B9\u6CD5\uFF0C\u8FD9\u4E9B\u65B9\u6CD5\u53EF\u4EE5\u6210\u4E3A\u63A5\u53E3\u7684\u4E00\u90E8\u5206\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// annotations/ifx/Multiplier.java</span>
<span class="token comment">// javac-based annotation processing</span>
<span class="token comment">// {java annotations.ifx.Multiplier}</span>
<span class="token keyword">package</span> <span class="token namespace">annotations<span class="token punctuation">.</span>ifx</span><span class="token punctuation">;</span>
<span class="token annotation punctuation">@ExtractInterface</span><span class="token punctuation">(</span>interfaceName<span class="token operator">=</span><span class="token string">&quot;IMultiplier&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Multiplier</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">multiply</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> total <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> x<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
            total <span class="token operator">=</span> <span class="token function">add</span><span class="token punctuation">(</span>total<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> total<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">fortySeven</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token number">47</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">timesTen</span><span class="token punctuation">(</span><span class="token keyword">double</span> arg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> arg <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Multiplier</span> m <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Multiplier</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
                <span class="token string">&quot;11 * 16 = &quot;</span> <span class="token operator">+</span> m<span class="token punctuation">.</span><span class="token function">multiply</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u4E3A\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token number">11</span> <span class="token operator">*</span> <span class="token number">16</span> <span class="token operator">=</span> <span class="token number">176</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>Multiplier</strong> \u7C7B\uFF08\u53EA\u80FD\u5904\u7406\u6B63\u6574\u6570\uFF09\u62E5\u6709\u4E00\u4E2A <code>multiply()</code> \u65B9\u6CD5\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u4F1A\u591A\u6B21\u8C03\u7528\u79C1\u6709\u65B9\u6CD5 <code>add()</code> \u6765\u6A21\u62DF\u4E58\u6CD5\u64CD\u4F5C\u3002<code> add()</code> \u662F\u79C1\u6709\u65B9\u6CD5\uFF0C\u56E0\u6B64\u4E0D\u80FD\u6210\u4E3A\u63A5\u53E3\u7684\u4E00\u90E8\u5206\u3002\u5176\u4ED6\u7684\u65B9\u6CD5\u63D0\u4F9B\u4E86\u8BED\u6CD5\u591A\u6837\u6027\u3002\u6CE8\u89E3\u88AB\u8D4B\u4E88 <strong>IMultiplier</strong> \u7684 <strong>InterfaceName</strong> \u4F5C\u4E3A\u8981\u521B\u5EFA\u7684\u63A5\u53E3\u7684\u540D\u79F0\u3002</p><p>\u8FD9\u91CC\u6709\u4E00\u4E2A\u7F16\u8BD1\u65F6\u5904\u7406\u5668\u7528\u4E8E\u63D0\u53D6\u6709\u8DA3\u7684\u65B9\u6CD5\uFF0C\u5E76\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684 interface \u6E90\u4EE3\u7801\u6587\u4EF6\uFF08\u8FD9\u4E2A\u6E90\u6587\u4EF6\u5C06\u4F1A\u5728\u4E0B\u4E00\u8F6E\u4E2D\u88AB\u81EA\u52A8\u7F16\u8BD1\uFF09\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// annotations/ifx/IfaceExtractorProcessor.java</span>
<span class="token comment">// javac-based annotation processing</span>
<span class="token keyword">package</span> <span class="token namespace">annotations<span class="token punctuation">.</span>ifx</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>processing<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>model<span class="token punctuation">.</span></span><span class="token class-name">SourceVersion</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>model<span class="token punctuation">.</span>element<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>model<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token annotation punctuation">@SupportedAnnotationTypes</span><span class="token punctuation">(</span>
        <span class="token string">&quot;annotations.ifx.ExtractInterface&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@SupportedSourceVersion</span><span class="token punctuation">(</span><span class="token class-name">SourceVersion</span><span class="token punctuation">.</span>RELEASE_8<span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IfaceExtractorProcessor</span>
        <span class="token keyword">extends</span> <span class="token class-name">AbstractProcessor</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Element</span><span class="token punctuation">&gt;</span></span>
            interfaceMethods <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Elements</span> elementUtils<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">ProcessingEnvironment</span> processingEnv<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span>
            <span class="token class-name">ProcessingEnvironment</span> processingEnv<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>processingEnv <span class="token operator">=</span> processingEnv<span class="token punctuation">;</span>
        elementUtils <span class="token operator">=</span> processingEnv<span class="token punctuation">.</span><span class="token function">getElementUtils</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">process</span><span class="token punctuation">(</span>
            <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">TypeElement</span><span class="token punctuation">&gt;</span></span> annotations<span class="token punctuation">,</span>
            <span class="token class-name">RoundEnvironment</span> env<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Element</span> elem<span class="token operator">:</span>env<span class="token punctuation">.</span><span class="token function">getElementsAnnotatedWith</span><span class="token punctuation">(</span>
                <span class="token class-name">ExtractInterface</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> interfaceName <span class="token operator">=</span> elem<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span>
                    <span class="token class-name">ExtractInterface</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">interfaceName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Element</span> enclosed <span class="token operator">:</span>
                    elem<span class="token punctuation">.</span><span class="token function">getEnclosedElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>enclosed<span class="token punctuation">.</span><span class="token function">getKind</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">ElementKind</span><span class="token punctuation">.</span>METHOD<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
                        enclosed<span class="token punctuation">.</span><span class="token function">getModifiers</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                                <span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token class-name">Modifier</span><span class="token punctuation">.</span>PUBLIC<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
                        <span class="token operator">!</span>enclosed<span class="token punctuation">.</span><span class="token function">getModifiers</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                                <span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token class-name">Modifier</span><span class="token punctuation">.</span>STATIC<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    interfaceMethods<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>enclosed<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>interfaceMethods<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
                <span class="token function">writeInterfaceFile</span><span class="token punctuation">(</span>interfaceName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span>
    <span class="token function">writeInterfaceFile</span><span class="token punctuation">(</span><span class="token class-name">String</span> interfaceName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span><span class="token punctuation">(</span>
                <span class="token class-name">Writer</span> writer <span class="token operator">=</span> processingEnv<span class="token punctuation">.</span><span class="token function">getFiler</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">createSourceFile</span><span class="token punctuation">(</span>interfaceName<span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">openWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> packageName <span class="token operator">=</span> elementUtils
                    <span class="token punctuation">.</span><span class="token function">getPackageOf</span><span class="token punctuation">(</span>interfaceMethods
                            <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            writer<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>
                    <span class="token string">&quot;package &quot;</span> <span class="token operator">+</span> packageName <span class="token operator">+</span> <span class="token string">&quot;;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            writer<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&quot;public interface &quot;</span> <span class="token operator">+</span>
                    interfaceName <span class="token operator">+</span> <span class="token string">&quot; {\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Element</span> elem <span class="token operator">:</span> interfaceMethods<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">ExecutableElement</span> method <span class="token operator">=</span>
                        <span class="token punctuation">(</span><span class="token class-name">ExecutableElement</span><span class="token punctuation">)</span>elem<span class="token punctuation">;</span>
                <span class="token class-name">String</span> signature <span class="token operator">=</span> <span class="token string">&quot; public &quot;</span><span class="token punctuation">;</span>
                signature <span class="token operator">+=</span> method<span class="token punctuation">.</span><span class="token function">getReturnType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">;</span>
                signature <span class="token operator">+=</span> method<span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                signature <span class="token operator">+=</span> <span class="token function">createArgList</span><span class="token punctuation">(</span>
                        method<span class="token punctuation">.</span><span class="token function">getParameters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>signature<span class="token punctuation">)</span><span class="token punctuation">;</span>
                writer<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>signature <span class="token operator">+</span> <span class="token string">&quot;;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            writer<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&quot;}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">createArgList</span><span class="token punctuation">(</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">VariableElement</span><span class="token punctuation">&gt;</span></span> parameters<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> args <span class="token operator">=</span> parameters<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>p <span class="token operator">-&gt;</span> p<span class="token punctuation">.</span><span class="token function">asType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> p<span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">joining</span><span class="token punctuation">(</span><span class="token string">&quot;, &quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token string">&quot;(&quot;</span> <span class="token operator">+</span> args <span class="token operator">+</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Elements</strong> \u5BF9\u8C61\u5B9E\u4F8B <strong>elementUtils</strong> \u662F\u4E00\u7EC4\u9759\u6001\u65B9\u6CD5\u7684\u5DE5\u5177\uFF1B\u6211\u4EEC\u7528\u5B83\u6765\u5BFB\u627E <strong>writeInterfaceFile()</strong> \u4E2D\u542B\u6709\u7684\u5305\u540D\u3002</p><p><code>getEnclosedElements()</code>\u65B9\u6CD5\u4F1A\u901A\u8FC7\u6307\u5B9A\u7684\u5143\u7D20\u751F\u6210\u6240\u6709\u7684\u201C\u95ED\u5305\u201D\u5143\u7D20\u3002\u5728\u8FD9\u91CC\uFF0C\u8FD9\u4E2A\u7C7B\u95ED\u5305\u4E86\u5B83\u7684\u6240\u6709\u5143\u7D20\u3002\u901A\u8FC7\u4F7F\u7528 <code>getKind()</code> \u6211\u4EEC\u4F1A\u627E\u5230\u6240\u6709\u7684 <strong>public</strong> \u548C <strong>static</strong> \u65B9\u6CD5\uFF0C\u5E76\u5C06\u5176\u6DFB\u52A0\u5230 <strong>interfaceMethods</strong> \u5217\u8868\u4E2D\u3002\u63A5\u4E0B\u6765 <code>writeInterfaceFile()</code> \u4F7F\u7528 <strong>interfaceMethods</strong> \u5217\u8868\u91CC\u9762\u7684\u503C\u751F\u6210\u65B0\u7684\u63A5\u53E3\u5B9A\u4E49\u3002\u6CE8\u610F\uFF0C\u5728 <code>writeInterfaceFile()</code> \u4F7F\u7528\u4E86\u5411\u4E0B\u8F6C\u578B\u5230 <strong>ExecutableElement</strong>\uFF0C\u8FD9\u4F7F\u5F97\u6211\u4EEC\u53EF\u4EE5\u83B7\u53D6\u6240\u6709\u7684\u65B9\u6CD5\u4FE1\u606F\u3002<strong>createArgList()</strong> \u662F\u4E00\u4E2A\u5E2E\u52A9\u65B9\u6CD5\uFF0C\u7528\u4E8E\u751F\u6210\u53C2\u6570\u5217\u8868\u3002</p><p><strong>Filer</strong>\u662F <code>getFiler()</code> \u751F\u6210\u7684\uFF0C\u5E76\u4E14\u662F <strong>PrintWriter</strong> \u7684\u4E00\u79CD\u5B9E\u4F8B\uFF0C\u53EF\u4EE5\u7528\u4E8E\u521B\u5EFA\u65B0\u6587\u4EF6\u3002\u6211\u4EEC\u4F7F\u7528 <strong>Filer</strong> \u5BF9\u8C61\uFF0C\u800C\u4E0D\u662F\u539F\u751F\u7684 <strong>PrintWriter</strong> \u539F\u56E0\u662F\uFF0C\u8FD9\u4E2A\u5BF9\u8C61\u53EF\u4EE5\u8FD0\u884C <strong>javac</strong> \u8FFD\u8E2A\u4F60\u521B\u5EFA\u7684\u65B0\u6587\u4EF6\uFF0C\u8FD9\u4F7F\u5F97\u5B83\u53EF\u4EE5\u5728\u65B0\u4E00\u8F6E\u4E2D\u68C0\u67E5\u65B0\u6587\u4EF6\u4E2D\u7684\u6CE8\u89E3\u5E76\u7F16\u8BD1\u6587\u4EF6\u3002</p><p>\u5982\u4E0B\u662F\u4E00\u4E2A\u547D\u4EE4\u884C\uFF0C\u53EF\u4EE5\u5728\u7F16\u8BD1\u7684\u65F6\u5019\u4F7F\u7528\u5904\u7406\u5668\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>javac -processor annotations.ifx.IfaceExtractorProcessor Multiplier.java
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u65B0\u751F\u6210\u7684 <strong>IMultiplier.java</strong> \u7684\u6587\u4EF6\uFF0C\u6B63\u5982\u4F60\u901A\u8FC7\u67E5\u770B\u4E0A\u9762\u5904\u7406\u5668\u7684 <code>println()</code> \u8BED\u53E5\u6240\u731C\u6D4B\u7684\u90A3\u6837\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">annotations<span class="token punctuation">.</span>ifx</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IMultiplier</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">multiply</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">fortySeven</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">timesTen</span><span class="token punctuation">(</span><span class="token keyword">double</span> arg<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u7C7B\u540C\u6837\u4F1A\u88AB <strong>javac</strong> \u7F16\u8BD1\uFF08\u5728\u67D0\u4E00\u8F6E\u4E2D\uFF09\uFF0C\u6240\u4EE5\u4F60\u4F1A\u5728\u540C\u4E00\u4E2A\u76EE\u5F55\u4E2D\u770B\u5230 <strong>IMultiplier.class</strong> \u6587\u4EF6\u3002</p><h2 id="\u57FA\u4E8E\u6CE8\u89E3\u7684\u5355\u5143\u6D4B\u8BD5" tabindex="-1"><a class="header-anchor" href="#\u57FA\u4E8E\u6CE8\u89E3\u7684\u5355\u5143\u6D4B\u8BD5" aria-hidden="true">#</a> \u57FA\u4E8E\u6CE8\u89E3\u7684\u5355\u5143\u6D4B\u8BD5</h2><p>\u5355\u5143\u6D4B\u8BD5\u662F\u5BF9\u7C7B\u4E2D\u6BCF\u4E2A\u65B9\u6CD5\u63D0\u4F9B\u4E00\u4E2A\u6216\u8005\u591A\u4E2A\u6D4B\u8BD5\u7684\u4E00\u79CD\u4E8B\u4EF6\uFF0C\u5176\u76EE\u7684\u662F\u4E3A\u4E86\u6709\u89C4\u5F8B\u7684\u6D4B\u8BD5\u4E00\u4E2A\u7C7B\u4E2D\u6BCF\u4E2A\u90E8\u5206\u662F\u5426\u5177\u5907\u6B63\u786E\u7684\u884C\u4E3A\u3002\u5728 Java \u4E2D\uFF0C\u6700\u8457\u540D\u7684\u5355\u5143\u6D4B\u8BD5\u5DE5\u5177\u5C31\u662F <strong>JUnit</strong>\u3002<strong>JUnit</strong> 4 \u7248\u672C\u5DF2\u7ECF\u5305\u542B\u4E86\u6CE8\u89E3\u3002\u5728\u6CE8\u89E3\u7248\u672C\u4E4B\u524D\u7684 JUnit \u4E00\u4E2A\u6700\u4E3B\u8981\u7684\u95EE\u9898\u662F\uFF0C\u4E3A\u4E86\u542F\u52A8\u548C\u8FD0\u884C <strong>JUnit</strong> \u6D4B\u8BD5\uFF0C\u6709\u5927\u91CF\u7684\u201C\u4EEA\u5F0F\u201D\u9700\u8981\u6807\u6CE8\u3002\u8FD9\u79CD\u8D1F\u62C5\u5DF2\u7ECF\u51CF\u8F7B\u4E86\u4E00\u4E9B\uFF0C<strong>\u4F46\u662F</strong>\u6CE8\u89E3\u4F7F\u5F97\u6D4B\u8BD5\u66F4\u63A5\u8FD1\u201C\u53EF\u4EE5\u5DE5\u4F5C\u7684\u6700\u7B80\u5355\u7684\u6D4B\u8BD5\u7CFB\u7EDF\u201D\u3002</p><p>\u5728\u6CE8\u89E3\u7248\u672C\u4E4B\u524D\u7684 JUnit\uFF0C\u4F60\u5FC5\u987B\u521B\u5EFA\u4E00\u4E2A\u5355\u72EC\u7684\u6587\u4EF6\u6765\u4FDD\u5B58\u5355\u5143\u6D4B\u8BD5\u3002\u901A\u8FC7\u6CE8\u89E3\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5C06\u5355\u5143\u6D4B\u8BD5\u96C6\u6210\u5728\u9700\u8981\u88AB\u6D4B\u8BD5\u7684\u7C7B\u4E2D\uFF0C\u4ECE\u800C\u5C06\u5355\u5143\u6D4B\u8BD5\u7684\u65F6\u95F4\u548C\u9EBB\u70E6\u964D\u5230\u4E86\u6700\u4F4E\u3002\u8FD9\u79CD\u65B9\u5F0F\u6709\u989D\u5916\u7684\u597D\u5904\uFF0C\u5C31\u662F\u4F7F\u5F97\u6D4B\u8BD5\u79C1\u6709\u65B9\u6CD5\u548C\u516C\u6709\u65B9\u6CD5\u53D8\u7684\u4E00\u6837\u5BB9\u6613\u3002</p><p>\u8FD9\u4E2A\u57FA\u4E8E\u6CE8\u89E3\u7684\u6D4B\u8BD5\u6846\u67B6\u53EB\u505A <strong>@Unit</strong>\u3002\u5176\u6700\u57FA\u672C\u7684\u6D4B\u8BD5\u5F62\u5F0F\uFF0C\u53EF\u80FD\u4E5F\u662F\u4F60\u4F7F\u7528\u7684\u6700\u591A\u7684\u4E00\u4E2A\u6CE8\u89E3\u662F <strong>@Test</strong>\uFF0C\u6211\u4EEC\u4F7F\u7528 <strong>@Test</strong> \u6765\u6807\u8BB0\u6D4B\u8BD5\u65B9\u6CD5\u3002\u6D4B\u8BD5\u65B9\u6CD5\u4E0D\u5E26\u53C2\u6570\uFF0C\u5E76\u8FD4\u56DE <strong>boolean</strong> \u7ED3\u679C\u6765\u8BF4\u660E\u6D4B\u8BD5\u65B9\u6CD5\u6210\u529F\u6216\u8005\u5931\u8D25\u3002\u4F60\u53EF\u4EE5\u4EFB\u610F\u547D\u540D\u5B83\u7684\u6D4B\u8BD5\u65B9\u6CD5\u3002\u540C\u65F6 <strong>@Unit</strong> \u6D4B\u8BD5\u65B9\u6CD5\u53EF\u4EE5\u662F\u4EFB\u610F\u4F60\u559C\u6B22\u7684\u8BBF\u95EE\u4FEE\u9970\u65B9\u6CD5\uFF0C\u5305\u62EC <strong>private</strong>\u3002</p><p>\u8981\u4F7F\u7528 <strong>@Unit</strong>\uFF0C\u4F60\u5FC5\u987B\u5BFC\u5165 <strong>onjava.atunit</strong> \u5305\uFF0C\u5E76\u4E14\u4F7F\u7528 <strong>@Unit</strong> \u7684\u6D4B\u8BD5\u6807\u8BB0\u4E3A\u5408\u9002\u7684\u65B9\u6CD5\u548C\u5B57\u6BB5\u6253\u4E0A\u6807\u7B7E\uFF08\u5728\u63A5\u4E0B\u6765\u7684\u4F8B\u5B50\u4E2D\u4F60\u4F1A\u5B66\u5230\uFF09\uFF0C\u7136\u540E\u8BA9\u4F60\u7684\u6784\u5EFA\u7CFB\u7EDF\u5BF9\u7F16\u8BD1\u540E\u7684\u7C7B\u8FD0\u884C <strong>@Unit</strong>\uFF0C\u4E0B\u9762\u662F\u4E00\u4E2A\u7B80\u5355\u7684\u4F8B\u5B50\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// annotations/AtUnitExample1.java</span>
<span class="token comment">// {java onjava.atunit.AtUnit</span>
<span class="token comment">// build/classes/main/annotations/AtUnitExample1.class}</span>
<span class="token keyword">package</span> <span class="token namespace">annotations</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">onjava<span class="token punctuation">.</span>atunit<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">onjava<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AtUnitExample1</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">methodOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;This is methodOne&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">methodTwo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;This is methodTwo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">boolean</span> <span class="token function">methodOneTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">methodOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;This is methodOne&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">boolean</span> <span class="token function">m2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token function">methodTwo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">m3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token comment">// Shows output for failure:</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">boolean</span> <span class="token function">failureTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">boolean</span> <span class="token function">anotherDisappointment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u4E3A\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">annotations<span class="token punctuation">.</span></span>AtUnitExample1</span>
<span class="token punctuation">.</span> m3
<span class="token punctuation">.</span> methodOneTest
<span class="token punctuation">.</span> m2 <span class="token class-name">This</span> is methodTwo
<span class="token punctuation">.</span> failureTest <span class="token punctuation">(</span>failed<span class="token punctuation">)</span>
<span class="token punctuation">.</span> anotherDisappointment <span class="token punctuation">(</span>failed<span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token number">5</span> tests<span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;&gt;</span> <span class="token number">2</span> FAILURES <span class="token operator">&lt;&lt;</span><span class="token operator">&lt;</span>
<span class="token class-name"><span class="token namespace">annotations<span class="token punctuation">.</span></span>AtUnitExample1</span><span class="token operator">:</span> failureTest
<span class="token class-name"><span class="token namespace">annotations<span class="token punctuation">.</span></span>AtUnitExample1</span><span class="token operator">:</span> anotherDisappointment
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528 <strong>@Unit</strong> \u8FDB\u884C\u6D4B\u8BD5\u7684\u7C7B\u5FC5\u987B\u5B9A\u4E49\u5728\u67D0\u4E2A\u5305\u4E2D\uFF08\u5373\u5FC5\u987B\u5305\u62EC <strong>package</strong> \u58F0\u660E\uFF09\u3002</p><p><strong>@Test</strong> \u6CE8\u89E3\u88AB\u7F6E\u4E8E <code>methodOneTest()</code>\u3001 <code>m2()</code>\u3001<code>m3()</code>\u3001<code>failureTest()</code> \u4EE5\u53CA <code>anotherDisappointment()</code> \u65B9\u6CD5\u4E4B\u524D\uFF0C\u5B83\u4EEC\u544A\u8BC9 <strong>@Unit</strong> \u65B9\u6CD5\u4F5C\u4E3A\u5355\u5143\u6D4B\u8BD5\u6765\u8FD0\u884C\u3002\u540C\u65F6 <strong>@Test</strong> \u786E\u4FDD\u8FD9\u4E9B\u65B9\u6CD5\u6CA1\u6709\u4EFB\u4F55\u53C2\u6570\u5E76\u4E14\u8FD4\u56DE\u503C\u4E3A <strong>boolean</strong> \u6216\u8005 <strong>void</strong>\u3002\u5F53\u4F60\u586B\u5199\u5355\u5143\u6D4B\u8BD5\u65F6\uFF0C\u552F\u4E00\u9700\u8981\u505A\u7684\u5C31\u662F\u51B3\u5B9A\u6D4B\u8BD5\u662F\u6210\u529F\u8FD8\u662F\u5931\u8D25\uFF0C\uFF08\u5BF9\u4E8E\u8FD4\u56DE\u503C\u4E3A <strong>boolean</strong> \u7684\u65B9\u6CD5\uFF09\u5E94\u8BE5\u8FD4\u56DE <strong>ture</strong> \u8FD8\u662F <strong>false</strong>\u3002</p><p>\u5982\u679C\u4F60\u719F\u6089 <strong>JUnit</strong>\uFF0C\u4F60\u8FD8\u5C06\u6CE8\u610F\u5230 <strong>@Unit</strong> \u8F93\u51FA\u7684\u4FE1\u606F\u66F4\u591A\u3002\u4F60\u4F1A\u770B\u5230\u73B0\u5728\u6B63\u5728\u8FD0\u884C\u7684\u6D4B\u8BD5\u7684\u8F93\u51FA\u66F4\u6709\u7528\uFF0C\u6700\u540E\u5B83\u4F1A\u544A\u8BC9\u4F60\u5BFC\u81F4\u5931\u8D25\u7684\u7C7B\u548C\u6D4B\u8BD5\u3002</p><p>\u4F60\u5E76\u975E\u5FC5\u987B\u5C06\u6D4B\u8BD5\u65B9\u6CD5\u5D4C\u5165\u5230\u539F\u6765\u7684\u7C7B\u4E2D\uFF0C\u6709\u65F6\u5019\u8FD9\u79CD\u4E8B\u60C5\u6839\u672C\u505A\u4E0D\u5230\u3002\u8981\u751F\u4EA7\u4E00\u4E2A\u975E\u5D4C\u5165\u5F0F\u7684\u6D4B\u8BD5\uFF0C\u6700\u7B80\u5355\u7684\u65B9\u5F0F\u5C31\u662F\u7EE7\u627F\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// annotations/AUExternalTest.java</span>
<span class="token comment">// Creating non-embedded tests</span>
<span class="token comment">// {java onjava.atunit.AtUnit</span>
<span class="token comment">// build/classes/main/annotations/AUExternalTest.class}</span>
<span class="token keyword">package</span> <span class="token namespace">annotations</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">onjava<span class="token punctuation">.</span>atunit<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">onjava<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AUExternalTest</span> <span class="token keyword">extends</span> <span class="token class-name">AtUnitExample1</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">boolean</span> <span class="token function">_MethodOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">methodOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;This is methodOne&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">boolean</span> <span class="token function">_MethodTwo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">methodTwo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u4E3A\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">annotations<span class="token punctuation">.</span></span>AUExternalTest</span>
<span class="token punctuation">.</span> tMethodOne
<span class="token punctuation">.</span> tMethodTwo <span class="token class-name">This</span> is methodTwo
OK <span class="token punctuation">(</span><span class="token number">2</span> tests<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u793A\u4F8B\u8FD8\u8868\u73B0\u51FA\u7075\u6D3B\u547D\u540D\u7684\u4EF7\u503C\u3002\u5728\u8FD9\u91CC\uFF0C<strong>@Test</strong> \u65B9\u6CD5\u88AB\u547D\u540D\u4E3A\u4E0B\u5212\u7EBF\u524D\u7F00\u52A0\u4E0A\u8981\u6D4B\u8BD5\u7684\u65B9\u6CD5\u540D\u79F0\uFF08\u6211\u5E76\u4E0D\u8BA4\u4E3A\u8FD9\u662F\u4E00\u79CD\u7406\u60F3\u7684\u547D\u540D\u5F62\u5F0F\uFF0C\u8FD9\u53EA\u662F\u8868\u73B0\u4E00\u79CD\u53EF\u80FD\u6027\u7F62\u4E86\uFF09\u3002</p><p>\u4F60\u4E5F\u53EF\u4EE5\u4F7F\u7528\u7EC4\u5408\u6765\u521B\u5EFA\u975E\u5D4C\u5165\u5F0F\u7684\u6D4B\u8BD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// annotations/AUComposition.java</span>
<span class="token comment">// Creating non-embedded tests</span>
<span class="token comment">// {java onjava.atunit.AtUnit</span>
<span class="token comment">// build/classes/main/annotations/AUComposition.class}</span>
<span class="token keyword">package</span> <span class="token namespace">annotations</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">onjava<span class="token punctuation">.</span>atunit<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">onjava<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AUComposition</span> <span class="token punctuation">{</span>
    <span class="token class-name">AtUnitExample1</span> testObject <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtUnitExample1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">boolean</span> <span class="token function">tMethodOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> testObject<span class="token punctuation">.</span><span class="token function">methodOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;This is methodOne&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">boolean</span> <span class="token function">tMethodTwo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> testObject<span class="token punctuation">.</span><span class="token function">methodTwo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u4E3A\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">annotations<span class="token punctuation">.</span></span>AUComposition</span>
<span class="token punctuation">.</span> tMethodTwo <span class="token class-name">This</span> is methodTwo
<span class="token punctuation">.</span> tMethodOne
OK <span class="token punctuation">(</span><span class="token number">2</span> tests<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56E0\u4E3A\u5728\u6BCF\u4E00\u4E2A\u6D4B\u8BD5\u91CC\u9762\u90FD\u4F1A\u521B\u5EFA <strong>AUComposition</strong> \u5BF9\u8C61\uFF0C\u6240\u4EE5\u521B\u5EFA\u65B0\u7684\u6210\u5458\u53D8\u91CF <strong>testObject</strong> \u7528\u4E8E\u4EE5\u540E\u7684\u6BCF\u4E00\u4E2A\u6D4B\u8BD5\u65B9\u6CD5\u3002</p><p>\u56E0\u4E3A <strong>@Unit</strong> \u4E2D\u6CA1\u6709 <strong>JUnit</strong> \u4E2D\u7279\u6B8A\u7684 <strong>assert</strong> \u65B9\u6CD5\uFF0C\u4E0D\u8FC7\u53E6\u4E00\u79CD\u5F62\u5F0F\u7684 <strong>@Test</strong> \u65B9\u6CD5\u4ECD\u7136\u5141\u8BB8\u8FD4\u56DE\u503C\u4E3A <strong>void</strong>\uFF08\u5982\u679C\u4F60\u8FD8\u60F3\u4F7F\u7528 <strong>true</strong> \u6216\u8005 <strong>false</strong> \u7684\u8BDD\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528 <strong>boolean</strong> \u4F5C\u4E3A\u65B9\u6CD5\u8FD4\u56DE\u503C\u7C7B\u578B\uFF09\u3002\u4E3A\u4E86\u8868\u793A\u6D4B\u8BD5\u6210\u529F\uFF0C\u53EF\u4EE5\u4F7F\u7528 Java \u7684 <strong>assert</strong> \u8BED\u53E5\u3002Java \u65AD\u8A00\u673A\u5236\u9700\u8981\u4F60\u5728 java \u547D\u4EE4\u884C\u884C\u52A0\u4E0A <strong>-ea</strong> \u6807\u5FD7\u6765\u5F00\u542F\uFF0C\u4F46\u662F <strong>@Unit</strong> \u5DF2\u7ECF\u81EA\u52A8\u5F00\u542F\u4E86\u8BE5\u529F\u80FD\u3002\u8981\u8868\u793A\u6D4B\u8BD5\u5931\u8D25\u7684\u8BDD\uFF0C\u4F60\u751A\u81F3\u53EF\u4EE5\u4F7F\u7528\u5F02\u5E38\u3002<strong>@Unit</strong> \u7684\u8BBE\u8BA1\u76EE\u6807\u4E4B\u4E00\u5C31\u662F\u5C3D\u53EF\u80FD\u51CF\u5C11\u6DFB\u52A0\u989D\u5916\u7684\u8BED\u6CD5\uFF0C\u800C Java \u7684 <strong>assert</strong> \u548C\u5F02\u5E38\u5BF9\u4E8E\u62A5\u544A\u9519\u8BEF\u800C\u8A00\uFF0C\u5373\u5DF2\u7ECF\u8DB3\u591F\u4E86\u3002\u4E00\u4E2A\u5931\u8D25\u7684 <strong>assert</strong> \u6216\u8005\u4ECE\u65B9\u6CD5\u4ECE\u629B\u51FA\u7684\u5F02\u5E38\u90FD\u88AB\u89C6\u4E3A\u6D4B\u8BD5\u5931\u8D25\uFF0C\u4F46\u662F <strong>@Unit</strong> \u4E0D\u4F1A\u5728\u8FD9\u4E2A\u5931\u8D25\u7684\u6D4B\u8BD5\u4E0A\u5361\u4F4F\uFF0C\u5B83\u4F1A\u7EE7\u7EED\u8FD0\u884C\uFF0C\u76F4\u5230\u6240\u6709\u6D4B\u8BD5\u5B8C\u6BD5\uFF0C\u4E0B\u9762\u662F\u4E00\u4E2A\u793A\u4F8B\u7A0B\u5E8F\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// annotations/AtUnitExample2.java</span>
<span class="token comment">// Assertions and exceptions can be used in @Tests</span>
<span class="token comment">// {java onjava.atunit.AtUnit</span>
<span class="token comment">// build/classes/main/annotations/AtUnitExample2.class}</span>
<span class="token keyword">package</span> <span class="token namespace">annotations</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">onjava<span class="token punctuation">.</span>atunit<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">onjava<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AtUnitExample2</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">methodOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;This is methodOne&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">methodTwo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;This is methodTwo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">assertExample</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">assert</span> <span class="token function">methodOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;This is methodOne&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">assertFailureExample</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">assert</span> <span class="token number">1</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token operator">:</span> <span class="token string">&quot;What a surprise!&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">exceptionExample</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span><span class="token punctuation">(</span><span class="token class-name">FileInputStream</span> fis <span class="token operator">=</span>
                    <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token string">&quot;nofile.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment">// Throws</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">boolean</span> <span class="token function">assertAndReturn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Assertion with message:</span>
        <span class="token keyword">assert</span> <span class="token function">methodTwo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token operator">:</span> <span class="token string">&quot;methodTwo must equal 2&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">methodOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;This is methodOne&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u4E3A\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">annotations<span class="token punctuation">.</span></span>AtUnitExample2</span>
<span class="token punctuation">.</span> exceptionExample <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>FileNotFoundException</span><span class="token operator">:</span>
nofile<span class="token punctuation">.</span>txt <span class="token punctuation">(</span><span class="token class-name">The</span> system cannot find the file specified<span class="token punctuation">)</span>
<span class="token punctuation">(</span>failed<span class="token punctuation">)</span>
<span class="token punctuation">.</span> assertExample
<span class="token punctuation">.</span> assertAndReturn <span class="token class-name">This</span> is methodTwo
<span class="token punctuation">.</span> assertFailureExample <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>AssertionError</span><span class="token operator">:</span> <span class="token class-name">What</span>
a surprise<span class="token operator">!</span>
<span class="token punctuation">(</span>failed<span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token number">4</span> tests<span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;&gt;</span> <span class="token number">2</span> FAILURES <span class="token operator">&lt;&lt;</span><span class="token operator">&lt;</span>
<span class="token class-name"><span class="token namespace">annotations<span class="token punctuation">.</span></span>AtUnitExample2</span><span class="token operator">:</span> exceptionExample
<span class="token class-name"><span class="token namespace">annotations<span class="token punctuation">.</span></span>AtUnitExample2</span><span class="token operator">:</span> assertFailureExample
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u4E0B\u662F\u4E00\u4E2A\u4F7F\u7528\u975E\u5D4C\u5165\u5F0F\u6D4B\u8BD5\u7684\u4F8B\u5B50\uFF0C\u5E76\u4E14\u4F7F\u7528\u4E86\u65AD\u8A00\uFF0C\u5B83\u5C06\u4F1A\u5BF9 <strong>java.util.HashSet</strong> \u8FDB\u884C\u4E00\u4E9B\u7B80\u5355\u7684\u6D4B\u8BD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// annotations/HashSetTest.java</span>
<span class="token comment">// {java onjava.atunit.AtUnit</span>
<span class="token comment">// build/classes/main/annotations/HashSetTest.class}</span>
<span class="token keyword">package</span> <span class="token namespace">annotations</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">onjava<span class="token punctuation">.</span>atunit<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">onjava<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HashSetTest</span> <span class="token punctuation">{</span>
    <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> testObject <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">initialization</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">assert</span> testObject<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">_Contains</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        testObject<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;one&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">assert</span> testObject<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;one&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">_Remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        testObject<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;one&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        testObject<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">&quot;one&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">assert</span> testObject<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u91C7\u7528\u7EE7\u627F\u7684\u65B9\u5F0F\u53EF\u80FD\u4F1A\u66F4\u7B80\u5355\uFF0C\u4E5F\u6CA1\u6709\u4E00\u4E9B\u5176\u4ED6\u7684\u7EA6\u675F\u3002</p><p>\u5BF9\u6BCF\u4E00\u4E2A\u5355\u5143\u6D4B\u8BD5\u800C\u8A00\uFF0C<strong>@Unit</strong> \u90FD\u4F1A\u4F7F\u7528\u9ED8\u8BA4\u7684\u65E0\u53C2\u6784\u9020\u5668\uFF0C\u4E3A\u8BE5\u6D4B\u8BD5\u7C7B\u6240\u5C5E\u7684\u7C7B\u521B\u5EFA\u51FA\u4E00\u4E2A\u65B0\u7684\u5B9E\u4F8B\u3002\u5E76\u5728\u6B64\u65B0\u521B\u5EFA\u7684\u5BF9\u8C61\u4E0A\u8FD0\u884C\u6D4B\u8BD5\uFF0C\u7136\u540E\u4E22\u5F03\u8BE5\u5BF9\u8C61\uFF0C\u4EE5\u514D\u5BF9\u5176\u4ED6\u6D4B\u8BD5\u4EA7\u751F\u526F\u4F5C\u7528\u3002\u5982\u6B64\u521B\u5EFA\u5BF9\u8C61\u5BFC\u81F4\u6211\u4EEC\u4F9D\u8D56\u4E8E\u7C7B\u7684\u9ED8\u8BA4\u6784\u9020\u5668\u3002\u5982\u679C\u4F60\u7684\u7C7B\u6CA1\u6709\u9ED8\u8BA4\u6784\u9020\u5668\uFF0C\u6216\u8005\u5BF9\u8C61\u9700\u8981\u590D\u6742\u7684\u6784\u9020\u8FC7\u7A0B\uFF0C\u90A3\u4E48\u4F60\u53EF\u4EE5\u521B\u5EFA\u4E00\u4E2A <strong>static</strong> \u65B9\u6CD5\u4E13\u95E8\u8D1F\u8D23\u6784\u9020\u5BF9\u8C61\uFF0C\u7136\u540E\u4F7F\u7528 <strong>@TestObjectCreate</strong> \u6CE8\u89E3\u6807\u8BB0\u8BE5\u65B9\u6CD5\uFF0C\u4F8B\u5B50\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// annotations/AtUnitExample3.java</span>
<span class="token comment">// {java onjava.atunit.AtUnit</span>
<span class="token comment">// build/classes/main/annotations/AtUnitExample3.class}</span>
<span class="token keyword">package</span> <span class="token namespace">annotations</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">onjava<span class="token punctuation">.</span>atunit<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">onjava<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AtUnitExample3</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> n<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">AtUnitExample3</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span>n <span class="token operator">=</span> n<span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getN</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> n<span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">methodOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;This is methodOne&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">methodTwo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;This is methodTwo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@TestObjectCreate</span>
    <span class="token keyword">static</span> <span class="token class-name">AtUnitExample3</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">AtUnitExample3</span><span class="token punctuation">(</span><span class="token number">47</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">boolean</span> <span class="token function">initialization</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> n <span class="token operator">==</span> <span class="token number">47</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">boolean</span> <span class="token function">methodOneTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">methodOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;This is methodOne&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">boolean</span> <span class="token function">m2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token function">methodTwo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u4E3A\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">annotations<span class="token punctuation">.</span></span>AtUnitExample3</span>
<span class="token punctuation">.</span> initialization
<span class="token punctuation">.</span> m2 <span class="token class-name">This</span> is methodTwo
<span class="token punctuation">.</span> methodOneTest
OK <span class="token punctuation">(</span><span class="token number">3</span> tests<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>@TestObjectCreate</strong> \u4FEE\u9970\u7684\u65B9\u6CD5\u5FC5\u987B\u58F0\u660E\u4E3A <strong>static</strong> \uFF0C\u4E14\u5FC5\u987B\u8FD4\u56DE\u4E00\u4E2A\u4F60\u6B63\u5728\u6D4B\u8BD5\u7684\u7C7B\u578B\u5BF9\u8C61\uFF0C\u8FD9\u4E00\u5207\u90FD\u7531 <strong>@Unit</strong> \u8D1F\u8D23\u786E\u4FDD\u6210\u7ACB\u3002</p><p>\u6709\u7684\u65F6\u5019\uFF0C\u4F60\u9700\u8981\u5411\u5355\u5143\u6D4B\u8BD5\u4E2D\u589E\u52A0\u4E00\u4E9B\u5B57\u6BB5\u3002\u8FD9\u65F6\u5019\u53EF\u4EE5\u4F7F\u7528 <strong>@TestProperty</strong> \u6CE8\u89E3\uFF0C\u7531\u5B83\u6CE8\u89E3\u7684\u5B57\u6BB5\u8868\u793A\u53EA\u5728\u5355\u5143\u6D4B\u8BD5\u4E2D\u4F7F\u7528\uFF08\u56E0\u6B64\uFF0C\u5728\u4F60\u5C06\u4EA7\u54C1\u53D1\u5E03\u7ED9\u5BA2\u6237\u4E4B\u524D\uFF0C\u4ED6\u4EEC\u5E94\u8BE5\u88AB\u5220\u9664\uFF09\u3002\u5728\u4E0B\u9762\u7684\u4F8B\u5B50\u4E2D\uFF0C\u4E00\u4E2A <strong>String</strong> \u901A\u8FC7 <code>String.split()</code> \u65B9\u6CD5\u8FDB\u884C\u5206\u5272\uFF0C\u4ECE\u5176\u4E2D\u8BFB\u53D6\u4E00\u4E2A\u503C\uFF0C\u8FD9\u4E2A\u503C\u5C06\u4F1A\u88AB\u751F\u6210\u6D4B\u8BD5\u5BF9\u8C61\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// annotations/AtUnitExample4.java</span>
<span class="token comment">// {java onjava.atunit.AtUnit</span>
<span class="token comment">// build/classes/main/annotations/AtUnitExample4.class}</span>
<span class="token comment">// {VisuallyInspectOutput}</span>
<span class="token keyword">package</span> <span class="token namespace">annotations</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">onjava<span class="token punctuation">.</span>atunit<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">onjava<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AtUnitExample4</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token class-name">String</span> theory <span class="token operator">=</span> <span class="token string">&quot;All brontosauruses &quot;</span> <span class="token operator">+</span>
            <span class="token string">&quot;are thin at one end, much MUCH thicker in the &quot;</span> <span class="token operator">+</span>
            <span class="token string">&quot;middle, and then thin again at the far end.&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> word<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Random</span> rand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Time-based seed</span>
    <span class="token keyword">public</span> <span class="token class-name">AtUnitExample4</span><span class="token punctuation">(</span><span class="token class-name">String</span> word<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>word <span class="token operator">=</span> word<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getWord</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> word<span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">scrambleWord</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Character</span><span class="token punctuation">&gt;</span></span> chars <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>
                <span class="token class-name">ConvertTo</span><span class="token punctuation">.</span><span class="token function">boxed</span><span class="token punctuation">(</span>word<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">shuffle</span><span class="token punctuation">(</span>chars<span class="token punctuation">,</span> rand<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">StringBuilder</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">char</span> ch <span class="token operator">:</span> chars<span class="token punctuation">)</span>
            result<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> result<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@TestProperty</span>
    <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> input <span class="token operator">=</span>
            <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>theory<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token annotation punctuation">@TestProperty</span>
    <span class="token keyword">static</span> <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> words <span class="token operator">=</span> input<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token annotation punctuation">@TestObjectCreate</span>
    <span class="token keyword">static</span> <span class="token class-name">AtUnitExample4</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>words<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">AtUnitExample4</span><span class="token punctuation">(</span>words<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">boolean</span> <span class="token function">words</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&#39;&quot;</span> <span class="token operator">+</span> <span class="token function">getWord</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">getWord</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;are&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">boolean</span> <span class="token function">scramble1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">// Use specific seed to get verifiable results:</span>
        rand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token number">47</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&#39;&quot;</span> <span class="token operator">+</span> <span class="token function">getWord</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> scrambled <span class="token operator">=</span> <span class="token function">scrambleWord</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>scrambled<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> scrambled<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;lAl&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">boolean</span> <span class="token function">scramble2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        rand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token number">74</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&#39;&quot;</span> <span class="token operator">+</span> <span class="token function">getWord</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> scrambled <span class="token operator">=</span> <span class="token function">scrambleWord</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>scrambled<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> scrambled<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;tsaeborornussu&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u4E3A\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">annotations<span class="token punctuation">.</span></span>AtUnitExample4</span>
<span class="token punctuation">.</span> words <span class="token char">&#39;All&#39;</span>
<span class="token punctuation">(</span>failed<span class="token punctuation">)</span>
<span class="token punctuation">.</span> scramble1 &#39;brontosauruses&#39;
ntsaueorosurbs
<span class="token punctuation">(</span>failed<span class="token punctuation">)</span>
<span class="token punctuation">.</span> scramble2 <span class="token char">&#39;are&#39;</span>
are
<span class="token punctuation">(</span>failed<span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token number">3</span> tests<span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;&gt;</span> <span class="token number">3</span> FAILURES <span class="token operator">&lt;&lt;</span><span class="token operator">&lt;</span>
<span class="token class-name"><span class="token namespace">annotations<span class="token punctuation">.</span></span>AtUnitExample4</span><span class="token operator">:</span> words
<span class="token class-name"><span class="token namespace">annotations<span class="token punctuation">.</span></span>AtUnitExample4</span><span class="token operator">:</span> scramble1
<span class="token class-name"><span class="token namespace">annotations<span class="token punctuation">.</span></span>AtUnitExample4</span><span class="token operator">:</span> scramble2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>@TestProperty</strong> \u4E5F\u53EF\u4EE5\u7528\u6765\u6807\u8BB0\u90A3\u4E9B\u53EA\u5728\u6D4B\u8BD5\u4E2D\u4F7F\u7528\u7684\u65B9\u6CD5\uFF0C\u4F46\u662F\u5B83\u4EEC\u672C\u8EAB\u4E0D\u662F\u6D4B\u8BD5\u65B9\u6CD5\u3002</p><p>\u5982\u679C\u4F60\u7684\u6D4B\u8BD5\u5BF9\u8C61\u9700\u8981\u6267\u884C\u67D0\u4E9B\u521D\u59CB\u5316\u5DE5\u4F5C\uFF0C\u5E76\u4E14\u4F7F\u7528\u5B8C\u6210\u4E4B\u540E\u8FD8\u9700\u8981\u6267\u884C\u6E05\u7406\u5DE5\u4F5C\uFF0C\u90A3\u4E48\u53EF\u4EE5\u9009\u62E9\u4F7F\u7528 <strong>static</strong> \u7684 <strong>@TestObjectCleanup</strong> \u65B9\u6CD5\uFF0C\u5F53\u6D4B\u8BD5\u5BF9\u8C61\u4F7F\u7528\u7ED3\u675F\u4E4B\u540E\uFF0C\u8BE5\u65B9\u6CD5\u4F1A\u4E3A\u4F60\u6267\u884C\u6E05\u7406\u5DE5\u4F5C\u3002\u5728\u4E0B\u9762\u7684\u793A\u4F8B\u4E2D\uFF0C<strong>@TestObjectCleanup</strong> \u4E3A\u6BCF\u4E00\u4E2A\u6D4B\u8BD5\u5BF9\u8C61\u90FD\u6253\u5F00\u4E86\u4E00\u4E2A\u6587\u4EF6\uFF0C\u56E0\u6B64\u5FC5\u987B\u5728\u4E22\u5F03\u6D4B\u8BD5\u7684\u65F6\u5019\u5173\u95ED\u8BE5\u6587\u4EF6\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// annotations/AtUnitExample5.java</span>
<span class="token comment">// {java onjava.atunit.AtUnit</span>
<span class="token comment">// build/classes/main/annotations/AtUnitExample5.class}</span>
<span class="token keyword">package</span> <span class="token namespace">annotations</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">onjava<span class="token punctuation">.</span>atunit<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">onjava<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AtUnitExample5</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> text<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">AtUnitExample5</span><span class="token punctuation">(</span><span class="token class-name">String</span> text<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>text <span class="token operator">=</span> text<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> text<span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@TestProperty</span>
    <span class="token keyword">static</span> <span class="token class-name">PrintWriter</span> output<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@TestProperty</span>
    <span class="token keyword">static</span> <span class="token keyword">int</span> counter<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@TestObjectCreate</span>
    <span class="token keyword">static</span> <span class="token class-name">AtUnitExample5</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> id <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>counter<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            output <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PrintWriter</span><span class="token punctuation">(</span><span class="token string">&quot;Test&quot;</span> <span class="token operator">+</span> id <span class="token operator">+</span> <span class="token string">&quot;.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">AtUnitExample5</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@TestObjectCleanup</span>
    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">cleanup</span><span class="token punctuation">(</span><span class="token class-name">AtUnitExample5</span> tobj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Running cleanup&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        output<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">boolean</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        output<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;test1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">boolean</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        output<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;test2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">boolean</span> <span class="token function">test3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        output<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;test3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u4E3A\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">annotations<span class="token punctuation">.</span></span>AtUnitExample5</span>
<span class="token punctuation">.</span> test1
<span class="token class-name">Running</span> cleanup
<span class="token punctuation">.</span> test3
<span class="token class-name">Running</span> cleanup
<span class="token punctuation">.</span> test2
<span class="token class-name">Running</span> cleanup
OK <span class="token punctuation">(</span><span class="token number">3</span> tests<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u8F93\u51FA\u4E2D\u6211\u4EEC\u53EF\u4EE5\u770B\u5230\uFF0C\u6E05\u7406\u65B9\u6CD5\u4F1A\u5728\u6BCF\u4E2A\u6D4B\u8BD5\u65B9\u6CD5\u7ED3\u675F\u4E4B\u540E\u81EA\u52A8\u8FD0\u884C\u3002</p><h3 id="\u5728-unit-\u4E2D\u4F7F\u7528\u6CDB\u578B" tabindex="-1"><a class="header-anchor" href="#\u5728-unit-\u4E2D\u4F7F\u7528\u6CDB\u578B" aria-hidden="true">#</a> \u5728 @Unit \u4E2D\u4F7F\u7528\u6CDB\u578B</h3><p>\u6CDB\u578B\u4E3A <strong>@Unit</strong> \u51FA\u4E86\u4E00\u4E2A\u96BE\u9898\uFF0C\u56E0\u4E3A\u6211\u4EEC\u4E0D\u53EF\u80FD\u201C\u901A\u7528\u6D4B\u8BD5\u201D\u3002\u6211\u4EEC\u5FC5\u987B\u9488\u5BF9\u67D0\u4E2A\u7279\u5B9A\u7C7B\u578B\u7684\u53C2\u6570\u6216\u8005\u53C2\u6570\u96C6\u624D\u80FD\u8FDB\u884C\u6D4B\u8BD5\u3002\u89E3\u51B3\u65B9\u6CD5\u5341\u5206\u7B80\u5355\uFF0C\u8BA9\u6D4B\u8BD5\u7C7B\u7EE7\u627F\u81EA\u6CDB\u578B\u7C7B\u7684\u4E00\u4E2A\u7279\u5B9A\u7248\u672C\u5373\u53EF\uFF1A</p><p>\u4E0B\u9762\u662F\u4E00\u4E2A <strong>stack</strong> \u7684\u7B80\u5355\u5B9E\u73B0\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// annotations/StackL.java</span>
<span class="token comment">// A stack built on a LinkedList</span>
<span class="token keyword">package</span> <span class="token namespace">annotations</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StackL</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">push</span><span class="token punctuation">(</span><span class="token class-name">T</span> v<span class="token punctuation">)</span> <span class="token punctuation">{</span> list<span class="token punctuation">.</span><span class="token function">addFirst</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token class-name">T</span> <span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> list<span class="token punctuation">.</span><span class="token function">getFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token class-name">T</span> <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> list<span class="token punctuation">.</span><span class="token function">removeFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E3A\u4E86\u6D4B\u8BD5 String \u7248\u672C\uFF0C\u6211\u4EEC\u76F4\u63A5\u8BA9\u6D4B\u8BD5\u7C7B\u7EE7\u627F\u4E00\u4E2A Stack&lt;String&gt; \uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// annotations/StackLStringTst.java</span>
<span class="token comment">// Applying @Unit to generics</span>
<span class="token comment">// {java onjava.atunit.AtUnit</span>
<span class="token comment">// build/classes/main/annotations/StackLStringTst.class}</span>
<span class="token keyword">package</span> <span class="token namespace">annotations</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">onjava<span class="token punctuation">.</span>atunit<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">onjava<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span>
<span class="token class-name">StackLStringTst</span> <span class="token keyword">extends</span> <span class="token class-name">StackL</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">tPush</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&quot;one&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">assert</span> <span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;one&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&quot;two&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">assert</span> <span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;two&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">tPop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&quot;one&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&quot;two&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">assert</span> <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;two&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">assert</span> <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;one&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">void</span> <span class="token function">tTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&quot;A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&quot;B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">assert</span> <span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">assert</span> <span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u4E3A\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">annotations<span class="token punctuation">.</span></span>StackLStringTst</span>
<span class="token punctuation">.</span> tTop
<span class="token punctuation">.</span> tPush
<span class="token punctuation">.</span> tPop
OK <span class="token punctuation">(</span><span class="token number">3</span> tests<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u79CD\u65B9\u6CD5\u5B58\u5728\u7684\u552F\u4E00\u7F3A\u70B9\u662F\uFF0C\u7EE7\u627F\u4F7F\u6211\u4EEC\u5931\u53BB\u4E86\u8BBF\u95EE\u88AB\u6D4B\u8BD5\u7684\u7C7B\u4E2D <strong>private</strong> \u65B9\u6CD5\u7684\u80FD\u529B\u3002\u8FD9\u5BF9\u4F60\u975E\u5E38\u91CD\u8981\uFF0C\u90A3\u4F60\u8981\u4E48\u628A private \u65B9\u6CD5\u53D8\u4E3A <strong>protected</strong>\uFF0C\u8981\u4E48\u6DFB\u52A0\u4E00\u4E2A\u975E <strong>private</strong> \u7684 <strong>@TestProperty</strong> \u65B9\u6CD5\uFF0C\u7531\u5B83\u6765\u8C03\u7528 <strong>private</strong> \u65B9\u6CD5\uFF08\u7A0D\u540E\u6211\u4EEC\u4F1A\u770B\u5230\uFF0C<strong>AtUnitRemover</strong> \u4F1A\u5220\u9664\u4EA7\u54C1\u4E2D\u7684 <strong>@TestProperty</strong> \u65B9\u6CD5\uFF09\u3002</p><p><strong>@Unit</strong> \u641C\u7D22\u90A3\u4E9B\u5305\u542B\u5408\u9002\u6CE8\u89E3\u7684\u7C7B\u6587\u4EF6\uFF0C\u7136\u540E\u8FD0\u884C <strong>@Test</strong> \u65B9\u6CD5\u3002\u6211\u7684\u4E3B\u8981\u76EE\u6807\u5C31\u662F\u8BA9 <strong>@Unit</strong> \u6D4B\u8BD5\u7CFB\u7EDF\u5C3D\u53EF\u80FD\u7684\u900F\u660E\uFF0C\u4F7F\u5F97\u4EBA\u4EEC\u4F7F\u7528\u5B83\u7684\u65F6\u5019\u53EA\u9700\u8981\u6DFB\u52A0 <strong>@Test</strong> \u6CE8\u89E3\uFF0C\u800C\u4E0D\u9700\u8981\u7279\u6B8A\u7684\u7F16\u7801\u548C\u77E5\u8BC6\uFF08\u73B0\u5728\u7248\u672C\u7684 <strong>JUnit</strong> \u7B26\u5408\u8FD9\u4E2A\u5B9E\u8DF5\uFF09\u3002\u4E0D\u8FC7\uFF0C\u5982\u679C\u8BF4\u7F16\u5199\u6D4B\u8BD5\u4E0D\u4F1A\u9047\u5230\u4EFB\u4F55\u56F0\u96BE\uFF0C\u4E5F\u4E0D\u592A\u53EF\u80FD\uFF0C\u56E0\u6B64 <strong>@Unit</strong> \u4F1A\u5C3D\u91CF\u8BA9\u8FD9\u4E9B\u56F0\u96BE\u53D8\u7684\u5FAE\u4E0D\u8DB3\u9053\uFF0C\u5E0C\u671B\u901A\u8FC7\u8FD9\u79CD\u65B9\u5F0F\uFF0C\u4F60\u4EEC\u4F1A\u66F4\u4E50\u610F\u7F16\u5199\u6D4B\u8BD5\u3002</p><h3 id="\u5B9E\u73B0-unit" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0-unit" aria-hidden="true">#</a> \u5B9E\u73B0 @Unit</h3><p>\u9996\u5148\u6211\u4EEC\u9700\u8981\u5B9A\u4E49\u6240\u6709\u7684\u6CE8\u89E3\u7C7B\u578B\u3002\u8FD9\u4E9B\u90FD\u662F\u7B80\u5355\u7684\u6807\u7B7E\uFF0C\u5E76\u4E14\u6CA1\u6709\u4EFB\u4F55\u5B57\u6BB5\u3002@Test \u6807\u7B7E\u5728\u672C\u7AE0\u5F00\u5934\u5DF2\u7ECF\u5B9A\u4E49\u8FC7\u4E86\uFF0C\u8FD9\u91CC\u662F\u5176\u4ED6\u6240\u9700\u8981\u7684\u6CE8\u89E3\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// onjava/atunit/TestObjectCreate.java</span>
<span class="token comment">// The @Unit @TestObjectCreate tag</span>
<span class="token keyword">package</span> <span class="token namespace">onjava<span class="token punctuation">.</span>atunit</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span>METHOD<span class="token punctuation">)</span>
<span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span>RUNTIME<span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">TestObjectCreate</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// onjava/atunit/TestObjectCleanup.java</span>
<span class="token comment">// The @Unit @TestObjectCleanup tag</span>
<span class="token keyword">package</span> <span class="token namespace">onjava<span class="token punctuation">.</span>atunit</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span>METHOD<span class="token punctuation">)</span>
<span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span>RUNTIME<span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">TestObjectCleanup</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// onjava/atunit/TestProperty.java</span>
<span class="token comment">// The @Unit @TestProperty tag</span>
<span class="token keyword">package</span> <span class="token namespace">onjava<span class="token punctuation">.</span>atunit</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token comment">// Both fields and methods can be tagged as properties:</span>
<span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span>FIELD<span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span>METHOD<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span>RUNTIME<span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">TestProperty</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6240\u6709\u6D4B\u8BD5\u7684\u4FDD\u7559\u5C5E\u6027\u90FD\u4E3A <strong>RUNTIME</strong>\uFF0C\u8FD9\u662F\u56E0\u4E3A <strong>@Unit</strong> \u5FC5\u987B\u5728\u7F16\u8BD1\u540E\u7684\u4EE3\u7801\u4E2D\u53D1\u73B0\u8FD9\u4E9B\u6CE8\u89E3\u3002</p><p>\u8981\u5B9E\u73B0\u7CFB\u7EDF\u5E76\u8FD0\u884C\u6D4B\u8BD5\uFF0C\u6211\u4EEC\u8FD8\u9700\u8981\u53CD\u5C04\u673A\u5236\u6765\u63D0\u53D6\u6CE8\u89E3\u3002\u4E0B\u9762\u8FD9\u4E2A\u7A0B\u5E8F\u901A\u8FC7\u6CE8\u89E3\u4E2D\u7684\u4FE1\u606F\uFF0C\u51B3\u5B9A\u5982\u4F55\u6784\u9020\u6D4B\u8BD5\u5BF9\u8C61\uFF0C\u5E76\u5728\u6D4B\u8BD5\u5BF9\u8C61\u4E0A\u8FD0\u884C\u6D4B\u8BD5\u3002\u6B63\u662F\u7531\u4E8E\u6CE8\u89E3\u5E2E\u52A9\uFF0C\u8FD9\u4E2A\u7A0B\u5E8F\u624D\u4F1A\u5982\u6B64\u77ED\u5C0F\u800C\u76F4\u63A5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// onjava/atunit/AtUnit.java</span>
<span class="token comment">// An annotation-based unit-test framework</span>
<span class="token comment">// {java onjava.atunit.AtUnit}</span>
<span class="token keyword">package</span> <span class="token namespace">onjava<span class="token punctuation">.</span>atunit</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">onjava<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AtUnit</span> <span class="token keyword">implements</span> <span class="token class-name">ProcessFiles<span class="token punctuation">.</span>Strategy</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> testClass<span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> failedTests<span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token keyword">long</span> testsRun <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token keyword">long</span> failures <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span>
    <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">ClassLoader</span><span class="token punctuation">.</span><span class="token function">getSystemClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setDefaultAssertionStatus</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Enable assert</span>
        <span class="token keyword">new</span> <span class="token class-name">ProcessFiles</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AtUnit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;class&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>failures <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;OK (&quot;</span> <span class="token operator">+</span> testsRun <span class="token operator">+</span> <span class="token string">&quot; tests)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;(&quot;</span> <span class="token operator">+</span> testsRun <span class="token operator">+</span> <span class="token string">&quot; tests)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
                    <span class="token string">&quot;\\n&gt;&gt;&gt; &quot;</span> <span class="token operator">+</span> failures <span class="token operator">+</span> <span class="token string">&quot; FAILURE&quot;</span> <span class="token operator">+</span>
                            <span class="token punctuation">(</span>failures <span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token string">&quot;S&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; &lt;&lt;&lt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">String</span> failed <span class="token operator">:</span> failedTests<span class="token punctuation">)</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span> <span class="token operator">+</span> failed<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">process</span><span class="token punctuation">(</span><span class="token class-name">File</span> cFile<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span> cName <span class="token operator">=</span> <span class="token class-name">ClassNameFinder</span><span class="token punctuation">.</span><span class="token function">thisClass</span><span class="token punctuation">(</span>
                    <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">readAllBytes</span><span class="token punctuation">(</span>cFile<span class="token punctuation">.</span><span class="token function">toPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>cName<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;public:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            cName <span class="token operator">=</span> cName<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>cName<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span> <span class="token comment">// Ignore unpackaged classes</span>
            testClass <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>cName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> <span class="token operator">|</span> <span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">TestMethods</span> testMethods <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TestMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Method</span> creator <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">Method</span> cleanup <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Method</span> m <span class="token operator">:</span> testClass<span class="token punctuation">.</span><span class="token function">getDeclaredMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            testMethods<span class="token punctuation">.</span><span class="token function">addIfTestMethod</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>creator <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                creator <span class="token operator">=</span> <span class="token function">checkForCreatorMethod</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>cleanup <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                cleanup <span class="token operator">=</span> <span class="token function">checkForCleanupMethod</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>testMethods<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>creator <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Modifier</span><span class="token punctuation">.</span><span class="token function">isPublic</span><span class="token punctuation">(</span>testClass
                            <span class="token punctuation">.</span><span class="token function">getDeclaredConstructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                            <span class="token punctuation">.</span><span class="token function">getModifiers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Error: &quot;</span> <span class="token operator">+</span> testClass <span class="token operator">+</span>
                                <span class="token string">&quot; no-arg constructor must be public&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">NoSuchMethodException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">// Synthesized no-arg constructor; OK</span>
                <span class="token punctuation">}</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>testClass<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Method</span> m <span class="token operator">:</span> testMethods<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot; . &quot;</span> <span class="token operator">+</span> m<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">Object</span> testObject <span class="token operator">=</span> <span class="token function">createTestObject</span><span class="token punctuation">(</span>creator<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">boolean</span> success <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span><span class="token function">getReturnType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">boolean</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        success <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">)</span>m<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>testObject<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">else</span> <span class="token punctuation">{</span>
                        m<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>testObject<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        success <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">// If no assert fails</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">InvocationTargetException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">// Actual exception is inside e:</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getCause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>success <span class="token operator">?</span> <span class="token string">&quot;&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;(failed)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                testsRun<span class="token operator">++</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>success<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    failures<span class="token operator">++</span><span class="token punctuation">;</span>
                    failedTests<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>testClass<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
                            <span class="token string">&quot;: &quot;</span> <span class="token operator">+</span> m<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>cleanup <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                    cleanup<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>testObject<span class="token punctuation">,</span> testObject<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IllegalAccessException</span> <span class="token operator">|</span>
                    <span class="token class-name">IllegalArgumentException</span> <span class="token operator">|</span>
                    <span class="token class-name">InvocationTargetException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span>
    <span class="token keyword">class</span> <span class="token class-name">TestMethods</span> <span class="token keyword">extends</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Method</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
        <span class="token keyword">void</span> <span class="token function">addIfTestMethod</span><span class="token punctuation">(</span><span class="token class-name">Method</span> m<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token class-name">Test</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span><span class="token function">getReturnType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">boolean</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token operator">||</span>
                    m<span class="token punctuation">.</span><span class="token function">getReturnType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;@Test method&quot;</span> <span class="token operator">+</span>
                        <span class="token string">&quot; must return boolean or void&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            m<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// If it&#39;s private, etc.</span>
            <span class="token function">add</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span>
    <span class="token class-name">Method</span> <span class="token function">checkForCreatorMethod</span><span class="token punctuation">(</span><span class="token class-name">Method</span> m<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token class-name">TestObjectCreate</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>m<span class="token punctuation">.</span><span class="token function">getReturnType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>testClass<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;@TestObjectCreate &quot;</span> <span class="token operator">+</span>
                    <span class="token string">&quot;must return instance of Class to be tested&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span><span class="token function">getModifiers</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>
                <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>Modifier</span><span class="token punctuation">.</span>STATIC<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;@TestObjectCreate &quot;</span> <span class="token operator">+</span>
                    <span class="token string">&quot;must be static.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        m<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> m<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span>
    <span class="token class-name">Method</span> <span class="token function">checkForCleanupMethod</span><span class="token punctuation">(</span><span class="token class-name">Method</span> m<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token class-name">TestObjectCleanup</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>m<span class="token punctuation">.</span><span class="token function">getReturnType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;@TestObjectCleanup &quot;</span> <span class="token operator">+</span>
                    <span class="token string">&quot;must return void&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span><span class="token function">getModifiers</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>
                <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>Modifier</span><span class="token punctuation">.</span>STATIC<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;@TestObjectCleanup &quot;</span> <span class="token operator">+</span>
                    <span class="token string">&quot;must be static.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span><span class="token function">getParameterTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span>
                m<span class="token punctuation">.</span><span class="token function">getParameterTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">!=</span> testClass<span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;@TestObjectCleanup &quot;</span> <span class="token operator">+</span>
                    <span class="token string">&quot;must take an argument of the tested type.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        m<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> m<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Object</span>
    <span class="token function">createTestObject</span><span class="token punctuation">(</span><span class="token class-name">Method</span> creator<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>creator <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> creator<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>testClass<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IllegalAccessException</span> <span class="token operator">|</span>
                    <span class="token class-name">IllegalArgumentException</span> <span class="token operator">|</span>
                    <span class="token class-name">InvocationTargetException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;Couldn&#39;t run &quot;</span> <span class="token operator">+</span>
                        <span class="token string">&quot;@TestObject (creator) method.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// Use the no-arg constructor:</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> testClass<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">InstantiationException</span> <span class="token operator">|</span>
                    <span class="token class-name">IllegalAccessException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>
                        <span class="token string">&quot;Couldn&#39;t create a test object. &quot;</span> <span class="token operator">+</span>
                                <span class="token string">&quot;Try using a @TestObject method.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u867D\u7136\u5B83\u53EF\u80FD\u662F\u201C\u8FC7\u65E9\u7684\u91CD\u6784\u201D\uFF08\u56E0\u4E3A\u5B83\u53EA\u5728\u4E66\u4E2D\u4F7F\u7528\u8FC7\u4E00\u6B21\uFF09\uFF0C<strong>AtUnit.java</strong> \u4F7F\u7528\u4E86 <strong>ProcessFiles</strong> \u5DE5\u5177\u9010\u6B65\u5224\u65AD\u547D\u4EE4\u884C\u4E2D\u7684\u53C2\u6570\uFF0C\u51B3\u5B9A\u5B83\u662F\u4E00\u4E2A\u76EE\u5F55\u8FD8\u662F\u6587\u4EF6\uFF0C\u5E76\u91C7\u53D6\u76F8\u5E94\u7684\u884C\u4E3A\u3002\u8FD9\u53EF\u4EE5\u5E94\u7528\u4E8E\u4E0D\u540C\u7684\u89E3\u51B3\u65B9\u6CD5\uFF0C\u662F\u56E0\u4E3A\u5B83\u5305\u542B\u4E86\u4E00\u4E2A \u53EF\u7528\u4E8E\u81EA\u5B9A\u4E49\u7684 <strong>Strategy</strong> \u63A5\u53E3\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// onjava/ProcessFiles.java</span>
<span class="token keyword">package</span> <span class="token namespace">onjava</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ProcessFiles</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Strategy</span> <span class="token punctuation">{</span>
        <span class="token keyword">void</span> <span class="token function">process</span><span class="token punctuation">(</span><span class="token class-name">File</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">private</span> <span class="token class-name">Strategy</span> strategy<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> ext<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">ProcessFiles</span><span class="token punctuation">(</span><span class="token class-name">Strategy</span> strategy<span class="token punctuation">,</span> <span class="token class-name">String</span> ext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>strategy <span class="token operator">=</span> strategy<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>ext <span class="token operator">=</span> ext<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
                <span class="token function">processDirectoryTree</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span>
                <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">String</span> arg <span class="token operator">:</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">File</span> fileArg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span>fileArg<span class="token punctuation">.</span><span class="token function">isDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token function">processDirectoryTree</span><span class="token punctuation">(</span>fileArg<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">else</span> <span class="token punctuation">{</span>
<span class="token comment">// Allow user to leave off extension:</span>
                        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>arg<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span> <span class="token operator">+</span> ext<span class="token punctuation">)</span><span class="token punctuation">)</span>
                            arg <span class="token operator">+=</span> <span class="token string">&quot;.&quot;</span> <span class="token operator">+</span> ext<span class="token punctuation">;</span>
                        strategy<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span>
                                <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCanonicalFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">processDirectoryTree</span><span class="token punctuation">(</span><span class="token class-name">File</span> root<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">PathMatcher</span> matcher <span class="token operator">=</span> <span class="token class-name">FileSystems</span><span class="token punctuation">.</span><span class="token function">getDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">getPathMatcher</span><span class="token punctuation">(</span><span class="token string">&quot;glob:**/*.{&quot;</span> <span class="token operator">+</span> ext <span class="token operator">+</span> <span class="token string">&quot;}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">walk</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span><span class="token function">toPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>matcher<span class="token operator">::</span><span class="token function">matches</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>p <span class="token operator">-&gt;</span> strategy<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span><span class="token function">toFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>AtUnit</strong> \u7C7B\u5B9E\u73B0\u4E86 <strong>ProcessFiles.Strategy</strong>\uFF0C\u5176\u5305\u542B\u4E86\u4E00\u4E2A <code>process()</code> \u65B9\u6CD5\u3002\u5728\u8FD9\u79CD\u65B9\u5F0F\u4E0B\uFF0C<strong>AtUnit</strong> \u5B9E\u4F8B\u53EF\u4EE5\u4F5C\u4E3A\u53C2\u6570\u4F20\u9012\u7ED9 <strong>ProcessFiles</strong> \u6784\u9020\u5668\u3002\u7B2C\u4E8C\u4E2A\u6784\u9020\u5668\u7684\u53C2\u6570\u544A\u8BC9 <strong>ProcessFiles</strong> \u5982\u5BFB\u627E\u6240\u6709\u5305\u542B \u201Cclass\u201D \u62D3\u5C55\u540D\u7684\u6587\u4EF6\u3002</p><p>\u5982\u4E0B\u662F\u4E00\u4E2A\u7B80\u5355\u7684\u4F7F\u7528\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// annotations/DemoProcessFiles.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">onjava<span class="token punctuation">.</span></span><span class="token class-name">ProcessFiles</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DemoProcessFiles</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token class-name">ProcessFiles</span><span class="token punctuation">(</span>file <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token string">&quot;java&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u4E3A\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token punctuation">.</span>\\<span class="token class-name">AtUnitExample1</span><span class="token punctuation">.</span>java
<span class="token punctuation">.</span>\\<span class="token class-name">AtUnitExample2</span><span class="token punctuation">.</span>java
<span class="token punctuation">.</span>\\<span class="token class-name">AtUnitExample3</span><span class="token punctuation">.</span>java
<span class="token punctuation">.</span>\\<span class="token class-name">AtUnitExample4</span><span class="token punctuation">.</span>java
<span class="token punctuation">.</span>\\<span class="token class-name">AtUnitExample5</span><span class="token punctuation">.</span>java
<span class="token punctuation">.</span>\\<span class="token class-name">AUComposition</span><span class="token punctuation">.</span>java
<span class="token punctuation">.</span>\\<span class="token class-name">AUExternalTest</span><span class="token punctuation">.</span>java
<span class="token punctuation">.</span>\\database\\<span class="token class-name">Constraints</span><span class="token punctuation">.</span>java
<span class="token punctuation">.</span>\\database\\<span class="token class-name">DBTable</span><span class="token punctuation">.</span>java
<span class="token punctuation">.</span>\\database\\<span class="token class-name">Member</span><span class="token punctuation">.</span>java
<span class="token punctuation">.</span>\\database\\<span class="token class-name">SQLInteger</span><span class="token punctuation">.</span>java
<span class="token punctuation">.</span>\\database\\<span class="token class-name">SQLString</span><span class="token punctuation">.</span>java
<span class="token punctuation">.</span>\\database\\<span class="token class-name">TableCreator</span><span class="token punctuation">.</span>java
<span class="token punctuation">.</span>\\database\\<span class="token class-name">Uniqueness</span><span class="token punctuation">.</span>java
<span class="token punctuation">.</span>\\<span class="token class-name">DemoProcessFiles</span><span class="token punctuation">.</span>java
<span class="token punctuation">.</span>\\<span class="token class-name">HashSetTest</span><span class="token punctuation">.</span>java
<span class="token punctuation">.</span>\\ifx\\<span class="token class-name">ExtractInterface</span><span class="token punctuation">.</span>java
<span class="token punctuation">.</span>\\ifx\\<span class="token class-name">IfaceExtractorProcessor</span><span class="token punctuation">.</span>java
<span class="token punctuation">.</span>\\ifx\\<span class="token class-name">Multiplier</span><span class="token punctuation">.</span>java
<span class="token punctuation">.</span>\\<span class="token class-name">PasswordUtils</span><span class="token punctuation">.</span>java
<span class="token punctuation">.</span>\\simplest\\<span class="token class-name">Simple</span><span class="token punctuation">.</span>java
<span class="token punctuation">.</span>\\simplest\\<span class="token class-name">SimpleProcessor</span><span class="token punctuation">.</span>java
<span class="token punctuation">.</span>\\simplest\\<span class="token class-name">SimpleTest</span><span class="token punctuation">.</span>java
<span class="token punctuation">.</span>\\<span class="token class-name">SimulatingNull</span><span class="token punctuation">.</span>java
<span class="token punctuation">.</span>\\<span class="token class-name">StackL</span><span class="token punctuation">.</span>java
<span class="token punctuation">.</span>\\<span class="token class-name">StackLStringTst</span><span class="token punctuation">.</span>java
<span class="token punctuation">.</span>\\<span class="token class-name">Testable</span><span class="token punctuation">.</span>java
<span class="token punctuation">.</span>\\<span class="token class-name">UseCase</span><span class="token punctuation">.</span>java
<span class="token punctuation">.</span>\\<span class="token class-name">UseCaseTracker</span><span class="token punctuation">.</span>java
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u6CA1\u6709\u547D\u4EE4\u884C\u53C2\u6570\uFF0C\u8FD9\u4E2A\u7A0B\u5E8F\u4F1A\u904D\u5386\u5F53\u524D\u7684\u76EE\u5F55\u6811\u3002\u4F60\u8FD8\u53EF\u4EE5\u63D0\u4F9B\u591A\u4E2A\u53C2\u6570\uFF0C\u8FD9\u4E9B\u53C2\u6570\u53EF\u4EE5\u662F\u7C7B\u6587\u4EF6\uFF08\u5E26\u6216\u4E0D\u5E26.class\u6269\u5C55\u540D\uFF09\u6216\u76EE\u5F55\u3002</p><p>\u56DE\u5230\u6211\u4EEC\u5BF9 <strong>AtUnit.java</strong> \u7684\u8BA8\u8BBA\uFF0C\u56E0\u4E3A <strong>@Unit</strong> \u4F1A\u81EA\u52A8\u627E\u5230\u53EF\u6D4B\u8BD5\u7684\u7C7B\u548C\u65B9\u6CD5\uFF0C\u6240\u4EE5\u4E0D\u9700\u8981\u201C\u5957\u4EF6\u201D\u673A\u5236\u3002</p><p><strong>AtUnit.java</strong> \u4E2D\u5B58\u5728\u7684\u4E00\u4E2A\u6211\u4EEC\u5FC5\u987B\u8981\u89E3\u51B3\u7684\u95EE\u9898\u662F\uFF0C\u5F53\u5B83\u53D1\u73B0\u7C7B\u6587\u4EF6\u65F6\uFF0C\u7C7B\u6587\u4EF6\u540D\u4E2D\u7684\u9650\u5B9A\u7C7B\u540D\uFF08\u5305\u62EC\u5305\uFF09\u4E0D\u660E\u663E\u3002\u4E3A\u4E86\u53D1\u73B0\u8FD9\u4E2A\u4FE1\u606F\uFF0C\u5FC5\u987B\u89E3\u6790\u7C7B\u6587\u4EF6 - \u8FD9\u4E0D\u662F\u5FAE\u4E0D\u8DB3\u9053\u7684\uFF0C\u4F46\u4E5F\u4E0D\u662F\u4E0D\u53EF\u80FD\u7684\u3002 \u627E\u5230 .class \u6587\u4EF6\u65F6\uFF0C\u4F1A\u6253\u5F00\u5B83\u5E76\u8BFB\u53D6\u5176\u4E8C\u8FDB\u5236\u6570\u636E\u5E76\u5C06\u5176\u4F20\u9012\u7ED9 <code>ClassNameFinder.thisClass()</code>\u3002 \u5728\u8FD9\u91CC\uFF0C\u6211\u4EEC\u6B63\u5728\u8FDB\u5165\u201C\u5B57\u8282\u7801\u5DE5\u7A0B\u201D\u9886\u57DF\uFF0C\u56E0\u4E3A\u6211\u4EEC\u5B9E\u9645\u4E0A\u6B63\u5728\u5206\u6790\u7C7B\u6587\u4EF6\u7684\u5185\u5BB9\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// onjava/atunit/ClassNameFinder.java</span>
<span class="token comment">// {java onjava.atunit.ClassNameFinder}</span>
<span class="token keyword">package</span> <span class="token namespace">onjava<span class="token punctuation">.</span>atunit</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">onjava<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ClassNameFinder</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">thisClass</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> classBytes<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> offsetTable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> classNameTable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">DataInputStream</span> data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataInputStream</span><span class="token punctuation">(</span>
                    <span class="token keyword">new</span> <span class="token class-name">ByteArrayInputStream</span><span class="token punctuation">(</span>classBytes<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> magic <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">readInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0xcafebabe</span>
            <span class="token keyword">int</span> minorVersion <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">readShort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> majorVersion <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">readShort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> constantPoolCount <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">readShort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> constantPool <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>constantPoolCount<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> constantPoolCount<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> tag <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// int tableSize;</span>
                <span class="token keyword">switch</span><span class="token punctuation">(</span>tag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span> <span class="token comment">// UTF</span>
                        <span class="token keyword">int</span> length <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">readShort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">char</span><span class="token punctuation">[</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>
                        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> bytes<span class="token punctuation">.</span>length<span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span>
                            bytes<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span>data<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">String</span> className <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        classNameTable<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> className<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span> <span class="token comment">// LONG</span>
                    <span class="token keyword">case</span> <span class="token number">6</span><span class="token operator">:</span> <span class="token comment">// DOUBLE</span>
                        data<span class="token punctuation">.</span><span class="token function">readLong</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// discard 8 bytes</span>
                        i<span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">// Special skip necessary</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token number">7</span><span class="token operator">:</span> <span class="token comment">// CLASS</span>
                        <span class="token keyword">int</span> offset <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">readShort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        offsetTable<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> offset<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token number">8</span><span class="token operator">:</span> <span class="token comment">// STRING</span>
                        data<span class="token punctuation">.</span><span class="token function">readShort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// discard 2 bytes</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span> <span class="token comment">// INTEGER</span>
                    <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span> <span class="token comment">// FLOAT</span>
                    <span class="token keyword">case</span> <span class="token number">9</span><span class="token operator">:</span> <span class="token comment">// FIELD_REF</span>
                    <span class="token keyword">case</span> <span class="token number">10</span><span class="token operator">:</span> <span class="token comment">// METHOD_REF</span>
                    <span class="token keyword">case</span> <span class="token number">11</span><span class="token operator">:</span> <span class="token comment">// INTERFACE_METHOD_REF</span>
                    <span class="token keyword">case</span> <span class="token number">12</span><span class="token operator">:</span> <span class="token comment">// NAME_AND_TYPE</span>
                    <span class="token keyword">case</span> <span class="token number">18</span><span class="token operator">:</span> <span class="token comment">// Invoke Dynamic</span>
                        data<span class="token punctuation">.</span><span class="token function">readInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// discard 4 bytes</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token number">15</span><span class="token operator">:</span> <span class="token comment">// Method Handle</span>
                        data<span class="token punctuation">.</span><span class="token function">readByte</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        data<span class="token punctuation">.</span><span class="token function">readShort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">case</span> <span class="token number">16</span><span class="token operator">:</span> <span class="token comment">// Method Type</span>
                        data<span class="token punctuation">.</span><span class="token function">readShort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token keyword">default</span><span class="token operator">:</span>
                        <span class="token keyword">throw</span>
                                <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;Bad tag &quot;</span> <span class="token operator">+</span> tag<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">short</span> accessFlags <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">readShort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> access <span class="token operator">=</span> <span class="token punctuation">(</span>accessFlags <span class="token operator">&amp;</span> <span class="token number">0x0001</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span>
                    <span class="token string">&quot;nonpublic:&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;public:&quot;</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> thisClass <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">readShort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> superClass <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">readShort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> access <span class="token operator">+</span> classNameTable<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>
                    offsetTable<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>thisClass<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token char">&#39;/&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> <span class="token operator">|</span> <span class="token class-name">RuntimeException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// Demonstration:</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">PathMatcher</span> matcher <span class="token operator">=</span> <span class="token class-name">FileSystems</span><span class="token punctuation">.</span><span class="token function">getDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">getPathMatcher</span><span class="token punctuation">(</span><span class="token string">&quot;glob:**/*.class&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Walk the entire tree:</span>
        <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">walk</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>matcher<span class="token operator">::</span><span class="token function">matches</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>p <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    <span class="token keyword">try</span> <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> <span class="token function">thisClass</span><span class="token punctuation">(</span><span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">readAllBytes</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>s <span class="token operator">-&gt;</span> s<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;public:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// .filter(s -&gt; s.indexOf(&#39;$&#39;) &gt;= 0)</span>
                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>s <span class="token operator">-&gt;</span> s<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>s <span class="token operator">-&gt;</span> <span class="token operator">!</span>s<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;enums.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>s <span class="token operator">-&gt;</span> s<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u4E3A\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>ArrayShow</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span>atunit<span class="token punctuation">.</span></span>AtUnit</span>$<span class="token class-name">TestMethods</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span>atunit<span class="token punctuation">.</span></span>AtUnit</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span>atunit<span class="token punctuation">.</span></span>ClassNameFinder</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span>atunit<span class="token punctuation">.</span></span>Test</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span>atunit<span class="token punctuation">.</span></span>TestObjectCleanup</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span>atunit<span class="token punctuation">.</span></span>TestObjectCreate</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span>atunit<span class="token punctuation">.</span></span>TestProperty</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>BasicSupplier</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>CollectionMethodDifferences</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>ConvertTo</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Count</span>$<span class="token class-name">Boolean</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Count</span>$<span class="token class-name">Byte</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Count</span>$<span class="token class-name">Character</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Count</span>$<span class="token class-name">Double</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Count</span>$<span class="token class-name">Float</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Count</span>$<span class="token class-name">Integer</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Count</span>$<span class="token class-name">Long</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Count</span>$<span class="token class-name">Pboolean</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Count</span>$<span class="token class-name">Pbyte</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Count</span>$<span class="token class-name">Pchar</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Count</span>$<span class="token class-name">Pdouble</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Count</span>$<span class="token class-name">Pfloat</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Count</span>$<span class="token class-name">Pint</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Count</span>$<span class="token class-name">Plong</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Count</span>$<span class="token class-name">Pshort</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Count</span>$<span class="token class-name">Short</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Count</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>CountingIntegerList</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>CountMap</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Countries</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Enums</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>FillMap</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>HTMLColors</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>MouseClick</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Nap</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Null</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Operations</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>OSExecute</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>OSExecuteException</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Pair</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>ProcessFiles</span>$<span class="token class-name">Strategy</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>ProcessFiles</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Rand</span>$<span class="token class-name">Boolean</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Rand</span>$<span class="token class-name">Byte</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Rand</span>$<span class="token class-name">Character</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Rand</span>$<span class="token class-name">Double</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Rand</span>$<span class="token class-name">Float</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Rand</span>$<span class="token class-name">Integer</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Rand</span>$<span class="token class-name">Long</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Rand</span>$<span class="token class-name">Pboolean</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Rand</span>$<span class="token class-name">Pbyte</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Rand</span>$<span class="token class-name">Pchar</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Rand</span>$<span class="token class-name">Pdouble</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Rand</span>$<span class="token class-name">Pfloat</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Rand</span>$<span class="token class-name">Pint</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Rand</span>$<span class="token class-name">Plong</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Rand</span>$<span class="token class-name">Pshort</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Rand</span>$<span class="token class-name">Short</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Rand</span>$<span class="token class-name">String</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Rand</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Range</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Repeat</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>RmDir</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Sets</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Stack</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Suppliers</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>TimedAbort</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Timer</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Tuple</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Tuple2</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Tuple3</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Tuple4</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>Tuple5</span>
<span class="token class-name"><span class="token namespace">onjava<span class="token punctuation">.</span></span>TypeCounter</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u867D\u7136\u65E0\u6CD5\u5728\u8FD9\u91CC\u4ECB\u7ECD\u5176\u4E2D\u6240\u6709\u7684\u7EC6\u8282\uFF0C\u4F46\u662F\u6BCF\u4E2A\u7C7B\u6587\u4EF6\u90FD\u5FC5\u987B\u9075\u5FAA\u4E00\u5B9A\u7684\u683C\u5F0F\uFF0C\u800C\u6211\u5DF2\u7ECF\u5C3D\u529B\u7528\u6709\u610F\u4E49\u7684\u5B57\u6BB5\u6765\u8868\u793A\u8FD9\u4E9B\u4ECE <strong>ByteArrayInputStream</strong> \u4E2D\u63D0\u53D6\u51FA\u6765\u7684\u6570\u636E\u7247\u6BB5\u3002\u901A\u8FC7\u65BD\u52A0\u5728\u8F93\u5165\u6D41\u4E0A\u7684\u8BFB\u64CD\u4F5C\uFF0C\u4F60\u80FD\u770B\u51FA\u6BCF\u4E2A\u4FE1\u606F\u7247\u7684\u5927\u5C0F\u3002\u4F8B\u5982\u6BCF\u4E00\u4E2A\u7C7B\u7684\u5934 32 \u4E2A bit \u603B\u662F\u4E00\u4E2A \u201C\u795E\u79D8\u6570\u5B57\u201D <strong>0xcafebabe</strong>\uFF0C\u800C\u63A5\u4E0B\u6765\u7684\u4E24\u4E2A <strong>short</strong> \u503C\u662F\u7248\u672C\u4FE1\u606F\u3002\u5E38\u91CF\u6C60\u5305\u542B\u4E86\u7A0B\u5E8F\u7684\u5E38\u91CF\uFF0C\u6240\u4EE5\u8FD9\u662F\u4E00\u4E2A\u53EF\u53D8\u7684\u503C\u3002\u63A5\u4E0B\u6765\u7684 <strong>short</strong> \u544A\u8BC9\u6211\u4EEC\u8FD9\u4E2A\u5E38\u91CF\u6C60\u6709\u591A\u5927\uFF0C\u7136\u540E\u6211\u4EEC\u4E3A\u5176\u521B\u5EFA\u4E00\u4E2A\u5C3A\u5BF8\u5408\u9002\u7684\u6570\u7EC4\u3002\u5E38\u91CF\u6C60\u4E2D\u7684\u6BCF\u4E00\u4E2A\u5143\u7D20\uFF0C\u5176\u957F\u5EA6\u53EF\u80FD\u662F\u56FA\u5B9A\u5F0F\uFF0C\u4E5F\u53EF\u80FD\u662F\u53EF\u53D8\u7684\u503C\uFF0C\u56E0\u6B64\u6211\u4EEC\u5FC5\u987B\u68C0\u67E5\u6BCF\u4E00\u4E2A\u5E38\u91CF\u7684\u8D77\u59CB\u6807\u8BB0\uFF0C\u7136\u540E\u624D\u80FD\u77E5\u9053\u8BE5\u600E\u4E48\u505A\uFF0C\u8FD9\u5C31\u662F switch \u8BED\u53E5\u7684\u5DE5\u4F5C\u3002\u6211\u4EEC\u5E76\u4E0D\u6253\u7B97\u7CBE\u786E\u7684\u5206\u6790\u7C7B\u4E2D\u6240\u6709\u7684\u6570\u636E\uFF0C\u4EC5\u4EC5\u662F\u4ECE\u6587\u4EF6\u7684\u8D77\u59CB\u4E00\u6B65\u4E00\u6B65\u7684\u8D70\uFF0C\u76F4\u5230\u53D6\u5F97\u6211\u4EEC\u6240\u9700\u7684\u4FE1\u606F\uFF0C\u56E0\u6B64\u4F60\u4F1A\u53D1\u73B0\uFF0C\u5728\u8FD9\u4E2A\u8FC7\u7A0B\u4E2D\u6211\u4EEC\u4E22\u5F03\u4E86\u5927\u91CF\u7684\u6570\u636E\u3002\u5173\u4E8E\u7C7B\u7684\u4FE1\u606F\u90FD\u4FDD\u5B58\u5728 <strong>classNameTable</strong> \u548C <strong>offsetTable</strong> \u4E2D\u3002\u5728\u8BFB\u53D6\u5E38\u91CF\u6C60\u4E4B\u540E\uFF0C\u5C31\u627E\u5230\u4E86 <strong>this_class</strong> \u4FE1\u606F\uFF0C\u8FD9\u662F <strong>offsetTable</strong> \u7684\u4E00\u4E2A\u5750\u6807\uFF0C\u901A\u8FC7\u5B83\u53EF\u4EE5\u627E\u5230\u8FDB\u5165 <strong>classNameTable</strong> \u7684\u5750\u6807\uFF0C\u7136\u540E\u5C31\u53EF\u4EE5\u5F97\u5230\u6211\u4EEC\u6240\u9700\u7684\u7C7B\u7684\u540D\u5B57\u4E86\u3002</p><p>\u73B0\u5728\u8BA9\u6211\u4EEC\u56DE\u5230 <strong>AtUtil.java</strong> \u4E2D\uFF0Cprocess() \u65B9\u6CD5\u4E2D\u62E5\u6709\u4E86\u7C7B\u7684\u540D\u5B57\uFF0C\u7136\u540E\u68C0\u67E5\u5B83\u662F\u5426\u5305\u542B\u201C.\u201D\uFF0C\u5982\u679C\u6709\u5C31\u8868\u793A\u8BE5\u7C7B\u5B9A\u4E49\u4E8E\u4E00\u4E2A\u5305\u4E2D\u3002\u6CA1\u6709\u5305\u7684\u7C7B\u4F1A\u88AB\u5FFD\u7565\u3002\u5982\u679C\u4E00\u4E2A\u7C7B\u5728\u5305\u4E2D\uFF0C\u90A3\u4E48\u6211\u4EEC\u5C31\u53EF\u4EE5\u4F7F\u7528\u6807\u51C6\u7684\u7C7B\u52A0\u8F7D\u5668\u901A\u8FC7 <code>Class.forName()</code> \u5C06\u5176\u52A0\u8F7D\u8FDB\u6765\u3002\u73B0\u5728\u6211\u4EEC\u53EF\u4EE5\u5BF9\u8FD9\u4E2A\u7C7B\u8FDB\u884C <strong>@Unit</strong> \u6CE8\u89E3\u7684\u5206\u6790\u5DE5\u4F5C\u4E86\u3002</p><p>\u6211\u4EEC\u53EA\u9700\u8981\u5173\u6CE8\u4E09\u4EF6\u4E8B\uFF1A\u9996\u5148\u662F <strong>@Test</strong> \u65B9\u6CD5\uFF0C\u5B83\u4EEC\u88AB\u4FDD\u5B58\u5728 <strong>TestMehtods</strong> \u5217\u8868\u4E2D\uFF0C\u7136\u540E\u68C0\u67E5\u5176\u662F\u5426\u5177\u6709 @TestObjectCreate \u548C <strong>@TestObjectCleanup</strong>**** \u65B9\u6CD5\u3002\u4ECE\u4EE3\u7801\u4E2D\u53EF\u4EE5\u770B\u5230\uFF0C\u6211\u4EEC\u901A\u8FC7\u8C03\u7528\u76F8\u5E94\u7684\u65B9\u6CD5\u6765\u67E5\u8BE2\u6CE8\u89E3\u4ECE\u800C\u627E\u5230\u8FD9\u4E9B\u65B9\u6CD5\u3002</p><p>\u6BCF\u627E\u5230\u4E00\u4E2A @Test \u65B9\u6CD5\uFF0C\u5C31\u6253\u5370\u51FA\u6765\u5F53\u524D\u7C7B\u7684\u540D\u5B57\uFF0C\u4E8E\u662F\u89C2\u5BDF\u8005\u7ACB\u523B\u5C31\u53EF\u4EE5\u77E5\u9053\u53D1\u751F\u4E86\u4EC0\u4E48\u3002\u63A5\u4E0B\u6765\u5F00\u59CB\u6267\u884C\u6D4B\u8BD5\uFF0C\u4E5F\u5C31\u662F\u6253\u5370\u51FA\u65B9\u6CD5\u540D\uFF0C\u7136\u540E\u8C03\u7528 createTestObject() \uFF08\u5982\u679C\u5B58\u5728\u4E00\u4E2A\u52A0\u4E86 @TestObjectCreate \u6CE8\u89E3\u7684\u65B9\u6CD5\uFF09\uFF0C\u6216\u8005\u8C03\u7528\u9ED8\u8BA4\u6784\u9020\u5668\u3002\u4E00\u65E6\u521B\u5EFA\u51FA\u6765\u6D4B\u8BD5\u5BF9\u8C61\uFF0C\u5982\u679C\u8C03\u7528\u5176\u4E0A\u7684\u6D4B\u8BD5\u65B9\u6CD5\u3002\u5982\u679C\u6D4B\u8BD5\u7684\u8FD4\u56DE\u503C\u4E3A boolean\uFF0C\u5C31\u6355\u83B7\u8BE5\u7ED3\u679C\u3002\u5982\u679C\u6D4B\u8BD5\u65B9\u6CD5\u6CA1\u6709\u8FD4\u56DE\u503C\uFF0C\u90A3\u4E48\u5C31\u6CA1\u6709\u5F02\u5E38\u53D1\u751F\uFF0C\u6211\u4EEC\u5C31\u5047\u8BBE\u6D4B\u8BD5\u6210\u529F\uFF0C\u53CD\u4E4B\uFF0C\u5982\u679C\u5F53 assert \u5931\u8D25\u6216\u8005\u6709\u4EFB\u4F55\u5F02\u5E38\u629B\u51FA\u7684\u65F6\u5019\uFF0C\u5C31\u8BF4\u660E\u6D4B\u8BD5\u5931\u8D25\uFF0C\u8FD9\u65F6\u5C06\u5F02\u5E38\u4FE1\u606F\u6253\u5370\u51FA\u6765\u4EE5\u663E\u793A\u9519\u8BEF\u7684\u539F\u56E0\u3002\u5982\u679C\u6709\u5931\u8D25\u7684\u6D4B\u8BD5\u53D1\u751F\uFF0C\u90A3\u4E48\u8FD8\u8981\u7EDF\u8BA1\u5931\u8D25\u7684\u6B21\u6570\uFF0C\u5E76\u5C06\u5931\u8D25\u6240\u5C5E\u7684\u7C7B\u548C\u65B9\u6CD5\u52A0\u5165\u5230 failedTests \u4E2D\uFF0C\u4EE5\u4FBF\u6700\u540E\u62A5\u544A\u7ED9\u7528\u6237\u3002</p><h2 id="\u672C\u7AE0\u5C0F\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u672C\u7AE0\u5C0F\u7ED3" aria-hidden="true">#</a> \u672C\u7AE0\u5C0F\u7ED3</h2><p>\u6CE8\u89E3\u662F Java \u5F15\u5165\u7684\u4E00\u9879\u975E\u5E38\u53D7\u6B22\u8FCE\u7684\u8865\u5145\uFF0C\u5B83\u63D0\u4F9B\u4E86\u4E00\u79CD\u7ED3\u6784\u5316\uFF0C\u5E76\u4E14\u5177\u6709\u7C7B\u578B\u68C0\u67E5\u80FD\u529B\u7684\u65B0\u9014\u5F84\uFF0C\u4ECE\u800C\u4F7F\u5F97\u4F60\u80FD\u591F\u4E3A\u4EE3\u7801\u4E2D\u52A0\u5165\u5143\u6570\u636E\uFF0C\u800C\u4E14\u4E0D\u4F1A\u5BFC\u81F4\u4EE3\u7801\u6742\u4E71\u5E76\u96BE\u4EE5\u9605\u8BFB\u3002\u4F7F\u7528\u6CE8\u89E3\u80FD\u591F\u5E2E\u52A9\u6211\u4EEC\u907F\u514D\u7F16\u5199\u7D2F\u8D58\u7684\u90E8\u7F72\u63CF\u8FF0\u6027\u6587\u4EF6\uFF0C\u4EE5\u53CA\u5176\u4ED6\u7684\u751F\u6210\u6587\u4EF6\u3002\u800C Javadoc \u4E2D\u7684 @deprecated \u88AB @Deprecated \u6CE8\u89E3\u6240\u66FF\u4EE3\u7684\u4E8B\u5B9E\u4E5F\u8BF4\u660E\uFF0C\u4E0E\u6CE8\u91CA\u6027\u6587\u5B57\u76F8\u6BD4\uFF0C\u6CE8\u89E3\u7EDD\u5BF9\u66F4\u9002\u7528\u4E8E\u63CF\u8FF0\u7C7B\u76F8\u5173\u7684\u4FE1\u606F\u3002</p><p>Java \u63D0\u4F9B\u4E86\u5F88\u5C11\u7684\u5185\u7F6E\u6CE8\u89E3\u3002\u8FD9\u610F\u5473\u7740\u5982\u679C\u4F60\u5728\u522B\u5904\u627E\u4E0D\u5230\u53EF\u7528\u7684\u7C7B\u5E93\uFF0C\u90A3\u4E48\u5C31\u53EA\u80FD\u81EA\u5DF1\u521B\u5EFA\u65B0\u7684\u6CE8\u89E3\u4EE5\u53CA\u76F8\u5E94\u7684\u5904\u7406\u5668\u3002\u901A\u8FC7\u5C06\u6CE8\u89E3\u5904\u7406\u5668\u94FE\u63A5\u5230 javac\uFF0C\u4F60\u53EF\u4EE5\u4E00\u6B65\u5B8C\u6210\u7F16\u8BD1\u65B0\u751F\u6210\u7684\u6587\u4EF6\uFF0C\u7B80\u5316\u4E86\u6784\u9020\u8FC7\u7A0B\u3002</p><p>API \u7684\u63D0\u4F9B\u65B9\u548C\u6846\u67B6\u5C06\u4F1A\u5C06\u6CE8\u89E3\u4F5C\u4E3A\u4ED6\u4EEC\u5DE5\u5177\u7684\u4E00\u90E8\u5206\u3002\u901A\u8FC7 @Unit \u7CFB\u7EDF\uFF0C\u6211\u4EEC\u53EF\u4EE5\u60F3\u8C61\uFF0C\u6CE8\u89E3\u4F1A\u6781\u5927\u7684\u6539\u53D8\u6211\u4EEC\u7684 Java \u7F16\u7A0B\u4F53\u9A8C\u3002</p><div style="page-break-after:always;"></div><p>[^3 ]: The Java designers coyly suggest that a mirror is where you find a reflection.</p>`,212),o=[e];function c(l,i){return s(),a("div",null,o)}var k=n(p,[["render",c],["__file","23-Annotations.html.vue"]]);export{k as default};
