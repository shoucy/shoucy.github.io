import{_ as n,o as s,c as a,e}from"./app.205a3d76.js";const t={},p=e(`<p>[TOC]</p><h1 id="\u9644\u5F55-\u6807\u51C6io" tabindex="-1"><a class="header-anchor" href="#\u9644\u5F55-\u6807\u51C6io" aria-hidden="true">#</a> \u9644\u5F55:\u6807\u51C6IO</h1><blockquote><p><em>\u6807\u51C6 I/O</em>\u8FD9\u4E2A\u672F\u8BED\u53C2\u8003Unix\u4E2D\u7684\u6982\u5FF5\uFF0C\u6307\u7A0B\u5E8F\u6240\u4F7F\u7528\u7684\u5355\u4E00\u4FE1\u606F\u6D41\uFF08\u8FD9\u79CD\u601D\u60F3\u5728\u5927\u591A\u6570\u64CD\u4F5C\u7CFB\u7EDF\u4E2D\uFF0C\u4E5F\u6709\u76F8\u4F3C\u5F62\u5F0F\u7684\u5B9E\u73B0\uFF09\u3002</p></blockquote><p>\u7A0B\u5E8F\u7684\u6240\u6709\u8F93\u5165\u90FD\u53EF\u4EE5\u6765\u81EA\u4E8E<em>\u6807\u51C6\u8F93\u5165</em>\uFF0C\u5176\u6240\u6709\u8F93\u51FA\u90FD\u53EF\u4EE5\u6D41\u5411<em>\u6807\u51C6\u8F93\u51FA</em>\uFF0C\u5E76\u4E14\u5176\u6240\u6709\u9519\u8BEF\u4FE1\u606F\u5747\u53EF\u4EE5\u53D1\u9001\u5230<em>\u6807\u51C6\u9519\u8BEF</em>\u3002<em>\u6807\u51C6 I/O</em> \u7684\u610F\u4E49\u5728\u4E8E\u7A0B\u5E8F\u4E4B\u95F4\u53EF\u4EE5\u5F88\u5BB9\u6613\u5730\u8FDE\u63A5\u8D77\u6765\uFF0C\u4E00\u4E2A\u7A0B\u5E8F\u7684\u6807\u51C6\u8F93\u51FA\u53EF\u4EE5\u4F5C\u4E3A\u53E6\u4E00\u4E2A\u7A0B\u5E8F\u7684\u6807\u51C6\u8F93\u5165\u3002\u8FD9\u662F\u4E00\u4E2A\u975E\u5E38\u5F3A\u5927\u7684\u5DE5\u5177\u3002</p><h2 id="\u4ECE\u6807\u51C6\u8F93\u5165\u4E2D\u8BFB\u53D6" tabindex="-1"><a class="header-anchor" href="#\u4ECE\u6807\u51C6\u8F93\u5165\u4E2D\u8BFB\u53D6" aria-hidden="true">#</a> \u4ECE\u6807\u51C6\u8F93\u5165\u4E2D\u8BFB\u53D6</h2><p>\u9075\u5FAA\u6807\u51C6 I/O \u6A21\u578B\uFF0CJava \u63D0\u4F9B\u4E86\u6807\u51C6\u8F93\u5165\u6D41 <code>System.in</code>\u3001\u6807\u51C6\u8F93\u51FA\u6D41 <code>System.out</code> \u548C\u6807\u51C6\u9519\u8BEF\u6D41 <code>System.err</code>\u3002\u5728\u672C\u4E66\u4E2D\uFF0C\u4F60\u5DF2\u7ECF\u4E86\u89E3\u5230\u5982\u4F55\u4F7F\u7528 <code>System.out</code>\u5C06\u6570\u636E\u5199\u5230\u6807\u51C6\u8F93\u51FA\u3002 <code>System.out</code> \u5DF2\u7ECF\u9884\u5148\u5305\u88C5<a href="%E8%AF%91%E8%80%85%E6%B3%A8%EF%BC%9A%E8%BF%99%E9%87%8C%E7%94%A8%E5%88%B0%E4%BA%86**%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F**%E3%80%82">^1</a>\u6210\u4E86 <code>PrintStream</code> \u5BF9\u8C61\u3002\u6807\u51C6\u9519\u8BEF\u6D41 <code>System.err</code> \u4E5F\u9884\u5148\u5305\u88C5\u4E3A <code>PrintStream</code> \u5BF9\u8C61\uFF0C\u4F46\u662F\u6807\u51C6\u8F93\u5165\u6D41 <code>System.in</code> \u662F\u539F\u751F\u7684\u6CA1\u6709\u7ECF\u8FC7\u5305\u88C5\u7684 <code>InputStream</code>\u3002\u8FD9\u610F\u5473\u7740\u5C3D\u7BA1\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528\u6807\u51C6\u8F93\u51FA\u6D41 <code>System.out</code> \u548C\u6807\u51C6\u9519\u8BEF\u6D41 <code>System.err</code>\uFF0C\u4F46\u662F\u5728\u8BFB\u53D6 <code>System.in</code> \u4E4B\u524D\u5FC5\u987B\u5148\u5BF9\u5176\u8FDB\u884C\u5305\u88C5\u3002</p><p>\u6211\u4EEC\u901A\u5E38\u4E00\u6B21\u4E00\u884C\u5730\u8BFB\u53D6\u8F93\u5165\u3002\u4E3A\u4E86\u5B9E\u73B0\u8FD9\u4E2A\u529F\u80FD\uFF0C\u5C06 <code>System.in</code> \u5305\u88C5\u6210 <code>BufferedReader</code> \u6765\u4F7F\u7528\uFF0C\u8FD9\u8981\u6C42\u6211\u4EEC\u7528 <code>InputStreamReader</code> \u628A <code>System.in</code> \u8F6C\u6362<a href="%E8%AF%91%E8%80%85%E6%B3%A8%EF%BC%9A%E8%BF%99%E9%87%8C%E7%94%A8%E5%88%B0%E4%BA%86**%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F**%E3%80%82">^2</a>\u6210 <code>Reader</code> \u3002\u4E0B\u9762\u8FD9\u4E2A\u4F8B\u5B50\u5C06\u952E\u5165\u7684\u6BCF\u4E00\u884C\u663E\u793A\u51FA\u6765\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// standardio/Echo.java</span>
<span class="token comment">// How to read from standard input</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">onjava<span class="token punctuation">.</span></span><span class="token class-name">TimedAbort</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Echo</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">TimedAbort</span> abort <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TimedAbort</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span>
                <span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">lines</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span>ln <span class="token operator">-&gt;</span> abort<span class="token punctuation">.</span><span class="token function">restart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Ctrl-Z or two seconds inactivity</span>
        <span class="token comment">// terminates the program</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>BufferedReader</code> \u63D0\u4F9B\u4E86 <code>lines()</code> \u65B9\u6CD5\uFF0C\u8FD4\u56DE\u7C7B\u578B\u662F <code>Stream&lt;String&gt;</code> \u3002\u8FD9\u663E\u793A\u51FA\u6D41\u6A21\u578B\u7684\u7684\u7075\u6D3B\u6027\uFF1A\u4EC5\u4F7F\u7528\u6807\u51C6\u8F93\u5165\u5C31\u80FD\u5F88\u597D\u5730\u5DE5\u4F5C\u3002 <code>peek()</code> \u65B9\u6CD5\u91CD\u542F <code>TimeAbort</code>\uFF0C\u53EA\u8981\u4FDD\u8BC1\u81F3\u5C11\u6BCF\u9694\u4E24\u79D2\u6709\u8F93\u5165\u5C31\u80FD\u591F\u4F7F\u7A0B\u5E8F\u4FDD\u6301\u5F00\u542F\u72B6\u6001\u3002</p><h2 id="\u5C06-system-out-\u8F6C\u6362\u6210-printwriter" tabindex="-1"><a class="header-anchor" href="#\u5C06-system-out-\u8F6C\u6362\u6210-printwriter" aria-hidden="true">#</a> \u5C06 System.out \u8F6C\u6362\u6210 PrintWriter</h2><p><code>System.out</code> \u662F\u4E00\u4E2A <code>PrintStream</code>\uFF0C\u800C <code>PrintStream</code> \u662F\u4E00\u4E2A<code>OutputStream</code>\u3002 <code>PrintWriter</code> \u6709\u4E00\u4E2A\u628A <code>OutputStream</code> \u4F5C\u4E3A\u53C2\u6570\u7684\u6784\u9020\u5668\u3002\u56E0\u6B64\uFF0C\u5982\u679C\u4F60\u9700\u8981\u7684\u8BDD\uFF0C\u53EF\u4EE5\u4F7F\u7528\u8FD9\u4E2A\u6784\u9020\u5668\u628A <code>System.out</code> \u8F6C\u6362\u6210 <code>PrintWriter</code> \u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// standardio/ChangeSystemOut.java</span>
<span class="token comment">// Turn System.out into a PrintWriter</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ChangeSystemOut</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">PrintWriter</span> out <span class="token operator">=</span>
                <span class="token keyword">new</span> <span class="token class-name">PrintWriter</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, world&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Hello, world
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8981\u4F7F\u7528 <code>PrintWriter</code> \u5E26\u6709\u4E24\u4E2A\u53C2\u6570\u7684\u6784\u9020\u5668\uFF0C\u5E76\u8BBE\u7F6E\u7B2C\u4E8C\u4E2A\u53C2\u6570\u4E3A <code>true</code>\uFF0C\u4ECE\u800C\u4F7F\u80FD\u81EA\u52A8\u5237\u65B0\u5230\u8F93\u51FA\u7F13\u51B2\u533A\u7684\u529F\u80FD\uFF1B\u5426\u5219\uFF0C\u53EF\u80FD\u65E0\u6CD5\u770B\u5230\u6253\u5370\u8F93\u51FA\u3002</p><h2 id="\u91CD\u5B9A\u5411\u6807\u51C6-i-o" tabindex="-1"><a class="header-anchor" href="#\u91CD\u5B9A\u5411\u6807\u51C6-i-o" aria-hidden="true">#</a> \u91CD\u5B9A\u5411\u6807\u51C6 I/O</h2><p>Java\u7684 <code>System</code> \u7C7B\u63D0\u4F9B\u4E86\u7B80\u5355\u7684 <code>static</code> \u65B9\u6CD5\u8C03\u7528\uFF0C\u4ECE\u800C\u80FD\u591F\u91CD\u5B9A\u5411\u6807\u51C6\u8F93\u5165\u6D41\u3001\u6807\u51C6\u8F93\u51FA\u6D41\u548C\u6807\u51C6\u9519\u8BEF\u6D41\uFF1A</p><ul><li>setIn\uFF08InputStream\uFF09</li><li>setOut\uFF08PrintStream\uFF09</li><li>setErr(PrintStream)</li></ul><p>\u5982\u679C\u6211\u4EEC\u7A81\u7136\u9700\u8981\u5728\u663E\u793A\u5668\u4E0A\u521B\u5EFA\u5927\u91CF\u7684\u8F93\u51FA\uFF0C\u800C\u8FD9\u4E9B\u8F93\u51FA\u6EDA\u52A8\u7684\u901F\u5EA6\u592A\u5FEB\u4EE5\u81F3\u4E8E\u65E0\u6CD5\u9605\u8BFB\u65F6\uFF0C\u91CD\u5B9A\u5411\u8F93\u51FA\u5C31\u663E\u5F97\u683C\u5916\u6709\u7528\uFF0C\u53EF\u628A\u8F93\u51FA\u5185\u5BB9\u91CD\u5B9A\u5411\u5230\u6587\u4EF6\u4E2D\u4F9B\u540E\u7EED\u67E5\u770B\u3002\u5BF9\u4E8E\u6211\u4EEC\u60F3\u91CD\u590D\u6D4B\u8BD5\u7279\u5B9A\u7684\u7528\u6237\u8F93\u5165\u5E8F\u5217\u7684\u547D\u4EE4\u884C\u7A0B\u5E8F\u6765\u8BF4\uFF0C\u91CD\u5B9A\u5411\u8F93\u5165\u5C31\u5F88\u6709\u4EF7\u503C\u3002\u4E0B\u4F8B\u7B80\u5355\u6F14\u793A\u4E86\u8FD9\u4E9B\u65B9\u6CD5\u7684\u4F7F\u7528\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// standardio/Redirecting.java</span>
<span class="token comment">// Demonstrates standard I/O redirection</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Redirecting</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">PrintStream</span> console <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">(</span>
                <span class="token class-name">BufferedInputStream</span> in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedInputStream</span><span class="token punctuation">(</span>
                        <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token string">&quot;Redirecting.java&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">PrintStream</span> out <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PrintStream</span><span class="token punctuation">(</span>
                        <span class="token keyword">new</span> <span class="token class-name">BufferedOutputStream</span><span class="token punctuation">(</span>
                                <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span><span class="token string">&quot;Redirecting.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">setIn</span><span class="token punctuation">(</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">setOut</span><span class="token punctuation">(</span>out<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">setErr</span><span class="token punctuation">(</span>out<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span>
                    <span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">lines</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">setOut</span><span class="token punctuation">(</span>console<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BE5\u7A0B\u5E8F\u5C06\u6587\u4EF6\u4E2D\u5185\u5BB9\u8F7D\u5165\u5230\u6807\u51C6\u8F93\u5165\uFF0C\u5E76\u628A\u6807\u51C6\u8F93\u51FA\u548C\u6807\u51C6\u9519\u8BEF\u91CD\u5B9A\u5411\u5230\u53E6\u4E00\u4E2A\u6587\u4EF6\u3002\u5B83\u5728\u7A0B\u5E8F\u7684\u5F00\u59CB\u4FDD\u5B58\u4E86\u6700\u521D\u5BF9 <code>System.out</code> \u5BF9\u8C61\u7684\u5F15\u7528\uFF0C\u5E76\u4E14\u5728\u7A0B\u5E8F\u7ED3\u675F\u65F6\u5C06\u7CFB\u7EDF\u8F93\u51FA\u6062\u590D\u5230\u4E86\u8BE5\u5BF9\u8C61\u4E0A\u3002</p><p>I/O\u91CD\u5B9A\u5411\u64CD\u4F5C\u7684\u662F\u5B57\u8282\u6D41\u800C\u4E0D\u662F\u5B57\u7B26\u6D41\uFF0C\u56E0\u6B64\u4F7F\u7528 <code>InputStream</code> \u548C <code>OutputStream</code>\uFF0C\u800C\u4E0D\u662F <code>Reader</code> \u548C <code>Writer</code>\u3002</p><h2 id="\u6267\u884C\u63A7\u5236" tabindex="-1"><a class="header-anchor" href="#\u6267\u884C\u63A7\u5236" aria-hidden="true">#</a> \u6267\u884C\u63A7\u5236</h2><p>\u4F60\u7ECF\u5E38\u9700\u8981\u5728Java\u5185\u90E8\u76F4\u63A5\u6267\u884C\u64CD\u4F5C\u7CFB\u7EDF\u7684\u7A0B\u5E8F\uFF0C\u5E76\u63A7\u5236\u8FD9\u4E9B\u7A0B\u5E8F\u7684\u8F93\u5165\u8F93\u51FA\uFF0CJava\u7C7B\u5E93\u63D0\u4F9B\u4E86\u6267\u884C\u8FD9\u4E9B\u64CD\u4F5C\u7684\u7C7B\u3002</p><p>\u4E00\u9879\u5E38\u89C1\u7684\u4EFB\u52A1\u662F\u8FD0\u884C\u7A0B\u5E8F\u5E76\u5C06\u8F93\u51FA\u7ED3\u679C\u53D1\u9001\u5230\u63A7\u5236\u53F0\u3002\u672C\u8282\u5305\u542B\u4E86\u4E00\u4E2A\u53EF\u4EE5\u7B80\u5316\u6B64\u4EFB\u52A1\u7684\u5B9E\u7528\u5DE5\u5177\u3002</p><p>\u5728\u4F7F\u7528\u8FD9\u4E2A\u5DE5\u5177\u65F6\u53EF\u80FD\u4F1A\u4EA7\u751F\u4E24\u79CD\u7C7B\u578B\u7684\u9519\u8BEF\uFF1A\u5BFC\u81F4\u5F02\u5E38\u7684\u666E\u901A\u9519\u8BEF\u2014\u2014\u5BF9\u4E8E\u8FD9\u4E9B\u9519\u8BEF\u6211\u4EEC\u53EA\u9700\u8981\u91CD\u65B0\u629B\u51FA\u4E00\u4E2A <code>RuntimeException</code> \u5373\u53EF\uFF0C\u4EE5\u53CA\u8FDB\u7A0B\u81EA\u8EAB\u7684\u6267\u884C\u8FC7\u7A0B\u4E2D\u5BFC\u81F4\u7684\u9519\u8BEF\u2014\u2014\u6211\u4EEC\u9700\u8981\u7528\u5355\u72EC\u7684\u5F02\u5E38\u6765\u62A5\u544A\u8FD9\u4E9B\u9519\u8BEF\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// onjava/OSExecuteException.java</span>
<span class="token keyword">package</span> <span class="token namespace">onjava</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OSExecuteException</span> <span class="token keyword">extends</span> <span class="token class-name">RuntimeException</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">OSExecuteException</span><span class="token punctuation">(</span><span class="token class-name">String</span> why<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>why<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E3A\u4E86\u8FD0\u884C\u7A0B\u5E8F\uFF0C\u6211\u4EEC\u9700\u8981\u4F20\u9012\u7ED9 <code>OSExecute.command()</code> \u4E00\u4E2A <code>String command</code>\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5728\u63A7\u5236\u53F0\u952E\u5165\u540C\u6837\u7684\u6307\u4EE4\u8FD0\u884C\u7A0B\u5E8F\u3002\u8BE5\u547D\u4EE4\u4F20\u9012\u7ED9 <code>java.lang.ProcessBuilder</code> \u7684\u6784\u9020\u5668\uFF08\u9700\u8981\u5C06\u5176\u4F5C\u4E3A <code>String</code> \u5BF9\u8C61\u7684\u5E8F\u5217\uFF09\uFF0C\u7136\u540E\u542F\u52A8\u751F\u6210\u7684 <code>ProcessBuilder</code> \u5BF9\u8C61\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// onjava/OSExecute.java</span>
<span class="token comment">// Run an operating system command</span>
<span class="token comment">// and send the output to the console</span>
<span class="token keyword">package</span> <span class="token namespace">onjava</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OSExecute</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">command</span><span class="token punctuation">(</span><span class="token class-name">String</span> command<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">boolean</span> err <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">Process</span> process <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ProcessBuilder</span><span class="token punctuation">(</span>
                    command<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">(</span>
                    <span class="token class-name">BufferedReader</span> results <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span>
                            <span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span>
                                    process<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">BufferedReader</span> errors <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span>
                            <span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span>
                                    process<span class="token punctuation">.</span><span class="token function">getErrorStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">)</span> <span class="token punctuation">{</span>
                results<span class="token punctuation">.</span><span class="token function">lines</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                err <span class="token operator">=</span> errors<span class="token punctuation">.</span><span class="token function">lines</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">OSExecuteException</span><span class="token punctuation">(</span>
                    <span class="token string">&quot;Errors executing &quot;</span> <span class="token operator">+</span> command<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E3A\u4E86\u6355\u83B7\u5728\u7A0B\u5E8F\u6267\u884C\u65F6\u4EA7\u751F\u7684\u6807\u51C6\u8F93\u51FA\u6D41\uFF0C\u6211\u4EEC\u53EF\u4EE5\u8C03\u7528 <code>getInputStream()</code>\u3002\u8FD9\u662F\u56E0\u4E3A <code>InputStream</code> \u662F\u6211\u4EEC\u53EF\u4EE5\u4ECE\u4E2D\u8BFB\u53D6\u4FE1\u606F\u7684\u6D41\u3002</p><p>\u8FD9\u91CC\u8FD9\u4E9B\u884C\u53EA\u662F\u88AB\u6253\u5370\u4E86\u51FA\u6765\uFF0C\u4F46\u662F\u4F60\u4E5F\u53EF\u4EE5\u4ECE <code>command()</code> \u6355\u83B7\u548C\u8FD4\u56DE\u5B83\u4EEC\u3002</p><p>\u8BE5\u7A0B\u5E8F\u7684\u9519\u8BEF\u88AB\u53D1\u9001\u5230\u4E86\u6807\u51C6\u9519\u8BEF\u6D41\uFF0C\u53EF\u4EE5\u8C03\u7528 <code>getErrorStream()</code> \u6355\u83B7\u3002\u5982\u679C\u5B58\u5728\u4EFB\u4F55\u9519\u8BEF\uFF0C\u5B83\u4EEC\u90FD\u4F1A\u88AB\u6253\u5370\u5E76\u4E14\u629B\u51FA <code>OSExcuteException</code> \uFF0C\u4EE5\u4FBF\u8C03\u7528\u7A0B\u5E8F\u5904\u7406\u8FD9\u4E2A\u95EE\u9898\u3002</p><p>\u4E0B\u9762\u662F\u5C55\u793A\u5982\u4F55\u4F7F\u7528 <code>OSExecute</code> \u7684\u793A\u4F8B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// standardio/OSExecuteDemo.java</span>
<span class="token comment">// Demonstrates standard I/O redirection</span>
<span class="token comment">// {javap -cp build/classes/main OSExecuteDemo}</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">onjava<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OSExecuteDemo</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u4F7F\u7528 <code>javap</code> \u53CD\u7F16\u8BD1\u5668\uFF08\u968FJDK\u53D1\u5E03\uFF09\u6765\u53CD\u7F16\u8BD1\u7A0B\u5E8F\uFF0C\u7F16\u8BD1\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Compiled from &quot;OSExecuteDemo.java&quot;
public class OSExecuteDemo {
  public OSExecuteDemo();
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div style="page-break-after:always;"></div>`,37),c=[p];function o(l,i){return s(),a("div",null,c)}var d=n(t,[["render",o],["__file","Appendix-Standard-IO.html.vue"]]);export{d as default};
