import{_ as n,o as s,c as a,e as t}from"./app.205a3d76.js";const p={},e=t(`<p>[TOC]</p><h1 id="\u9644\u5F55-\u7406\u89E3equals\u548Chashcode\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u9644\u5F55-\u7406\u89E3equals\u548Chashcode\u65B9\u6CD5" aria-hidden="true">#</a> \u9644\u5F55:\u7406\u89E3equals\u548ChashCode\u65B9\u6CD5</h1><p>\u5047\u8BBE\u6709\u4E00\u4E2A\u5BB9\u5668\u4F7F\u7528hash\u51FD\u6570\uFF0C\u5F53\u4F60\u521B\u5EFA\u4E00\u4E2A\u653E\u5230\u8FD9\u4E2A\u5BB9\u5668\u65F6\uFF0C\u4F60\u5FC5\u987B\u5B9A\u4E49 <strong>hashCode()</strong> \u51FD\u6570\u548C <strong>equals()</strong> \u51FD\u6570\u3002\u8FD9\u4E24\u4E2A\u51FD\u6570\u4E00\u8D77\u88AB\u7528\u4E8Ehash\u5BB9\u5668\u4E2D\u7684\u67E5\u8BE2\u64CD\u4F5C\u3002</p><h2 id="equals\u89C4\u8303" tabindex="-1"><a class="header-anchor" href="#equals\u89C4\u8303" aria-hidden="true">#</a> equals\u89C4\u8303</h2><p>\u5F53\u4F60\u521B\u5EFA\u4E00\u4E2A\u7C7B\u7684\u65F6\u5019\uFF0C\u5B83\u81EA\u52A8\u7EE7\u627F\u81EA <strong>Objcet</strong> \u7C7B\u3002\u5982\u679C\u4F60\u4E0D\u8986\u5199 <strong>equals()</strong> \uFF0C\u4F60\u5C06\u4F1A\u83B7\u5F97 <strong>Objcet</strong> \u5BF9\u8C61\u7684 <strong>equals()</strong> \u51FD\u6570\u3002\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u8FD9\u4E2A\u51FD\u6570\u4F1A\u6BD4\u8F83\u5BF9\u8C61\u7684\u5730\u5740\u3002\u6240\u4EE5\u53EA\u6709\u4F60\u5728\u6BD4\u8F83\u540C\u4E00\u4E2A\u5BF9\u8C61\u7684\u65F6\u5019\uFF0C\u4F60\u624D\u4F1A\u83B7\u5F97<strong>true</strong>\u3002\u9ED8\u8BA4\u7684\u60C5\u51B5\u662F&quot;\u533A\u5206\u5EA6\u6700\u9AD8\u7684&quot;\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// equalshashcode/DefaultComparison.java</span>
<span class="token keyword">class</span> <span class="token class-name">DefaultComparison</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> k<span class="token punctuation">;</span>
    <span class="token class-name">DefaultComparison</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>i <span class="token operator">=</span> i<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>j <span class="token operator">=</span> j<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>k <span class="token operator">=</span> k<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">DefaultComparison</span> 
        a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultComparison</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultComparison</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a <span class="token operator">==</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a <span class="token operator">==</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> 
<span class="token punctuation">}</span> 
<span class="token comment">/*
Output:
true
false
*/</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u5E38\u4F60\u4F1A\u5E0C\u671B\u653E\u5BBD\u8FD9\u4E2A\u9650\u5236\u3002\u4E00\u822C\u6765\u8BF4\u5982\u679C\u4E24\u4E2A\u5BF9\u8C61\u6709\u76F8\u540C\u7684\u7C7B\u578B\u548C\u76F8\u540C\u7684\u5B57\u6BB5\uFF0C\u4F60\u4F1A\u8BA4\u4E3A\u8FD9\u4E24\u4E2A\u5BF9\u8C61\u76F8\u7B49\uFF0C\u4F46\u4E5F\u4F1A\u6709\u4E00\u4E9B\u4F60\u4E0D\u60F3\u52A0\u5165 <strong>equals()</strong> \u51FD\u6570\u4E2D\u6765\u6BD4\u8F83\u7684\u5B57\u6BB5\u3002\u8FD9\u662F\u7C7B\u578B\u8BBE\u8BA1\u7684\u4E00\u90E8\u5206\u3002</p><p>\u4E00\u4E2A\u5408\u9002\u7684 **equals()**\u51FD\u6570\u5FC5\u987B\u6EE1\u8DB3\u4EE5\u4E0B\u4E94\u70B9\u6761\u4EF6\uFF1A</p><ol><li>\u53CD\u8EAB\u6027\uFF1A\u5BF9\u4E8E\u4EFB\u4F55 <strong>x</strong>\uFF0C <strong>x.equals(x)</strong> \u5E94\u8BE5\u8FD4\u56DE <strong>true</strong>\u3002</li><li>\u5BF9\u79F0\u6027\uFF1A\u5BF9\u4E8E\u4EFB\u4F55 <strong>x</strong> \u548C <strong>y</strong>\uFF0C <strong>x.equals(y)</strong> \u5E94\u8BE5\u8FD4\u56DE <strong>true</strong>\u5F53\u4E14\u4EC5\u5F53 <strong>y.equals(x)</strong> \u8FD4\u56DE <strong>true</strong> \u3002</li><li>\u4F20\u9012\u6027\uFF1A\u5BF9\u4E8E\u4EFB\u4F55<strong>x</strong>,<strong>y</strong>,\u8FD8\u6709<strong>z</strong>\uFF0C\u5982\u679C <strong>x.equals(y)</strong> \u8FD4\u56DE <strong>true</strong> \u5E76\u4E14 <strong>y.equals(z)</strong> \u8FD4\u56DE <strong>true</strong>\uFF0C\u90A3\u4E48 <strong>x.equals(z)</strong> \u5E94\u8BE5\u8FD4\u56DE <strong>true</strong>\u3002</li><li>\u4E00\u81F4\u6027\uFF1A\u5BF9\u4E8E\u4EFB\u4F55 <strong>x</strong>\u548C<strong>y</strong>\uFF0C\u5728\u5BF9\u8C61\u6CA1\u6709\u88AB\u6539\u53D8\u7684\u60C5\u51B5\u4E0B\uFF0C\u591A\u6B21\u8C03\u7528 <strong>x.equals(y)</strong> \u5E94\u8BE5\u603B\u662F\u8FD4\u56DE <strong>true</strong> \u6216\u8005<strong>false</strong>\u3002</li><li>\u5BF9\u4E8E\u4EFB\u4F55\u975E<strong>null</strong>\u7684<strong>x</strong>\uFF0C<strong>x.equals(null)<strong>\u5E94\u8BE5\u8FD4\u56DE</strong>false</strong>\u3002</li></ol><p>\u4E0B\u9762\u662F\u6EE1\u8DB3\u8FD9\u4E9B\u6761\u4EF6\u7684\u6D4B\u8BD5\uFF0C\u5E76\u4E14\u5224\u65AD\u5BF9\u8C61\u662F\u5426\u548C\u81EA\u5DF1\u76F8\u7B49\uFF08\u6211\u4EEC\u8FD9\u91CC\u79F0\u547C\u5176\u4E3A<strong>\u53F3\u503C</strong>\uFF09\uFF1A</p><ol><li>\u5982\u679C<strong>\u53F3\u503C</strong>\u662F<strong>null</strong>\uFF0C\u90A3\u4E48\u4E0D\u76F8\u7B49\u3002</li><li>\u5982\u679C<strong>\u53F3\u503C</strong>\u662F<strong>this</strong>\uFF0C\u90A3\u4E48\u4E24\u4E2A\u5BF9\u8C61\u76F8\u7B49\u3002</li><li>\u5982\u679C<strong>\u53F3\u503C</strong>\u4E0D\u662F\u540C\u4E00\u4E2A\u7C7B\u578B\u6216\u8005\u5B50\u7C7B\uFF0C\u90A3\u4E48\u4E24\u4E2A\u5BF9\u8C61\u4E0D\u76F8\u7B49\u3002</li><li>\u5982\u679C\u6240\u6709\u4E0A\u9762\u7684\u68C0\u67E5\u901A\u8FC7\u4E86\uFF0C\u90A3\u4E48\u4F60\u5FC5\u987B\u51B3\u5B9A <strong>\u53F3\u503C</strong> \u4E2D\u7684\u54EA\u4E9B\u5B57\u6BB5\u662F\u91CD\u8981\u7684\uFF0C\u7136\u540E\u6BD4\u8F83\u8FD9\u4E9B\u5B57\u6BB5\u3002 Java 7 \u5F15\u5165\u4E86 <strong>Objects</strong> \u7C7B\u578B\u6765\u5E2E\u52A9\u8FD9\u4E2A\u6D41\u7A0B\uFF0C\u8FD9\u6837\u6211\u4EEC\u80FD\u591F\u5199\u51FA\u66F4\u597D\u7684 <strong>equals()</strong> \u51FD\u6570\u3002</li></ol><p>\u4E0B\u9762\u7684\u4F8B\u5B50\u6BD4\u8F83\u4E86\u4E0D\u540C\u7C7B\u578B\u7684 <strong>Equality</strong>\u7C7B\u3002\u4E3A\u4E86\u907F\u514D\u91CD\u590D\u7684\u4EE3\u7801\uFF0C\u6211\u4EEC\u4F7F\u7528<em>\u5DE5\u5382\u51FD\u6570\u8BBE\u8BA1\u6A21</em>\u5F0F\u6765\u5B9E\u73B0\u6837\u4F8B\u3002 <strong>EqualityFactory</strong>\u63A5\u53E3\u63D0\u4F9B<strong>make()<strong>\u51FD\u6570\u6765\u751F\u6210\u4E00\u4E2A</strong>Equaity</strong>\u5BF9\u8C61\uFF0C\u8FD9\u6837\u4E0D\u540C\u7684<strong>EqualityFactory</strong>\u80FD\u591F\u751F\u6210<strong>Equality</strong>\u4E0D\u540C\u7684\u5B50\u7C7B\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// equalshashcode/EqualityFactory.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">interface</span> <span class="token class-name">EqualityFactory</span> <span class="token punctuation">{</span>
    <span class="token class-name">Equality</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token class-name">String</span> s<span class="token punctuation">,</span> <span class="token keyword">double</span> d<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u73B0\u5728\u6211\u4EEC\u6765\u5B9A\u4E49 <strong>Equality</strong>\uFF0C\u5B83\u5305\u542B\u4E09\u4E2A\u5B57\u6BB5\uFF08\u6240\u6709\u7684\u5B57\u6BB5\u6211\u4EEC\u8BA4\u4E3A\u5728\u6BD4\u8F83\u4E2D\u90FD\u5F88\u91CD\u8981\uFF09\u548C\u4E00\u4E2A <strong>equals()</strong> \u51FD\u6570\u7528\u6765\u6EE1\u8DB3\u4E0A\u8FF0\u7684\u56DB\u79CD\u68C0\u67E5\u3002\u6784\u9020\u51FD\u6570\u5C55\u793A\u4E86\u5B83\u7684\u7C7B\u540D\u6765\u4FDD\u8BC1\u6211\u4EEC\u5728\u6267\u884C\u6211\u4EEC\u60F3\u8981\u7684\u6D4B\u8BD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// equalshashcode/Equality.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Equality</span> <span class="token punctuation">{</span>
    <span class="token keyword">protected</span> <span class="token keyword">int</span> i<span class="token punctuation">;</span>
    <span class="token keyword">protected</span> <span class="token class-name">String</span> s<span class="token punctuation">;</span>
    <span class="token keyword">protected</span> <span class="token keyword">double</span> d<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">Equality</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token class-name">String</span> s<span class="token punctuation">,</span> <span class="token keyword">double</span> d<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>i <span class="token operator">=</span> i<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>s <span class="token operator">=</span> s<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>d <span class="token operator">=</span> d<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;made &#39;Equality&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> 
    
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Object</span> rval<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>rval <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>rval <span class="token operator">==</span> <span class="token keyword">this</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>rval <span class="token keyword">instanceof</span> <span class="token class-name">Equality</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token class-name">Equality</span> other <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Equality</span><span class="token punctuation">)</span>rval<span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> other<span class="token punctuation">.</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> other<span class="token punctuation">.</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>d<span class="token punctuation">,</span> other<span class="token punctuation">.</span>d<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> 
    
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token class-name">String</span> descr<span class="token punctuation">,</span> <span class="token class-name">String</span> expected<span class="token punctuation">,</span> <span class="token class-name">Object</span> rval<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;-- Testing %s --%n&quot;</span> <span class="token operator">+</span> <span class="token string">&quot;%s instanceof Equality: %s%n&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;Expected %s, got %s%n&quot;</span><span class="token punctuation">,</span>
        descr<span class="token punctuation">,</span> descr<span class="token punctuation">,</span> rval <span class="token keyword">instanceof</span> <span class="token class-name">Equality</span><span class="token punctuation">,</span>
        expected<span class="token punctuation">,</span> <span class="token function">equals</span><span class="token punctuation">(</span>rval<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> 
    
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">testAll</span><span class="token punctuation">(</span><span class="token class-name">EqualityFactory</span> eqf<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Equality</span>
        e <span class="token operator">=</span> eqf<span class="token punctuation">.</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;Monty&quot;</span><span class="token punctuation">,</span> <span class="token number">3.14</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        eq <span class="token operator">=</span> eqf<span class="token punctuation">.</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;Monty&quot;</span><span class="token punctuation">,</span> <span class="token number">3.14</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        neq <span class="token operator">=</span> eqf<span class="token punctuation">.</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token number">99</span><span class="token punctuation">,</span> <span class="token string">&quot;Bob&quot;</span><span class="token punctuation">,</span> <span class="token number">1.618</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        e<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;null&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;false&quot;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        e<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;same object&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        e<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;different type&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;false&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token number">99</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>e<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;same values&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">,</span> eq<span class="token punctuation">)</span><span class="token punctuation">;</span>
        e<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;different values&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;false&quot;</span><span class="token punctuation">,</span> neq<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> 
    
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">testAll</span><span class="token punctuation">(</span> <span class="token punctuation">(</span>i<span class="token punctuation">,</span> s<span class="token punctuation">,</span> d<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Equality</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> s<span class="token punctuation">,</span> d<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> 
    
<span class="token punctuation">}</span> 
<span class="token comment">/*
Output:
made &#39;Equality&#39;
made &#39;Equality&#39;
made &#39;Equality&#39;
-- Testing null --
null instanceof Equality: false
Expected false, got false
-- Testing same object --
same object instanceof Equality: true
Expected true, got true
-- Testing different type --
different type instanceof Equality: false
Expected false, got false-- Testing same values --
same values instanceof Equality: true
Expected true, got true
-- Testing different values --
different values instanceof Equality: true
Expected false, got false
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>testAll()</strong> \u6267\u884C\u4E86\u6211\u4EEC\u671F\u671B\u7684\u6240\u6709\u4E0D\u540C\u7C7B\u578B\u5BF9\u8C61\u7684\u6BD4\u8F83\u3002\u5B83\u4F7F\u7528\u5DE5\u5382\u521B\u5EFA\u4E86<strong>Equality</strong>\u5BF9\u8C61\u3002</p><p>\u5728 <strong>main()</strong> \u91CC\uFF0C\u8BF7\u6CE8\u610F\u5BF9 <strong>testAll()</strong> \u7684\u8C03\u7528\u5F88\u7B80\u5355\u3002\u56E0\u4E3A<strong>EqualityFactory</strong>\u6709\u7740\u5355\u4E00\u7684\u51FD\u6570\uFF0C\u5B83\u80FD\u591F\u548Clambda\u8868\u8FBE\u5F0F\u4E00\u8D77\u4F7F\u7528\u6765\u8868\u793A <strong>make()</strong> \u51FD\u6570\u3002</p><p>\u4E0A\u8FF0\u7684 <strong>equals()</strong> \u51FD\u6570\u975E\u5E38\u7E41\u7410\uFF0C\u5E76\u4E14\u6211\u4EEC\u80FD\u591F\u5C06\u5176\u7B80\u5316\u6210\u89C4\u8303\u7684\u5F62\u5F0F\uFF0C\u8BF7\u6CE8\u610F\uFF1A</p><ol><li><strong>instanceof</strong>\u68C0\u67E5\u51CF\u5C11\u4E86<strong>null</strong>\u68C0\u67E5\u7684\u9700\u8981\u3002</li><li>\u548C<strong>this</strong>\u7684\u6BD4\u8F83\u662F\u591A\u4F59\u7684\u3002\u4E00\u4E2A\u6B63\u786E\u4E66\u5199\u7684 <strong>equals()</strong> \u51FD\u6570\u80FD\u6B63\u786E\u5730\u548C\u81EA\u5DF1\u6BD4\u8F83\u3002</li></ol><p>\u56E0\u4E3A <strong>&amp;&amp;</strong> \u662F\u4E00\u4E2A\u77ED\u8DEF\u6BD4\u8F83\uFF0C\u5B83\u4F1A\u5728\u7B2C\u4E00\u6B21\u9047\u5230\u5931\u8D25\u7684\u65F6\u5019\u9000\u51FA\u5E76\u8FD4\u56DE<strong>false</strong>\u3002\u6240\u4EE5\uFF0C\u901A\u8FC7\u4F7F\u7528 <strong>&amp;&amp;</strong> \u5C06\u68C0\u67E5\u94FE\u63A5\u8D77\u6765\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5199\u51FA\u66F4\u7CBE\u7B80\u7684 <strong>equals()</strong> \u51FD\u6570\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// equalshashcode/SuccinctEquality.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SuccinctEquality</span> <span class="token keyword">extends</span> <span class="token class-name">Equality</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">SuccinctEquality</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token class-name">String</span> s<span class="token punctuation">,</span> <span class="token keyword">double</span> d<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> s<span class="token punctuation">,</span> d<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;made &#39;SuccinctEquality&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> 
    
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Object</span> rval<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> rval <span class="token keyword">instanceof</span> <span class="token class-name">SuccinctEquality</span> <span class="token operator">&amp;&amp;</span>
        <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">SuccinctEquality</span><span class="token punctuation">)</span>rval<span class="token punctuation">)</span><span class="token punctuation">.</span>i<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
        <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">SuccinctEquality</span><span class="token punctuation">)</span>rval<span class="token punctuation">)</span><span class="token punctuation">.</span>s<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
        <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>d<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">SuccinctEquality</span><span class="token punctuation">)</span>rval<span class="token punctuation">)</span><span class="token punctuation">.</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> 
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Equality</span><span class="token punctuation">.</span><span class="token function">testAll</span><span class="token punctuation">(</span> <span class="token punctuation">(</span>i<span class="token punctuation">,</span> s<span class="token punctuation">,</span> d<span class="token punctuation">)</span> <span class="token operator">-&gt;</span>
        <span class="token keyword">new</span> <span class="token class-name">SuccinctEquality</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> s<span class="token punctuation">,</span> d<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> 
    
<span class="token punctuation">}</span>
<span class="token comment">/* Output:
made &#39;Equality&#39;
made &#39;SuccinctEquality&#39;
made &#39;Equality&#39;
made &#39;SuccinctEquality&#39;
made &#39;Equality&#39;
made &#39;SuccinctEquality&#39;
-- Testing null --
null instanceof Equality: false
Expected false, got false
-- Testing same object --
same object instanceof Equality: true
Expected true, got true
-- Testing different type --
different type instanceof Equality: false
Expected false, got false
-- Testing same values --
same values instanceof Equality: true
Expected true, got true
-- Testing different values --different values instanceof Equality: true
Expected false, got false
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u4E8E\u6BCF\u4E2A <strong>SuccinctEquality</strong>\uFF0C\u57FA\u7C7B\u6784\u9020\u51FD\u6570\u5728\u6D3E\u751F\u7C7B\u6784\u9020\u51FD\u6570\u524D\u88AB\u8C03\u7528\uFF0C\u8F93\u51FA\u663E\u793A\u6211\u4EEC\u4F9D\u7136\u83B7\u5F97\u4E86\u6B63\u786E\u7684\u7ED3\u679C\uFF0C\u4F60\u53EF\u4EE5\u53D1\u73B0\u77ED\u8DEF\u8FD4\u56DE\u5DF2\u7ECF\u53D1\u751F\u4E86\uFF0C\u4E0D\u7136\u7684\u8BDD\uFF0C<strong>null</strong>\u6D4B\u8BD5\u548C\u201C\u4E0D\u540C\u7C7B\u578B\u201D\u7684\u6D4B\u8BD5\u4F1A\u5728 <strong>equals()</strong> \u51FD\u6570\u4E0B\u9762\u7684\u6BD4\u8F83\u4E2D\u5F3A\u5236\u8F6C\u5316\u7684\u65F6\u5019\u629B\u51FA\u5F02\u5E38\u3002 <strong>Objects.equals()</strong> \u4F1A\u5728\u4F60\u7EC4\u5408\u5176\u4ED6\u7C7B\u578B\u7684\u65F6\u5019\u53D1\u6325\u5F88\u5927\u7684\u4F5C\u7528\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// equalshashcode/ComposedEquality.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">Part</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> ss<span class="token punctuation">;</span>
    <span class="token keyword">double</span> dd<span class="token punctuation">;</span>
    
    <span class="token class-name">Part</span><span class="token punctuation">(</span><span class="token class-name">String</span> ss<span class="token punctuation">,</span> <span class="token keyword">double</span> dd<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>ss <span class="token operator">=</span> ss<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>dd <span class="token operator">=</span> dd<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Object</span> rval<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> rval <span class="token keyword">instanceof</span> <span class="token class-name">Part</span> <span class="token operator">&amp;&amp;</span>
        <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>ss<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Part</span><span class="token punctuation">)</span>rval<span class="token punctuation">)</span><span class="token punctuation">.</span>ss<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
        <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>dd<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Part</span><span class="token punctuation">)</span>rval<span class="token punctuation">)</span><span class="token punctuation">.</span>dd<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> 
    
<span class="token punctuation">}</span> 
    
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ComposedEquality</span> <span class="token keyword">extends</span> <span class="token class-name">SuccinctEquality</span> <span class="token punctuation">{</span>
    <span class="token class-name">Part</span> part<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">ComposedEquality</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token class-name">String</span> s<span class="token punctuation">,</span> <span class="token keyword">double</span> d<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> s<span class="token punctuation">,</span> d<span class="token punctuation">)</span><span class="token punctuation">;</span>
        part <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Part</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> d<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;made &#39;ComposedEquality&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Object</span> rval<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> rval <span class="token keyword">instanceof</span> <span class="token class-name">ComposedEquality</span> <span class="token operator">&amp;&amp;</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>rval<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
        <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>part<span class="token punctuation">,</span>
        <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ComposedEquality</span><span class="token punctuation">)</span>rval<span class="token punctuation">)</span><span class="token punctuation">.</span>part<span class="token punctuation">)</span><span class="token punctuation">;</span>
        
    <span class="token punctuation">}</span> 
        
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Equality</span><span class="token punctuation">.</span><span class="token function">testAll</span><span class="token punctuation">(</span> <span class="token punctuation">(</span>i<span class="token punctuation">,</span> s<span class="token punctuation">,</span> d<span class="token punctuation">)</span> <span class="token operator">-&gt;</span>
        <span class="token keyword">new</span> <span class="token class-name">ComposedEquality</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> s<span class="token punctuation">,</span> d<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">/*
Output:
made &#39;Equality&#39;
made &#39;SuccinctEquality&#39;
made &#39;ComposedEquality&#39;
made &#39;Equality&#39;
made &#39;SuccinctEquality&#39;
made &#39;ComposedEquality&#39;
made &#39;Equality&#39;
made &#39;SuccinctEquality&#39;
made &#39;ComposedEquality&#39;
-- Testing null --null instanceof Equality: false
Expected false, got false
-- Testing same object --
same object instanceof Equality: true
Expected true, got true
-- Testing different type --
different type instanceof Equality: false
Expected false, got false
-- Testing same values --
same values instanceof Equality: true
Expected true, got true
-- Testing different values --
different values instanceof Equality: true
Expected false, got false
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610Fsuper.equals()\u8FD9\u4E2A\u8C03\u7528\uFF0C\u6CA1\u6709\u5FC5\u8981\u91CD\u65B0\u53D1\u660E\u5B83\uFF08\u56E0\u4E3A\u4F60\u4E0D\u603B\u662F\u6709\u6743\u9650\u8BBF\u95EE\u57FA\u7C7B\u6240\u6709\u7684\u5FC5\u8981\u5B57\u6BB5\uFF09</p><h3 id="\u4E0D\u540C\u5B50\u7C7B\u7684\u76F8\u7B49\u6027" tabindex="-1"><a class="header-anchor" href="#\u4E0D\u540C\u5B50\u7C7B\u7684\u76F8\u7B49\u6027" aria-hidden="true">#</a> \u4E0D\u540C\u5B50\u7C7B\u7684\u76F8\u7B49\u6027</h3><p>\u7EE7\u627F\u610F\u5473\u7740\u4E24\u4E2A\u4E0D\u540C\u5B50\u7C7B\u7684\u5BF9\u8C61\u5F53\u5176\u5411\u4E0A\u8F6C\u578B\u7684\u65F6\u5019\u53EF\u4EE5\u662F\u76F8\u7B49\u7684\u3002\u5047\u8BBE\u4F60\u6709\u4E00\u4E2AAnimal\u5BF9\u8C61\u7684\u96C6\u5408\u3002\u8FD9\u4E2A\u96C6\u5408\u5929\u7136\u63A5\u53D7<strong>Animal</strong>\u7684\u5B50\u7C7B\u3002\u5728\u8FD9\u4E2A\u4F8B\u5B50\u4E2D\u662F<strong>Dog</strong>\u548C<strong>Pig</strong>\u3002\u6BCF\u4E2A<strong>Animal</strong>\u6709\u4E00\u4E2A<strong>name</strong>\u548C<strong>size</strong>\uFF0C\u8FD8\u6709\u552F\u4E00\u7684\u5185\u90E8<strong>id</strong>\u6570\u5B57\u3002</p><p>\u6211\u4EEC\u901A\u8FC7<strong>Objects</strong>\u7C7B\uFF0C\u4EE5\u89C4\u8303\u7684\u5F62\u5F0F\u5B9A\u4E49 <strong>equals()<strong>\u51FD\u6570\u548C</strong>hashCode()</strong>\u3002\u4F46\u662F\u6211\u4EEC\u53EA\u80FD\u5728\u57FA\u7C7B<strong>Animal</strong>\u4E2D\u5B9A\u4E49\u4ED6\u4EEC\u3002\u5E76\u4E14\u6211\u4EEC\u5728\u8FD9\u4E24\u4E2A\u51FD\u6570\u4E2D\u6CA1\u6709\u5305\u542B<strong>id</strong>\u5B57\u6BB5\u3002\u4ECE<strong>equals()<strong>\u51FD\u6570\u7684\u89D2\u5EA6\u770B\u5F85\uFF0C\u8FD9\u610F\u5473\u7740\u6211\u4EEC\u53EA\u5173\u5FC3\u5B83\u662F\u5426\u662F</strong>Animal</strong>\uFF0C\u800C\u4E0D\u5173\u5FC3\u662F\u5426\u662F<strong>Animal</strong>\u7684\u67D0\u4E2A\u5B50\u7C7B\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// equalshashcode/SubtypeEquality.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">enum</span> <span class="token class-name">Size</span> <span class="token punctuation">{</span> SMALL<span class="token punctuation">,</span> MEDIUM<span class="token punctuation">,</span> LARGE <span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> counter <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> id <span class="token operator">=</span> counter<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Size</span> size<span class="token punctuation">;</span>
    <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">Size</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">=</span> size<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> 
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Object</span> rval<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> rval <span class="token keyword">instanceof</span> <span class="token class-name">Animal</span> <span class="token operator">&amp;&amp;</span>
        <span class="token comment">// Objects.equals(id, ((Animal)rval).id) &amp;&amp; // [1]</span>
        <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Animal</span><span class="token punctuation">)</span>rval<span class="token punctuation">)</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
        <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>size<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Animal</span><span class="token punctuation">)</span>rval<span class="token punctuation">)</span><span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> 
    
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">hash</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// return Objects.hash(name, size, id); // [2]</span>
    <span class="token punctuation">}</span> 
    
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%s[%d]: %s %s %x&quot;</span><span class="token punctuation">,</span>
        <span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> id<span class="token punctuation">,</span>
        name<span class="token punctuation">,</span> size<span class="token punctuation">,</span> <span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> 
<span class="token punctuation">}</span> 
    
<span class="token keyword">class</span> <span class="token class-name">Dog</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
    <span class="token class-name">Dog</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">Size</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> 
<span class="token punctuation">}</span> 

<span class="token keyword">class</span> <span class="token class-name">Pig</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
    <span class="token class-name">Pig</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">Size</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> 
<span class="token punctuation">}</span> 
    
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SubtypeEquality</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Animal</span><span class="token punctuation">&gt;</span></span> pets <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        pets<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Dog</span><span class="token punctuation">(</span><span class="token string">&quot;Ralph&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Size</span><span class="token punctuation">.</span>MEDIUM<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        pets<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Pig</span><span class="token punctuation">(</span><span class="token string">&quot;Ralph&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Size</span><span class="token punctuation">.</span>MEDIUM<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        pets<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> 
<span class="token punctuation">}</span> 
<span class="token comment">/*
Output:
Dog[0]: Ralph MEDIUM a752aeee
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u6211\u4EEC\u53EA\u8003\u8651\u7C7B\u578B\u7684\u8BDD\uFF0C\u67D0\u4E9B\u60C5\u51B5\u4E0B\u5B83\u7684\u786E\u8BF4\u5F97\u901A\u2014\u2014\u53EA\u4ECE\u57FA\u7C7B\u7684\u89D2\u5EA6\u770B\u5F85\u95EE\u9898\uFF0C\u8FD9\u662F\u674E\u6C0F\u66FF\u6362\u539F\u5219\u7684\u57FA\u77F3\u3002\u8FD9\u4E2A\u4EE3\u7801\u5B8C\u7F8E\u7B26\u5408\u66FF\u6362\u7406\u8BBA\u56E0\u4E3A\u6D3E\u751F\u7C7B\u6CA1\u6709\u6DFB\u52A0\u4EFB\u4F55\u989D\u5916\u4E0D\u518D\u57FA\u7C7B\u4E2D\u7684\u989D\u5916\u51FD\u6570\u3002\u6D3E\u751F\u7C7B\u53EA\u662F\u5728\u8868\u73B0\u4E0A\u4E0D\u540C\uFF0C\u800C\u4E0D\u662F\u5728\u63A5\u53E3\u4E0A\u3002\uFF08\u5F53\u7136\u8FD9\u4E0D\u662F\u5E38\u6001\uFF09</p><p>\u4F46\u662F\u5F53\u6211\u4EEC\u63D0\u4F9B\u4E86\u4E24\u4E2A\u6709\u7740\u76F8\u540C\u6570\u636E\u7684\u4E0D\u540C\u7684\u5BF9\u8C61\u7C7B\u578B\uFF0C\u7136\u540E\u5C06\u4ED6\u4EEC\u653E\u7F6E\u5728 <code>HashSet&lt;Animal&gt;</code> \u4E2D\u3002\u53EA\u6709\u4ED6\u4EEC\u4E2D\u7684\u4E00\u4E2A\u80FD\u5B58\u6D3B\u3002\u8FD9\u5F3A\u8C03\u4E86 <strong>equals()</strong> \u4E0D\u662F\u5B8C\u7F8E\u7684\u6570\u5B66\u7406\u8BBA\uFF0C\u800C\u53EA\u662F\u673A\u68B0\u822C\u7684\u7406\u8BBA\u3002 <strong>hashCode()</strong> \u548C <strong>equals()</strong> \u5FC5\u987B\u80FD\u591F\u5141\u8BB8\u7C7B\u578B\u5728hash\u6570\u636E\u7ED3\u6784\u4E2D\u6B63\u5E38\u5DE5\u4F5C\u3002\u4F8B\u5B50\u4E2D <strong>Dog</strong> \u548C <strong>Pig</strong> \u4F1A\u88AB\u6620\u5C04\u5230\u540C <strong>HashSet</strong> \u7684\u540C\u4E00\u4E2A\u6876\u4E2D\u3002\u8FD9\u4E2A\u65F6\u5019\uFF0C<strong>HashSet</strong> \u56DE\u9000\u5230 <strong>equals()</strong> \u6765\u533A\u5206\u5BF9\u8C61\uFF0C\u4F46\u662F <strong>equals()</strong> \u4E5F\u8BA4\u4E3A\u4E24\u4E2A\u5BF9\u8C61\u662F\u76F8\u540C\u7684\u3002<strong>HashSet</strong>\u56E0\u4E3A\u5DF2\u7ECF\u6709\u4E00\u4E2A\u76F8\u540C\u7684\u5BF9\u8C61\u4E86\uFF0C\u6240\u4EE5\u6CA1\u6709\u6DFB\u52A0 <strong>Pig</strong>\u3002 \u6211\u4EEC\u4F9D\u7136\u80FD\u591F\u901A\u8FC7\u4F7F\u5F97\u5176\u4ED6\u5B57\u6BB5\u5BF9\u8C61\u4E0D\u540C\u6765\u8BA9\u4F8B\u5B50\u80FD\u591F\u6B63\u5E38\u5DE5\u4F5C\u3002\u5728\u8FD9\u91CC\u6BCF\u4E2A <strong>Animal</strong> \u5DF2\u7ECF\u6709\u4E86\u4E00\u4E2A\u72EC\u4E00\u65E0\u4E8C\u7684 <strong>id</strong> \uFF0C\u6240\u4EE5\u4F60\u80FD\u591F\u53D6\u6D88 <strong>equals()</strong> \u51FD\u6570\u4E2D\u7684 <strong>[1]</strong> \u884C\u6CE8\u91CA\uFF0C\u6216\u8005\u53D6\u6D88 <strong>hashCode()</strong> \u51FD\u6570\u4E2D\u7684 <strong>[2]</strong> \u884C\u6CE8\u91CA\u3002\u6309\u7167\u89C4\u8303\uFF0C\u4F60\u5E94\u8BE5\u540C\u65F6\u5B8C\u6210\u8FD9\u4E24\u4E2A\u64CD\u4F5C\uFF0C\u5982\u6B64\u80FD\u591F\u5C06\u6240\u6709\u201C\u4E0D\u53D8\u7684\u201D\u5B57\u6BB5\u5305\u542B\u5728\u4E24\u4E2A\u64CD\u4F5C\u4E2D\uFF08\u201C\u4E0D\u53D8\u201D\u6240\u4EE5 <strong>equals()</strong> \u548C <strong>hashCode()</strong> \u5728\u54C8\u5E0C\u6570\u636E\u7ED3\u6784\u4E2D\u7684\u6392\u5E8F\u548C\u53D6\u503C\u65F6\uFF0C\u4E0D\u4F1A\u751F\u6210\u4E0D\u540C\u7684\u503C\u3002\u6211\u5C06\u201C\u4E0D\u53D8\u7684\u201D\u653E\u5728\u5F15\u53F7\u4E2D\u56E0\u4E3A\u4F60\u5FC5\u987B\u8BA1\u7B97\u51FA\u662F\u5426\u5DF2\u7ECF\u53D1\u751F\u53D8\u5316\uFF09\u3002</p><blockquote><p><strong>\u65C1\u6CE8</strong>\uFF1A \u5728<strong>hashCode()<strong>\u4E2D\uFF0C\u5982\u679C\u4F60\u53EA\u80FD\u591F\u4F7F\u7528\u4E00\u4E2A\u5B57\u6BB5\uFF0C\u4F7F\u7528</strong>Objcets.hashCode()</strong>\u3002\u5982\u679C\u4F60\u4F7F\u7528\u591A\u4E2A\u5B57\u6BB5\uFF0C\u90A3\u4E48\u4F7F\u7528 <strong>Objects.hash()</strong>\u3002</p></blockquote><p>\u6211\u4EEC\u4E5F\u53EF\u4EE5\u901A\u8FC7\u6807\u51C6\u65B9\u5F0F\uFF0C\u5C06 <strong>equals()</strong> \u5B9A\u4E49\u5728\u5B50\u7C7B\u4E2D\uFF08\u4E0D\u5305\u542B <strong>id</strong> \uFF09\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// equalshashcode/SubtypeEquality2.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">Dog2</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
    <span class="token class-name">Dog2</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">Size</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> 
    
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Object</span> rval<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> rval <span class="token keyword">instanceof</span> <span class="token class-name">Dog2</span> <span class="token operator">&amp;&amp;</span><span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>rval<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> 
<span class="token punctuation">}</span> 

<span class="token keyword">class</span> <span class="token class-name">Pig2</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
    <span class="token class-name">Pig2</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">Size</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> 
    
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Object</span> rval<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> rval <span class="token keyword">instanceof</span> <span class="token class-name">Pig2</span> <span class="token operator">&amp;&amp;</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>rval<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> 
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SubtypeEquality2</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Animal</span><span class="token punctuation">&gt;</span></span> pets <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        pets<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Dog2</span><span class="token punctuation">(</span><span class="token string">&quot;Ralph&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Size</span><span class="token punctuation">.</span>MEDIUM<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        pets<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Pig2</span><span class="token punctuation">(</span><span class="token string">&quot;Ralph&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Size</span><span class="token punctuation">.</span>MEDIUM<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        pets<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span> 
<span class="token comment">/*
Output:
Dog2[0]: Ralph MEDIUM a752aeee
Pig2[1]: Ralph MEDIUM a752aeee
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F <strong>hashCode()</strong> \u662F\u72EC\u4E00\u65E0\u4E8C\u7684\uFF0C\u4F46\u662F\u56E0\u4E3A\u5BF9\u8C61\u4E0D\u518D <strong>equals()</strong> \uFF0C\u6240\u4EE5\u4E24\u4E2A\u51FD\u6570\u90FD\u51FA\u73B0\u5728<strong>HashSet</strong>\u4E2D\u3002\u53E6\u5916\uFF0C<strong>super.equals()</strong> \u610F\u5473\u7740\u6211\u4EEC\u4E0D\u9700\u8981\u8BBF\u95EE\u57FA\u7C7B\u7684<strong>private</strong>\u5B57\u6BB5\u3002</p><p>\u4E00\u79CD\u8BF4\u6CD5\u662FJava\u4ECE<strong>equals()</strong> \u548C<strong>hashCode()</strong> \u7684\u5B9A\u4E49\u4E2D\u5206\u79BB\u4E86\u53EF\u66FF\u4EE3\u6027\u3002\u6211\u4EEC\u4ECD\u7136\u80FD\u591F\u5C06<strong>Dog</strong>\u548C<strong>Pig</strong>\u653E\u7F6E\u5728 <strong>Set&lt;Animal&gt;</strong> \u4E2D\uFF0C\u65E0\u8BBA <strong>equals()</strong> \u548C <strong>hashCode()</strong> \u662F\u5982\u4F55\u5B9A\u4E49\u7684\uFF0C\u4F46\u662F\u5BF9\u8C61\u4E0D\u4F1A\u5728\u54C8\u5E0C\u6570\u636E\u7ED3\u6784\u4E2D\u6B63\u5E38\u5DE5\u4F5C\uFF0C\u9664\u975E\u8FD9\u4E9B\u51FD\u6570\u80FD\u591F\u88AB\u5408\u7406\u5B9A\u4E49\u3002\u4E0D\u5E78\u7684\u662F\uFF0C<strong>equals()</strong> \u4E0D\u603B\u662F\u548C <strong>hashCode()</strong> \u4E00\u8D77\u4F7F\u7528\uFF0C\u8FD9\u5728\u4F60\u5C1D\u8BD5\u4E3A\u4E86\u67D0\u4E2A\u7279\u6B8A\u7C7B\u578B\u907F\u514D\u5B9A\u4E49\u5B83\u7684\u65F6\u5019\u4F1A\u8BA9\u95EE\u9898\u590D\u6742\u5316\u3002\u5E76\u4E14\u8FD9\u4E5F\u662F\u4E3A\u4EC0\u4E48\u9075\u5FAA\u89C4\u8303\u662F\u6709\u4EF7\u503C\u7684\u3002\u7136\u800C\u8FD9\u4F1A\u53D8\u5F97\u66F4\u52A0\u590D\u6742\uFF0C\u56E0\u4E3A\u4F60\u4E0D\u603B\u662F\u9700\u8981\u5B9A\u4E49\u5176\u4E2D\u4E00\u4E2A\u51FD\u6570\u3002</p><h2 id="\u54C8\u5E0C\u548C\u54C8\u5E0C\u7801" tabindex="-1"><a class="header-anchor" href="#\u54C8\u5E0C\u548C\u54C8\u5E0C\u7801" aria-hidden="true">#</a> \u54C8\u5E0C\u548C\u54C8\u5E0C\u7801</h2><p>\u5728 <a href="">\u96C6\u5408</a> \u7AE0\u8282\u4E2D\uFF0C\u6211\u4EEC\u4F7F\u7528\u9884\u5148\u5B9A\u4E49\u7684\u7C7B\u4F5C\u4E3A HashMap \u7684\u952E\u3002\u8FD9\u4E9B\u793A\u4F8B\u4E4B\u6240\u4EE5\u6709\u7528\uFF0C\u662F\u56E0\u4E3A\u9884\u5B9A\u4E49\u7684\u7C7B\u5177\u6709\u6240\u6709\u5FC5\u9700\u7684\u8FDE\u7EBF\uFF0C\u4EE5\u4F7F\u5B83\u4EEC\u6B63\u786E\u5730\u5145\u5F53\u952E\u3002</p><p>\u5F53\u521B\u5EFA\u81EA\u5DF1\u7684\u7C7B\u4F5C\u4E3AHashMap\u7684\u952E\u65F6\uFF0C\u4F1A\u53D1\u751F\u4E00\u4E2A\u5E38\u89C1\u7684\u9677\u9631\uFF0C\u4ECE\u800C\u5FD8\u8BB0\u8FDB\u884C\u5FC5\u8981\u7684\u63A5\u7EBF\u3002\u4F8B\u5982\uFF0C\u8003\u8651\u4E00\u4E2A\u5C06Earthhog \u5BF9\u8C61\u4E0E Prediction \u5BF9\u8C61\u5339\u914D\u7684\u5929\u6C14\u9884\u62A5\u7CFB\u7EDF\u3002\u8FD9\u4F3C\u4E4E\u5F88\u7B80\u5355\uFF1A\u4F7F\u7528Groundhog\u4F5C\u4E3A\u952E\uFF0C\u4F7F\u7528Prediction\u4F5C\u4E3A\u503C\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// equalshashcode/Groundhog.java</span>
<span class="token comment">// Looks plausible, but doesn&#39;t work as a HashMap key</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Groundhog</span> <span class="token punctuation">{</span>
    <span class="token keyword">protected</span> <span class="token keyword">int</span> number<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">Groundhog</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span> number <span class="token operator">=</span> n<span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;Groundhog #&quot;</span> <span class="token operator">+</span> number<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// equalshashcode/Prediction.java</span>
<span class="token comment">// Predicting the weather</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Prediction</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Random</span> rand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token number">47</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> rand<span class="token punctuation">.</span><span class="token function">nextBoolean</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span>
                <span class="token string">&quot;Six more weeks of Winter!&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;Early Spring!&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// equalshashcode/SpringDetector.java</span>
<span class="token comment">// What will the weather be?</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>function<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SpringDetector</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span> <span class="token keyword">extends</span> <span class="token class-name">Groundhog</span><span class="token punctuation">&gt;</span></span>
    <span class="token keyword">void</span> <span class="token function">detectSpring</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> ghog <span class="token operator">=</span>
                    type<span class="token punctuation">.</span><span class="token function">getConstructor</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Groundhog</span><span class="token punctuation">,</span> <span class="token class-name">Prediction</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span>
                    <span class="token class-name">IntStream</span><span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
                            <span class="token punctuation">.</span><span class="token function">mapToObj</span><span class="token punctuation">(</span>i <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                                    <span class="token keyword">return</span> ghog<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
                                <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                                <span class="token punctuation">}</span>
                            <span class="token punctuation">}</span><span class="token punctuation">)</span>
                            <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toMap</span><span class="token punctuation">(</span>
                                    <span class="token class-name">Function</span><span class="token punctuation">.</span><span class="token function">identity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                    gh <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Prediction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            map<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token operator">-&gt;</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>k <span class="token operator">+</span> <span class="token string">&quot;: &quot;</span> <span class="token operator">+</span> v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Groundhog</span> gh <span class="token operator">=</span> ghog<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
                    <span class="token string">&quot;Looking up prediction for &quot;</span> <span class="token operator">+</span> gh<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>gh<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>gh<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Key not found: &quot;</span> <span class="token operator">+</span> gh<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">NoSuchMethodException</span> <span class="token operator">|</span>
                <span class="token class-name">IllegalAccessException</span> <span class="token operator">|</span>
                <span class="token class-name">InvocationTargetException</span> <span class="token operator">|</span>
                <span class="token class-name">InstantiationException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">detectSpring</span><span class="token punctuation">(</span><span class="token class-name">Groundhog</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">/* Output:
Groundhog #3: Six more weeks of Winter!
Groundhog #0: Early Spring!
Groundhog #8: Six more weeks of Winter!
Groundhog #6: Early Spring!
Groundhog #4: Early Spring!
Groundhog #2: Six more weeks of Winter!
Groundhog #1: Early Spring!
Groundhog #9: Early Spring!
Groundhog #5: Six more weeks of Winter!
Groundhog #7: Six more weeks of Winter!
Looking up prediction for Groundhog #3
Key not found: Groundhog #3
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6BCF\u4E2A Groundhog \u90FD\u88AB\u8D4B\u4E88\u4E86\u4E00\u4E2A\u5E38\u6570\uFF0C\u56E0\u6B64\u4F60\u53EF\u4EE5\u901A\u8FC7\u5982\u4E0B\u7684\u65B9\u5F0F\u5728 HashMap \u4E2D\u5BFB\u627E\u5BF9\u5E94\u7684 Prediction\u3002\u201C\u7ED9\u6211\u4E00\u4E2A\u548C Groundhog#3 \u76F8\u5173\u8054\u7684 Prediction\u201D\u3002\u800C Prediction \u901A\u8FC7\u4E00\u4E2A\u968F\u673A\u751F\u6210\u7684 boolean \u6765\u9009\u62E9\u5929\u6C14\u3002<code>detectSpring()</code> \u65B9\u6CD5\u901A\u8FC7\u53CD\u5C04\u6765\u5B9E\u4F8B\u5316 Groundhog \u7C7B\uFF0C\u6216\u8005\u5B83\u7684\u5B50\u7C7B\u3002\u7A0D\u540E\uFF0C\u5F53\u6211\u4EEC\u7EE7\u627F\u4E00\u79CD\u65B0\u578B\u7684\u201CGroundhog \u201D\u4EE5\u89E3\u51B3\u6B64\u5904\u6F14\u793A\u7684\u95EE\u9898\u65F6\uFF0C\u8FD9\u5C06\u6D3E\u4E0A\u7528\u573A\u3002</p><p>\u8FD9\u91CC\u7684 HashMap \u88AB Groundhog \u548C\u5176\u76F8\u5173\u8054\u7684 Prediction \u5145\u6EE1\u3002\u5E76\u4E14\u4E0A\u9762\u5C55\u793A\u4E86 HashMap \u91CC\u9762\u586B\u5145\u7684\u5185\u5BB9\u3002\u63A5\u4E0B\u6765\u6211\u4EEC\u4F7F\u7528\u586B\u5145\u4E86\u5E38\u6570 3 \u7684 Groundhog \u4F5C\u4E3A key \u7528\u4E8E\u5BFB\u627E\u5BF9\u5E94\u7684 Prediction \u3002\uFF08\u8FD9\u4E2A\u952E\u503C\u5BF9\u80AF\u5B9A\u5728 Map \u4E2D\uFF09\u3002</p><p>\u8FD9\u770B\u8D77\u6765\u5341\u5206\u7B80\u5355\uFF0C\u4F46\u662F\u8FD9\u6837\u505A\u5E76\u6CA1\u6709\u594F\u6548 \u2014\u2014 \u5B83\u65E0\u6CD5\u627E\u5230\u6570\u5B573\u8FD9\u4E2A\u952E\u3002\u95EE\u9898\u51FA\u5728Groundhog\u81EA\u52A8\u5730\u7EE7\u627F\u81EA\u57FA\u7C7BObject\uFF0C\u6240\u4EE5\u8FD9\u91CC\u4F7F\u7528Object\u7684hashCode0\u65B9\u6CD5\u751F\u6210\u6563\u5217\u7801\uFF0C\u800C\u5B83\u9ED8\u8BA4\u662F\u4F7F\u7528\u5BF9\u8C61\u7684\u5730\u5740\u8BA1\u7B97\u6563\u5217\u7801\u3002\u56E0\u6B64\uFF0C\u7531Groundhog(3)\u751F\u6210\u7684\u7B2C\u4E00\u4E2A\u5B9E\u4F8B\u7684\u6563\u5217\u7801\u4E0E\u7531Groundhog(3)\u751F\u6210\u7684\u7B2C\u4E8C\u4E2A\u5B9E\u4F8B\u7684\u6563\u5217\u7801\u662F\u4E0D\u540C\u7684\uFF0C\u800C\u6211\u4EEC\u6B63\u662F\u4F7F\u7528\u540E\u8005\u8FDB\u884C\u67E5\u627E\u7684\u3002</p><p>\u6211\u4EEC\u9700\u8981\u6070\u5F53\u7684\u91CD\u5199hashCode()\u65B9\u6CD5\u3002\u4F46\u662F\u5B83\u4ECD\u7136\u65E0\u6CD5\u6B63\u5E38\u8FD0\u884C\uFF0C\u9664\u975E\u4F60\u540C\u65F6\u91CD\u5199 equals()\u65B9\u6CD5\uFF0C\u5B83\u4E5F\u662FObject\u7684\u4E00\u90E8\u5206\u3002HashMap\u4F7F\u7528equals()\u5224\u65AD\u5F53\u524D\u7684\u952E\u662F\u5426\u4E0E\u8868\u4E2D\u5B58\u5728\u7684\u952E\u76F8\u540C\u3002</p><p>\u8FD9\u662F\u56E0\u4E3A\u9ED8\u8BA4\u7684Object.equals()\u53EA\u662F\u6BD4\u8F83\u5BF9\u8C61\u7684\u5730\u5740\uFF0C\u6240\u4EE5\u4E00\u4E2AGroundhog(3)\u5E76\u4E0D\u7B49\u4E8E\u53E6\u4E00\u4E2AGroundhog(3)\uFF0C\u56E0\u6B64\uFF0C\u5982\u679C\u8981\u4F7F\u7528\u81EA\u5DF1\u7684\u7C7B\u4F5C\u4E3AHashMap\u7684\u952E\uFF0C\u5FC5\u987B\u540C\u65F6\u91CD\u8F7DhashCode()\u548Cequals()\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// equalshashcode/Groundhog2.java</span>
<span class="token comment">// A class that&#39;s used as a key in a HashMap</span>
<span class="token comment">// must override hashCode() and equals()</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Groundhog2</span> <span class="token keyword">extends</span> <span class="token class-name">Groundhog</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">Groundhog2</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">super</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> number<span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> o <span class="token keyword">instanceof</span> <span class="token class-name">Groundhog2</span> <span class="token operator">&amp;&amp;</span>
                <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>
                        number<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Groundhog2</span><span class="token punctuation">)</span>o<span class="token punctuation">)</span><span class="token punctuation">.</span>number<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// equalshashcode/SpringDetector2.java</span>
<span class="token comment">// A working key</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SpringDetector2</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SpringDetector</span><span class="token punctuation">.</span><span class="token function">detectSpring</span><span class="token punctuation">(</span><span class="token class-name">Groundhog2</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">/* Output:
Groundhog #0: Six more weeks of Winter!
Groundhog #1: Early Spring!
Groundhog #2: Six more weeks of Winter!
Groundhog #3: Early Spring!
Groundhog #4: Early Spring!
Groundhog #5: Six more weeks of Winter!
Groundhog #6: Early Spring!
Groundhog #7: Early Spring!
Groundhog #8: Six more weeks of Winter!
Groundhog #9: Six more weeks of Winter!
Looking up prediction for Groundhog #3
Early Spring!
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Groundhog2.hashCode0\u8FD4\u56DEGroundhog\u7684\u6807\u8BC6\u6570\u5B57\uFF08\u7F16\u53F7\uFF09\u4F5C\u4E3A\u6563\u5217\u7801\u3002\u5728\u6B64\u4F8B\u4E2D\uFF0C\u7A0B\u5E8F\u5458\u8D1F\u8D23\u786E\u4FDD\u4E0D\u540C\u7684Groundhog\u5177\u6709\u4E0D\u540C\u7684\u7F16\u53F7\u3002hashCode()\u5E76\u4E0D\u9700\u8981\u603B\u662F\u80FD\u591F\u8FD4\u56DE\u552F\u4E00\u7684\u6807\u8BC6\u7801\uFF08\u7A0D\u540E\u4F60\u4F1A\u7406\u89E3\u5176\u539F\u56E0\uFF09\uFF0C\u4F46\u662Fequals() \u65B9\u6CD5\u5FC5\u987B\u4E25\u683C\u5730\u5224\u65AD\u4E24\u4E2A\u5BF9\u8C61\u662F\u5426\u76F8\u540C\u3002\u6B64\u5904\u7684equals()\u662F\u5224\u65ADGroundhog\u7684\u53F7\u7801\uFF0C\u6240\u4EE5\u4F5C\u4E3AHashMap\u4E2D\u7684\u952E\uFF0C\u5982\u679C\u4E24\u4E2AGroundhog2\u5BF9\u8C61\u5177\u6709\u76F8\u540C\u7684Groundhog\u7F16\u53F7\uFF0C\u7A0B\u5E8F\u5C31\u51FA\u9519\u4E86\u3002</p><p>\u5982\u4F55\u5B9A\u4E49 equals() \u65B9\u6CD5\u5728\u4E0A\u4E00\u8282 <a href="">equals \u89C4\u8303</a>\u4E2D\u63D0\u5230\u4E86\u3002\u8F93\u51FA\u8868\u660E\u6211\u4EEC\u73B0\u5728\u7684\u8F93\u51FA\u662F\u6B63\u786E\u7684\u3002</p><h3 id="\u7406\u89E3-hashcode" tabindex="-1"><a class="header-anchor" href="#\u7406\u89E3-hashcode" aria-hidden="true">#</a> \u7406\u89E3 hashCode</h3><p>\u524D\u9762\u7684\u4F8B\u5B50\u53EA\u662F\u6B63\u786E\u89E3\u51B3\u95EE\u9898\u7684\u7B2C\u4E00\u6B65\u3002\u5B83\u53EA\u8BF4\u660E\uFF0C\u5982\u679C\u4E0D\u4E3A\u4F60\u7684\u952E\u8986\u76D6hashCode() \u548Cequals() \uFF0C\u90A3\u4E48\u4F7F\u7528\u6563\u5217\u7684\u6570\u636E\u7ED3\u6784\uFF08HashSet\uFF0CHashMap\uFF0CLinkedHashst\u6216LinkedHashMap\uFF09\u5C31\u65E0\u6CD5\u6B63\u786E\u5904\u7406\u4F60\u7684\u952E\u3002\u7136\u800C\uFF0C\u8981\u5F88\u597D\u5730\u89E3\u51B3\u6B64\u95EE\u9898\uFF0C\u4F60\u5FC5\u987B\u4E86\u89E3\u8FD9\u4E9B\u6570\u636E\u7ED3\u6784\u7684\u5185\u90E8\u6784\u9020\u3002</p><p>\u9996\u5148\uFF0C\u4F7F\u7528\u6563\u5217\u7684\u76EE\u7684\u5728\u4E8E\uFF1A\u60F3\u8981\u4F7F\u7528\u4E00\u4E2A\u5BF9\u8C61\u6765\u67E5\u627E\u53E6\u4E00\u4E2A\u5BF9\u8C61\u3002\u4E0D\u8FC7\u4F7F\u7528TreeMap\u6216\u8005\u4F60\u81EA\u5DF1\u5B9E\u73B0\u7684Map\u4E5F\u53EF\u4EE5\u8FBE\u5230\u6B64\u76EE\u7684\u3002\u4E0E\u6563\u5217\u5B9E\u73B0\u76F8\u53CD\uFF0C\u4E0B\u9762\u7684\u793A\u4F8B\u7528\u4E00\u5BF9ArrayLists\u5B9E\u73B0\u4E86\u4E00\u4E2AMap\uFF0C\u4E0EAssociativeArray.java\u4E0D\u540C\uFF0C\u8FD9\u5176\u4E2D\u5305\u542B\u4E86Map\u63A5\u53E3\u7684\u5B8C\u6574\u5B9E\u73B0\uFF0C\u56E0\u6B64\u63D0\u4F9B\u4E86entrySet()\u65B9\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// equalshashcode/SlowMap.java</span>
<span class="token comment">// A Map implemented with ArrayLists</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">onjava<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SlowMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">AbstractMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">&gt;</span></span> keys <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> values <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">V</span> oldValue <span class="token operator">=</span> <span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// The old value or null</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>keys<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            keys<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
            values<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span>
            values<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>keys<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> oldValue<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// key: type Object, not K</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>keys<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> values<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>keys<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> set<span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">&gt;</span></span> ki <span class="token operator">=</span> keys<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> vi <span class="token operator">=</span> values<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>ki<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MapEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>ki<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> vi<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> set<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SlowMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> m<span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SlowMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        m<span class="token punctuation">.</span><span class="token function">putAll</span><span class="token punctuation">(</span><span class="token class-name">Countries</span><span class="token punctuation">.</span><span class="token function">capitals</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        m<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token operator">-&gt;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>k <span class="token operator">+</span> <span class="token string">&quot;=&quot;</span> <span class="token operator">+</span> v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;BENIN&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        m<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">/* Output:
CAMEROON=Yaounde
ANGOLA=Luanda
BURKINA FASO=Ouagadougou
BURUNDI=Bujumbura
ALGERIA=Algiers
BENIN=Porto-Novo
CAPE VERDE=Praia
BOTSWANA=Gaberone
Porto-Novo
CAMEROON=Yaounde
ANGOLA=Luanda
BURKINA FASO=Ouagadougou
BURUNDI=Bujumbura
ALGERIA=Algiers
BENIN=Porto-Novo
CAPE VERDE=Praia
BOTSWANA=Gaberone
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>put()\u65B9\u6CD5\u53EA\u662F\u5C06\u952E\u4E0E\u503C\u653E\u5165\u76F8\u5E94\u7684ArrayList\u3002\u4E3A\u4E86\u4E0EMap\u63A5\u53E3\u4FDD\u6301\u4E00\u81F4\uFF0C\u5B83\u5FC5\u987B\u8FD4\u56DE\u65E7\u7684\u952E\uFF0C\u6216\u8005\u5728\u6CA1\u6709\u4EFB\u4F55\u65E7\u952E\u7684\u60C5\u51B5\u4E0B\u8FD4\u56DEnull\u3002</p><p>\u540C\u6837\u9075\u5FAA\u4E86Map\u89C4\u8303\uFF0Cget()\u4F1A\u5728\u952E\u4E0D\u5728SlowMap\u4E2D\u7684\u65F6\u5019\u4EA7\u751Fnull\u3002\u5982\u679C\u952E\u5B58\u5728\uFF0C\u5B83\u5C06\u88AB\u7528\u6765\u67E5\u627E\u8868\u793A\u5B83\u5728keys\u5217\u8868\u4E2D\u7684\u4F4D\u7F6E\u7684\u6570\u503C\u578B\u7D22\u5F15\uFF0C\u5E76\u4E14\u8FD9\u4E2A\u6570\u5B57\u88AB\u7528\u4F5C\u7D22\u5F15\u6765\u4EA7\u751F\u4E0Evalues\u5217\u8868\u76F8\u5173\u8054\u7684\u503C\u3002\u6CE8\u610F\uFF0C\u5728get()\u4E2Dkey\u7684\u7C7B\u578B\u662FObject\uFF0C\u800C\u4E0D\u662F\u4F60\u6240\u671F\u671B\u7684\u53C2\u6570\u5316\u7C7B\u578BK\uFF08\u5E76\u4E14\u662F\u5728AssociativeArrayjava\u4E2D\u771F\u6B63\u4F7F\u7528\u7684\u7C7B\u578B\uFF09\uFF0C\u8FD9\u662F\u5C06\u6CDB\u578B\u6CE8\u5165\u5230Java\u8BED\u8A00\u4E2D\u7684\u65F6\u523B\u5982\u6B64\u4E4B\u665A\u6240\u5BFC\u81F4\u7684\u7ED3\u679C-\u5982\u679C\u6CDB\u578B\u662FJava\u8BED\u8A00\u6700\u521D\u5C31\u5177\u5907\u7684\u5C5E\u6027\uFF0C\u90A3\u4E48get()\u5C31\u53EF\u4EE5\u6267\u884C\u5176\u53C2\u6570\u7684\u7C7B\u578B\u3002</p><p>Map.entrySet() \u65B9\u6CD5\u5FC5\u987B\u4EA7\u751F\u4E00\u4E2AMap.Entry\u5BF9\u8C61\u96C6\u3002\u4F46\u662F\uFF0CMap.Entry\u662F\u4E00\u4E2A\u63A5\u53E3\uFF0C\u7528\u6765\u63CF\u8FF0\u4F9D\u8D56\u4E8E\u5B9E\u73B0\u7684\u7ED3\u6784\uFF0C\u56E0\u6B64\u5982\u679C\u4F60\u60F3\u8981\u521B\u5EFA\u81EA\u5DF1\u7684Map\u7C7B\u578B\uFF0C\u5C31\u5FC5\u987B\u540C\u65F6\u5B9A\u4E49Map.Entry\u7684\u5B9E\u73B0\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// equalshashcode/MapEntry.java</span>
<span class="token comment">// A simple Map.Entry for sample Map implementations</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MapEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">K</span> key<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">V</span> value<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">MapEntry</span><span class="token punctuation">(</span><span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>key <span class="token operator">=</span> key<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">K</span> <span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> key<span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> value<span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">setValue</span><span class="token punctuation">(</span><span class="token class-name">V</span> v<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">V</span> result <span class="token operator">=</span> value<span class="token punctuation">;</span>
        value <span class="token operator">=</span> v<span class="token punctuation">;</span>
        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Object</span> rval<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> rval <span class="token keyword">instanceof</span> <span class="token class-name">MapEntry</span> <span class="token operator">&amp;&amp;</span>
                <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>
                        <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">MapEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>rval<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
                <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span>
                        <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">MapEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>rval<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> key <span class="token operator">+</span> <span class="token string">&quot;=&quot;</span> <span class="token operator">+</span> value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC equals \u65B9\u6CD5\u7684\u5B9E\u73B0\u9075\u5FAA\u4E86<a href="">equals \u89C4\u8303</a>\u3002\u5728 Objects \u7C7B\u4E2D\u6709\u4E00\u4E2A\u975E\u5E38\u719F\u6089\u7684\u65B9\u6CD5\u53EF\u4EE5\u5E2E\u52A9\u521B\u5EFA hashCode() \u65B9\u6CD5\uFF1A Objects.hash()\u3002\u5F53\u4F60\u5B9A\u4E49\u542B\u6709\u8D85\u8FC7\u4E00\u4E2A\u5C5E\u6027\u7684\u5BF9\u8C61\u7684 <code>hashCode()</code> \u65F6\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528\u8FD9\u4E2A\u65B9\u6CD5\u3002\u5982\u679C\u4F60\u7684\u5BF9\u8C61\u53EA\u6709\u4E00\u4E2A\u5C5E\u6027\uFF0C\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528 <code> Objects.hashCode()</code>\u3002</p><p>\u5C3D\u7BA1\u8FD9\u4E2A\u89E3\u51B3\u65B9\u6848\u975E\u5E38\u7B80\u5355\uFF0C\u5E76\u4E14\u770B\u8D77\u6765\u5728SlowMap.main() \u7684\u7410\u788E\u6D4B\u8BD5\u4E2D\u53EF\u4EE5\u6B63\u5E38\u5DE5\u4F5C\uFF0C\u4F46\u662F\u8FD9\u5E76\u4E0D\u662F\u4E00\u4E2A\u6070\u5F53\u7684\u5B9E\u73B0\uFF0C\u56E0\u4E3A\u5B83\u521B\u5EFA\u4E86\u952E\u548C\u503C\u7684\u526F\u672C\u3002entrySet() \u7684\u6070\u5F53\u5B9E\u73B0\u5E94\u8BE5\u5728Map\u4E2D\u63D0\u4F9B\u89C6\u56FE\uFF0C\u800C\u4E0D\u662F\u526F\u672C\uFF0C\u5E76\u4E14\u8FD9\u4E2A\u89C6\u56FE\u5141\u8BB8\u5BF9\u539F\u59CB\u6620\u5C04\u8868\u8FDB\u884C\u4FEE\u6539\uFF08\u526F\u672C\u5C31\u4E0D\u884C\uFF09\u3002</p><h3 id="\u4E3A\u4E86\u901F\u5EA6\u800C\u6563\u5217" tabindex="-1"><a class="header-anchor" href="#\u4E3A\u4E86\u901F\u5EA6\u800C\u6563\u5217" aria-hidden="true">#</a> \u4E3A\u4E86\u901F\u5EA6\u800C\u6563\u5217</h3><p>SlowMap.java \u8BF4\u660E\u4E86\u521B\u5EFA\u4E00\u79CD\u65B0\u7684Map\u5E76\u4E0D\u56F0\u96BE\u3002\u4F46\u662F\u6B63\u5982\u5B83\u7684\u540D\u79F0SlowMap\u6240\u793A\uFF0C\u5B83\u4E0D\u4F1A\u5F88\u5FEB\uFF0C\u6240\u4EE5\u5982\u679C\u6709\u66F4\u597D\u7684\u9009\u62E9\uFF0C\u5C31\u5E94\u8BE5\u653E\u5F03\u5B83\u3002\u5B83\u7684\u95EE\u9898\u5728\u4E8E\u5BF9\u952E\u7684\u67E5\u8BE2\uFF0C\u952E\u6CA1\u6709\u6309\u7167\u4EFB\u4F55\u7279\u5B9A\u987A\u5E8F\u4FDD\u5B58\uFF0C\u6240\u4EE5\u53EA\u80FD\u4F7F\u7528\u7B80\u5355\u7684\u7EBF\u6027\u67E5\u8BE2\uFF0C\u800C\u7EBF\u6027\u67E5\u8BE2\u662F\u6700\u6162\u7684\u67E5\u8BE2\u65B9\u5F0F\u3002</p><p>\u6563\u5217\u7684\u4EF7\u503C\u5728\u4E8E\u901F\u5EA6\uFF1A\u6563\u5217\u4F7F\u5F97\u67E5\u8BE2\u5F97\u4EE5\u5FEB\u901F\u8FDB\u884C\u3002\u7531\u4E8E\u74F6\u9888\u4F4D\u4E8E\u952E\u7684\u67E5\u8BE2\u901F\u5EA6\uFF0C\u56E0\u6B64\u89E3\u51B3\u65B9\u6848\u4E4B\u4E00\u5C31\u662F\u4FDD\u6301\u952E\u7684\u6392\u5E8F\u72B6\u6001\uFF0C\u7136\u540E\u4F7F\u7528Collections.binarySearch()\u8FDB\u884C\u67E5\u8BE2\u3002</p><p>\u6563\u5217\u5219\u66F4\u8FDB\u4E00\u6B65\uFF0C\u5B83\u5C06\u952E\u4FDD\u5B58\u5728\u67D0\u5904\uFF0C\u4EE5\u4FBF\u80FD\u591F\u5F88\u5FEB\u627E\u5230\u3002\u5B58\u50A8\u4E00\u7EC4\u5143\u7D20\u6700\u5FEB\u7684\u6570\u636E\u7ED3\u6784\u662F\u6570\u7EC4\uFF0C\u6240\u4EE5\u4F7F\u7528\u5B83\u6765\u8868\u793A\u952E\u7684\u4FE1\u606F\uFF08\u8BF7\u5C0F\u5FC3\u7559\u610F\uFF0C\u6211\u662F\u8BF4\u952E\u7684\u4FE1\u606F\uFF0C\u800C\u4E0D\u662F\u952E\u672C\u8EAB\uFF09\u3002\u4F46\u662F\u56E0\u4E3A\u6570\u7EC4\u4E0D\u80FD\u8C03\u6574\u5BB9\u91CF\uFF0C\u56E0\u6B64\u5C31\u6709\u4E00\u4E2A\u95EE\u9898\uFF1A\u6211\u4EEC\u5E0C\u671B\u5728Map\u4E2D\u4FDD\u5B58\u6570\u91CF\u4E0D\u786E\u5B9A\u7684\u503C\uFF0C\u4F46\u662F\u5982\u679C\u952E\u7684\u6570\u91CF\u88AB\u6570\u7EC4\u7684\u5BB9\u91CF\u9650\u5236\u4E86\uFF0C\u8BE5\u600E\u4E48\u529E\u5462\uFF1F</p><p>\u7B54\u6848\u5C31\u662F\uFF1A\u6570\u7EC4\u5E76\u4E0D\u4FDD\u5B58\u952E\u672C\u8EAB\u3002\u800C\u662F\u901A\u8FC7\u952E\u5BF9\u8C61\u751F\u6210\u4E00\u4E2A\u6570\u5B57\uFF0C\u5C06\u5176\u4F5C\u4E3A\u6570\u7EC4\u7684\u4E0B\u6807\u3002\u8FD9\u4E2A\u6570\u5B57\u5C31\u662F\u6563\u5217\u7801\uFF0C\u7531\u5B9A\u4E49\u5728Object\u4E2D\u7684\u3001\u4E14\u53EF\u80FD\u7531\u4F60\u7684\u7C7B\u8986\u76D6\u7684hashCode()\u65B9\u6CD5\uFF08\u5728\u8BA1\u7B97\u673A\u79D1\u5B66\u7684\u672F\u8BED\u4E2D\u79F0\u4E3A\u6563\u5217\u51FD\u6570\uFF09\u751F\u6210\u3002</p><p>\u4E8E\u662F\u67E5\u8BE2\u4E00\u4E2A\u503C\u7684\u8FC7\u7A0B\u9996\u5148\u5C31\u662F\u8BA1\u7B97\u6563\u5217\u7801\uFF0C\u7136\u540E\u4F7F\u7528\u6563\u5217\u7801\u67E5\u8BE2\u6570\u7EC4\u3002\u5982\u679C\u80FD\u591F\u4FDD\u8BC1\u6CA1\u6709\u51B2\u7A81\uFF08\u5982\u679C\u503C\u7684\u6570\u91CF\u662F\u56FA\u5B9A\u7684\uFF0C\u90A3\u4E48\u5C31\u6709\u53EF\u80FD\uFF09\uFF0C\u90A3\u53EF\u5C31\u6709\u4E86\u4E00\u4E2A\u5B8C\u7F8E\u7684\u6563\u5217\u51FD\u6570\uFF0C\u4F46\u662F\u8FD9\u79CD\u60C5\u51B5\u53EA\u662F\u7279\u4F8B\u3002[^1]\u3002\u901A\u5E38\uFF0C\u51B2\u7A81\u7531\u5916\u90E8\u94FE\u63A5\u5904\u7406\uFF1A\u6570\u7EC4\u5E76\u4E0D\u76F4\u63A5\u4FDD\u5B58\u503C\uFF0C\u800C\u662F\u4FDD\u5B58\u503C\u7684 list\u3002\u7136\u540E\u5BF9 list\u4E2D\u7684\u503C\u4F7F\u7528equals()\u65B9\u6CD5\u8FDB\u884C\u7EBF\u6027\u7684\u67E5\u8BE2\u3002\u8FD9\u90E8\u5206\u7684\u67E5\u8BE2\u81EA\u7136\u4F1A\u6BD4\u8F83\u6162\uFF0C\u4F46\u662F\uFF0C\u5982\u679C\u6563\u5217\u51FD\u6570\u597D\u7684\u8BDD\uFF0C\u6570\u7EC4\u7684\u6BCF\u4E2A\u4F4D\u7F6E\u5C31\u53EA\u6709\u8F83\u5C11\u7684\u503C\u3002\u56E0\u6B64\uFF0C\u4E0D\u662F\u67E5\u8BE2\u6574\u4E2Alist\uFF0C\u800C\u662F\u5FEB\u901F\u5730\u8DF3\u5230\u6570\u7EC4\u7684\u67D0\u4E2A\u4F4D\u7F6E\uFF0C\u53EA\u5BF9\u5F88\u5C11\u7684\u5143\u7D20\u8FDB\u884C\u6BD4\u8F83\u3002\u8FD9\u4FBF\u662FHashMap\u4F1A\u5982\u6B64\u5FEB\u7684\u539F\u56E0\u3002</p><p>\u7406\u89E3\u4E86\u6563\u5217\u7684\u539F\u7406\uFF0C\u6211\u4EEC\u5C31\u80FD\u591F\u5B9E\u73B0\u4E00\u4E2A\u7B80\u5355\u7684\u6563\u5217Map\u4E86\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// equalshashcode/SimpleHashMap.java</span>
<span class="token comment">// A demonstration hashed Map</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">onjava<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span>
<span class="token keyword">class</span> <span class="token class-name">SimpleHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">AbstractMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token comment">// Choose a prime number for the hash table</span>
<span class="token comment">// size, to achieve a uniform distribution:</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> SIZE <span class="token operator">=</span> <span class="token number">997</span><span class="token punctuation">;</span>
    <span class="token comment">// You can&#39;t have a physical array of generics,</span>
<span class="token comment">// but you can upcast to one:</span>
    <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">)</span>
    <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MapEntry</span><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> buckets <span class="token operator">=</span>
            <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token punctuation">[</span>SIZE<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">V</span> oldValue <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>key<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> SIZE<span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>buckets<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
            buckets<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MapEntry</span><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> bucket <span class="token operator">=</span> buckets<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token class-name">MapEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> pair <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MapEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">boolean</span> found <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token class-name">ListIterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MapEntry</span><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> it <span class="token operator">=</span>
                bucket<span class="token punctuation">.</span><span class="token function">listIterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">MapEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> iPair <span class="token operator">=</span> it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>iPair<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                oldValue <span class="token operator">=</span> iPair<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                it<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>pair<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Replace old with new</span>
                found <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>found<span class="token punctuation">)</span>
            buckets<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>pair<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> oldValue<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">V</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>key<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> SIZE<span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>buckets<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">MapEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> iPair <span class="token operator">:</span> buckets<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>iPair<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> iPair<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> set<span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MapEntry</span><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> bucket <span class="token operator">:</span> buckets<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>bucket <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">MapEntry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> mpair <span class="token operator">:</span> bucket<span class="token punctuation">)</span>
                set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>mpair<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> set<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SimpleHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> m <span class="token operator">=</span>
                <span class="token keyword">new</span> <span class="token class-name">SimpleHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        m<span class="token punctuation">.</span><span class="token function">putAll</span><span class="token punctuation">(</span><span class="token class-name">Countries</span><span class="token punctuation">.</span><span class="token function">capitals</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        m<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token operator">-&gt;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>k <span class="token operator">+</span> <span class="token string">&quot;=&quot;</span> <span class="token operator">+</span> v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;BENIN&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        m<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">/* Output:
CAMEROON=Yaounde
ANGOLA=Luanda
BURKINA FASO=Ouagadougou
BURUNDI=Bujumbura
ALGERIA=Algiers
BENIN=Porto-Novo
CAPE VERDE=Praia
BOTSWANA=Gaberone
Porto-Novo
CAMEROON=Yaounde
ANGOLA=Luanda
BURKINA FASO=Ouagadougou
BURUNDI=Bujumbura
ALGERIA=Algiers
BENIN=Porto-Novo
CAPE VERDE=Praia
BOTSWANA=Gaberone
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7531\u4E8E\u6563\u5217\u8868\u4E2D\u7684\u201C\u69FD\u4F4D\u201D\uFF08slot\uFF09\u901A\u5E38\u79F0\u4E3A\u6876\u4F4D\uFF08bucket\uFF09\uFF0C\u56E0\u6B64\u6211\u4EEC\u5C06\u8868\u793A\u5B9E\u9645\u6563\u5217\u8868\u7684\u6570\u7EC4\u547D\u540D\u4E3Abucket\uFF0C\u4E3A\u4F7F\u6563\u5217\u5206\u5E03\u5747\u5300\uFF0C\u6876\u7684\u6570\u91CF\u901A\u5E38\u4F7F\u7528\u8D28\u6570[^2]\u3002\u6CE8\u610F\uFF0C\u4E3A\u4E86\u80FD\u591F\u81EA\u52A8\u5904\u7406\u51B2\u7A81\uFF0C\u4F7F\u7528\u4E86\u4E00\u4E2ALinkedList\u7684\u6570\u7EC4\uFF1B\u6BCF\u4E00\u4E2A\u65B0\u7684\u5143\u7D20\u53EA\u662F\u76F4\u63A5\u6DFB\u52A0\u5230list\u5C3E\u7684\u67D0\u4E2A\u7279\u5B9A\u6876\u4F4D\u4E2D\u3002\u5373\u4F7FJava\u4E0D\u5141\u8BB8\u4F60\u521B\u5EFA\u6CDB\u578B\u6570\u7EC4\uFF0C\u90A3\u4F60\u4E5F\u53EF\u4EE5\u521B\u5EFA\u6307\u5411\u8FD9\u79CD\u6570\u7EC4\u7684\u5F15\u7528\u3002\u8FD9\u91CC\uFF0C\u5411\u4E0A\u8F6C\u578B\u4E3A\u8FD9\u79CD\u6570\u7EC4\u662F\u5F88\u65B9\u4FBF\u7684\uFF0C\u8FD9\u6837\u53EF\u4EE5\u9632\u6B62\u5728\u540E\u9762\u7684\u4EE3\u7801\u4E2D\u8FDB\u884C\u989D\u5916\u7684\u8F6C\u578B\u3002</p><p>\u5BF9\u4E8Eput() \u65B9\u6CD5\uFF0ChashCode() \u5C06\u9488\u5BF9\u952E\u800C\u88AB\u8C03\u7528\uFF0C\u5E76\u4E14\u5176\u7ED3\u679C\u88AB\u5F3A\u5236\u8F6C\u6362\u4E3A\u6B63\u6570\u3002\u4E3A\u4E86\u4F7F\u4EA7\u751F\u7684\u6570\u5B57\u9002\u5408bucket\u6570\u7EC4\u7684\u5927\u5C0F\uFF0C\u53D6\u6A21\u64CD\u4F5C\u7B26\u5C06\u6309\u7167\u8BE5\u6570\u7EC4\u7684\u5C3A\u5BF8\u53D6\u6A21\u3002\u5982\u679C\u6570\u7EC4\u7684\u67D0\u4E2A\u4F4D\u7F6E\u662F null\uFF0C\u8FD9\u8868\u793A\u8FD8\u6CA1\u6709\u5143\u7D20\u88AB\u6563\u5217\u81F3\u6B64\uFF0C\u6240\u4EE5\uFF0C\u4E3A\u4E86\u4FDD\u5B58\u521A\u6563\u5217\u5230\u8BE5\u5B9A\u4F4D\u7684\u5BF9\u8C61\uFF0C\u9700\u8981\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684LinkedList\u3002\u4E00\u822C\u7684\u8FC7\u7A0B\u662F\uFF0C\u67E5\u770B\u5F53\u524D\u4F4D\u7F6E\u7684ist\u4E2D\u662F\u5426\u6709\u76F8\u540C\u7684\u5143\u7D20\uFF0C\u5982\u679C\u6709\uFF0C\u5219\u5C06\u65E7\u7684\u503C\u8D4B\u7ED9oldValue\uFF0C\u7136\u540E\u7528\u65B0\u7684\u503C\u53D6\u4EE3\u65E7\u7684\u503C\u3002\u6807\u8BB0found\u7528\u6765\u8DDF\u8E2A\u662F\u5426\u627E\u5230\uFF08\u76F8\u540C\u7684\uFF09\u65E7\u7684\u952E\u503C\u5BF9\uFF0C\u5982\u679C\u6CA1\u6709\uFF0C\u5219\u5C06\u65B0\u7684\u5BF9\u6DFB\u52A0\u5230list\u7684\u672B\u5C3E\u3002</p><p>get()\u65B9\u6CD5\u6309\u7167\u4E0Eput()\u65B9\u6CD5\u76F8\u540C\u7684\u65B9\u5F0F\u8BA1\u7B97\u5728buckets\u6570\u7EC4\u4E2D\u7684\u7D22\u5F15\uFF08\u8FD9\u5F88\u91CD\u8981\uFF0C\u56E0\u4E3A\u8FD9\u6837\u53EF\u4EE5\u4FDD\u8BC1\u4E24\u4E2A\u65B9\u6CD5\u53EF\u4EE5\u8BA1\u7B97\u51FA\u76F8\u540C\u7684\u4F4D\u7F6E\uFF09\u5982\u679C\u6B64\u4F4D\u7F6E\u6709LinkedList\u5B58\u5728\uFF0C\u5C31\u5BF9\u5176\u8FDB\u884C\u67E5\u8BE2\u3002</p><p>\u6CE8\u610F\uFF0C\u8FD9\u4E2A\u5B9E\u73B0\u5E76\u4E0D\u610F\u5473\u7740\u5BF9\u6027\u80FD\u8FDB\u884C\u4E86\u8C03\u4F18\uFF0C\u5B83\u53EA\u662F\u60F3\u8981\u5C55\u793A\u6563\u5217\u6620\u5C04\u8868\u6267\u884C\u7684\u5404\u79CD\u64CD\u4F5C\u3002\u5982\u679C\u4F60\u6D4F\u89C8\u4E00\u4E0Bjava.util.HashMap\u7684\u6E90\u4EE3\u7801\uFF0C\u4F60\u5C31\u4F1A\u770B\u5230\u4E00\u4E2A\u8C03\u8FC7\u4F18\u7684\u5B9E\u73B0\u3002\u540C\u6837\uFF0C\u4E3A\u4E86\u7B80\u5355\uFF0CSimpleHashMap\u4F7F\u7528\u4E86\u4E0ESlowMap\u76F8\u540C\u7684\u65B9\u5F0F\u6765\u5B9E\u73B0entrySet()\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u6709\u4E9B\u8FC7\u4E8E\u7B80\u5355\uFF0C\u4E0D\u80FD\u7528\u4E8E\u901A\u7528\u7684Map\u3002</p><h3 id="\u91CD\u5199-hashcode" tabindex="-1"><a class="header-anchor" href="#\u91CD\u5199-hashcode" aria-hidden="true">#</a> \u91CD\u5199 hashCode()</h3><p>\u5728\u660E\u767D\u4E86\u5982\u4F55\u6563\u5217\u4E4B\u540E\uFF0C\u7F16\u5199\u81EA\u5DF1\u7684hashCode()\u5C31\u66F4\u6709\u610F\u4E49\u4E86\u3002</p><p>\u9996\u5148\uFF0C\u4F60\u65E0\u6CD5\u63A7\u5236bucket\u6570\u7EC4\u7684\u4E0B\u6807\u503C\u7684\u4EA7\u751F\u3002\u8FD9\u4E2A\u503C\u4F9D\u8D56\u4E8E\u5177\u4F53\u7684HashMap\u5BF9\u8C61\u7684\u5BB9\u91CF\uFF0C\u800C\u5BB9\u91CF\u7684\u6539\u53D8\u4E0E\u5BB9\u5668\u7684\u5145\u6EE1\u7A0B\u5EA6\u548C\u8D1F\u8F7D\u56E0\u5B50\uFF08\u672C\u7AE0\u7A0D\u540E\u4F1A\u4ECB\u7ECD\u8FD9\u4E2A\u672F\u8BED\uFF09\u6709\u5173\u3002hashCode()\u751F\u6210\u7684\u7ED3\u679C\uFF0C\u7ECF\u8FC7\u5904\u7406\u540E\u6210\u4E3A\u6876\u4F4D\u7684\u4E0B\u6807\uFF08\u5728SimpleHashMap\u4E2D\uFF0C\u53EA\u662F\u5BF9\u5176\u53D6\u6A21\uFF0C\u6A21\u6570\u4E3Abucket\u6570\u7EC4\u7684\u5927\u5C0F\uFF09\u3002</p><p>\u8BBE\u8BA1hashCode()\u65F6\u6700\u91CD\u8981\u7684\u56E0\u7D20\u5C31\u662F\uFF1A\u65E0\u8BBA\u4F55\u65F6\uFF0C\u5BF9\u540C\u4E00\u4E2A\u5BF9\u8C61\u8C03\u7528hashCode()\u90FD\u5E94\u8BE5\u751F\u6210\u540C\u6837\u7684\u503C\u3002\u5982\u679C\u5728\u5C06\u4E00\u4E2A\u5BF9\u8C61\u7528put()\u6DFB\u52A0\u8FDBHashMap\u65F6\u4EA7\u751F\u4E00\u4E2AhashCode()\u503C\uFF0C\u800C\u7528get()\u53D6\u51FA\u65F6\u5374\u4EA7\u751F\u4E86\u53E6\u4E00\u4E2AhashCode()\u503C\uFF0C\u90A3\u4E48\u5C31\u65E0\u6CD5\u91CD\u65B0\u53D6\u5F97\u8BE5\u5BF9\u8C61\u4E86\u3002\u6240\u4EE5\uFF0C\u5982\u679C\u4F60\u7684hashCode()\u65B9\u6CD5\u4F9D\u8D56\u4E8E\u5BF9\u8C61\u4E2D\u6613\u53D8\u7684\u6570\u636E\uFF0C\u7528\u6237\u5C31\u8981\u5F53\u5FC3\u4E86\uFF0C\u56E0\u4E3A\u6B64\u6570\u636E\u53D1\u751F\u53D8\u5316\u65F6\uFF0ChashCode()\u5C31\u4F1A\u751F\u6210\u4E00\u4E2A\u4E0D\u540C\u7684\u6563\u5217\u7801\uFF0C\u76F8\u5F53\u4E8E\u4EA7\u751F\u4E86\u4E00\u4E2A\u4E0D\u540C\u7684\u952E\u3002</p><p>\u6B64\u5916\uFF0C\u4E5F\u4E0D\u5E94\u8BE5\u4F7FhashCode()\u4F9D\u8D56\u4E8E\u5177\u6709\u552F\u4E00\u6027\u7684\u5BF9\u8C61\u4FE1\u606F\uFF0C\u5C24\u5176\u662F\u4F7F\u7528this\u503C\uFF0C\u8FD9\u53EA\u80FD\u4EA7\u751F\u5F88\u7CDF\u7CD5\u7684hashCode()\uFF0C\u56E0\u4E3A\u8FD9\u6837\u505A\u65E0\u6CD5\u751F\u6210\u4E00\u4E2A\u65B0\u7684\u952E\uFF0C\u4F7F\u4E4B\u4E0Eput()\u4E2D\u539F\u59CB\u7684\u952E\u503C\u5BF9\u4E2D\u7684\u952E\u76F8\u540C\u3002\u8FD9\u6B63\u662FSpringDetector.java\u7684\u95EE\u9898\u6240\u5728\uFF0C\u56E0\u4E3A\u5B83\u9ED8\u8BA4\u7684hashCode0\u4F7F\u7528\u7684\u662F\u5BF9\u8C61\u7684\u5730\u5740\u3002\u6240\u4EE5\uFF0C\u5E94\u8BE5\u4F7F\u7528\u5BF9\u8C61\u5185\u6709\u610F\u4E49\u7684\u8BC6\u522B\u4FE1\u606F\u3002</p><p>\u4E0B\u9762\u4EE5String\u7C7B\u4E3A\u4F8B\u3002String\u6709\u4E2A\u7279\u70B9\uFF1A\u5982\u679C\u7A0B\u5E8F\u4E2D\u6709\u591A\u4E2AString\u5BF9\u8C61\uFF0C\u90FD\u5305\u542B\u76F8\u540C\u7684\u5B57\u7B26\u4E32\u5E8F\u5217\uFF0C\u90A3\u4E48\u8FD9\u4E9BString\u5BF9\u8C61\u90FD\u6620\u5C04\u5230\u540C\u4E00\u5757\u5185\u5B58\u533A\u57DF\u3002\u6240\u4EE5new String(&quot;hello&quot;)\u751F\u6210\u7684\u4E24\u4E2A\u5B9E\u4F8B\uFF0C\u867D\u7136\u662F\u76F8\u4E92\u72EC\u7ACB\u7684\uFF0C\u4F46\u662F\u5BF9\u5B83\u4EEC\u4F7F\u7528hashCode()\u5E94\u8BE5\u751F\u6210\u540C\u6837\u7684\u7ED3\u679C\u3002\u901A\u8FC7\u4E0B\u9762\u7684\u7A0B\u5E8F\u53EF\u4EE5\u770B\u5230\u8FD9\u79CD\u60C5\u51B5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// equalshashcode/StringHashCode.java</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StringHashCode</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> hellos <span class="token operator">=</span> <span class="token string">&quot;Hello Hello&quot;</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>hellos<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>hellos<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">/* Output:
69609650
69609650
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u4E8EString\u800C\u8A00\uFF0ChashCode() \u660E\u663E\u662F\u57FA\u4E8EString\u7684\u5185\u5BB9\u7684\u3002</p><p>\u56E0\u6B64\uFF0C\u8981\u60F3\u4F7FhashCode() \u5B9E\u7528\uFF0C\u5B83\u5FC5\u987B\u901F\u5EA6\u5FEB\uFF0C\u5E76\u4E14\u5FC5\u987B\u6709\u610F\u4E49\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u5B83\u5FC5\u987B\u57FA\u4E8E\u5BF9\u8C61\u7684\u5185\u5BB9\u751F\u6210\u6563\u5217\u7801\u3002\u8BB0\u5F97\u5417\uFF0C\u6563\u5217\u7801\u4E0D\u5FC5\u662F\u72EC\u4E00\u65E0\u4E8C\u7684\uFF08\u5E94\u8BE5\u66F4\u5173\u6CE8\u751F\u6210\u901F\u5EA6\uFF0C\u800C\u4E0D\u662F\u552F\u4E00\u6027\uFF09\uFF0C\u4F46\u662F\u901A\u8FC7 hashCode() \u548C equals() \uFF0C\u5FC5\u987B\u80FD\u591F\u5B8C\u5168\u786E\u5B9A\u5BF9\u8C61\u7684\u8EAB\u4EFD\u3002</p><p>\u56E0\u4E3A\u5728\u751F\u6210\u6876\u7684\u4E0B\u6807\u524D\uFF0ChashCode()\u8FD8\u9700\u8981\u505A\u8FDB\u4E00\u6B65\u7684\u5904\u7406\uFF0C\u6240\u4EE5\u6563\u5217\u7801\u7684\u751F\u6210\u8303\u56F4\u5E76\u4E0D\u91CD\u8981\uFF0C\u53EA\u8981\u662Fint\u5373\u53EF\u3002</p><p>\u8FD8\u6709\u53E6\u4E00\u4E2A\u5F71\u54CD\u56E0\u7D20\uFF1A\u597D\u7684hashCode() \u5E94\u8BE5\u4EA7\u751F\u5206\u5E03\u5747\u5300\u7684\u6563\u5217\u7801\u3002\u5982\u679C\u6563\u5217\u7801\u90FD\u96C6\u4E2D\u5728\u4E00\u5757\uFF0C\u90A3\u4E48HashMap\u6216\u8005HashSet\u5728\u67D0\u4E9B\u533A\u57DF\u7684\u8D1F\u8F7D\u4F1A\u5F88\u91CD\uFF0C\u8FD9\u6837\u5C31\u4E0D\u5982\u5206\u5E03\u5747\u5300\u7684\u6563\u5217\u51FD\u6570\u5FEB\u3002</p><p>\u5728Effective Java Programming Language Guide\uFF08Addison-Wesley 2001\uFF09\u8FD9\u672C\u4E66\u4E2D\uFF0CJoshua Bloch\u4E3A\u600E\u6837\u5199\u51FA\u4E00\u4EFD\u50CF\u6837\u7684hashCode()\u7ED9\u51FA\u4E86\u57FA\u672C\u7684\u6307\u5BFC\uFF1A</p><ol><li>\u7ED9int\u53D8\u91CFresult\u8D4B\u4E88\u67D0\u4E2A\u975E\u96F6\u503C\u5E38\u91CF\uFF0C\u4F8B\u598217\u3002</li><li>\u4E3A\u5BF9\u8C61\u5185\u6BCF\u4E2A\u6709\u610F\u4E49\u7684\u5B57\u6BB5\uFF08\u5373\u6BCF\u4E2A\u53EF\u4EE5\u505Aequals\uFF09\u64CD\u4F5C\u7684\u5B57\u6BB5\u8BA1\u7B97\u51FA\u4E00\u4E2Aint\u6563\u5217\u7801c\uFF1A</li></ol><table><thead><tr><th>\u5B57\u6BB5\u7C7B\u578B</th><th>\u8BA1\u7B97\u516C\u5F0F</th></tr></thead><tbody><tr><td>boolean</td><td>c = (f ? 0 : 1)</td></tr><tr><td>byte , char , short , or int</td><td>c = (int)f</td></tr><tr><td>long</td><td>c = (int)(f ^ (f&gt;&gt;&gt;32))</td></tr><tr><td>float</td><td>c = Float.floatToIntBits(f);</td></tr><tr><td>double</td><td>long l =Double.doubleToLongBits(f); <br>c = (int)(l ^ (l &gt;&gt;&gt; 32))</td></tr><tr><td>Object , where equals() calls equals() for this field</td><td>c = f.hashCode()</td></tr><tr><td>Array</td><td>\u5E94\u7528\u4EE5\u4E0A\u89C4\u5219\u5230\u6BCF\u4E00\u4E2A\u5143\u7D20\u4E2D</td></tr></tbody></table><ol start="3"><li>\u5408\u5E76\u8BA1\u7B97\u5F97\u5230\u7684\u6563\u5217\u7801\uFF1A <strong>result = 37 * result + c;\u200B</strong></li><li>\u8FD4\u56DE result\u3002</li><li>\u68C0\u67E5hashCode()\u6700\u540E\u751F\u6210\u7684\u7ED3\u679C\uFF0C\u786E\u4FDD\u76F8\u540C\u7684\u5BF9\u8C61\u6709\u76F8\u540C\u7684\u6563\u5217\u7801\u3002</li></ol><p>\u4E0B\u9762\u4FBF\u662F\u9075\u5FAA\u8FD9\u4E9B\u6307\u5BFC\u7684\u4E00\u4E2A\u4F8B\u5B50\u3002\u63D0\u793A\uFF0C\u4F60\u6CA1\u6709\u5FC5\u8981\u4E66\u5199\u50CF\u5982\u4E0B\u7684\u4EE3\u7801 \u2014\u2014 \u76F8\u53CD\uFF0C\u4F7F\u7528 <code>Objects.hash()</code> \u53BB\u7528\u4E8E\u6563\u5217\u591A\u5B57\u6BB5\u7684\u5BF9\u8C61\uFF08\u5982\u540C\u5728\u672C\u4F8B\u4E2D\u7684\u90A3\u6837\uFF09\uFF0C\u7136\u540E\u4F7F\u7528 <code>Objects.hashCode()</code> \u5982\u6563\u5217\u5355\u5B57\u6BB5\u7684\u5BF9\u8C61\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// equalshashcode/CountedString.java</span>
<span class="token comment">// Creating a good hashCode()</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CountedString</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> created <span class="token operator">=</span>
            <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> s<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> id <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">CountedString</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        s <span class="token operator">=</span> str<span class="token punctuation">;</span>
        created<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// id is the total number of instances</span>
<span class="token comment">// of this String used by CountedString:</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">String</span> s2 <span class="token operator">:</span> created<span class="token punctuation">)</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>s2<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span>
                id<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;String: &quot;</span> <span class="token operator">+</span> s <span class="token operator">+</span> <span class="token string">&quot; id: &quot;</span> <span class="token operator">+</span> id <span class="token operator">+</span>
                <span class="token string">&quot; hashCode(): &quot;</span> <span class="token operator">+</span> <span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">// The very simple approach:</span>
<span class="token comment">// return s.hashCode() * id;</span>
<span class="token comment">// Using Joshua Bloch&#39;s recipe:</span>
        <span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token number">17</span><span class="token punctuation">;</span>
        result <span class="token operator">=</span> <span class="token number">37</span> <span class="token operator">*</span> result <span class="token operator">+</span> s<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        result <span class="token operator">=</span> <span class="token number">37</span> <span class="token operator">*</span> result <span class="token operator">+</span> id<span class="token punctuation">;</span>
        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> o <span class="token keyword">instanceof</span> <span class="token class-name">CountedString</span> <span class="token operator">&amp;&amp;</span>
                <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">CountedString</span><span class="token punctuation">)</span>o<span class="token punctuation">)</span><span class="token punctuation">.</span>s<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
                <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">CountedString</span><span class="token punctuation">)</span>o<span class="token punctuation">)</span><span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CountedString</span><span class="token punctuation">,</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">CountedString</span><span class="token punctuation">[</span><span class="token punctuation">]</span> cs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CountedString</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> cs<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            cs<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CountedString</span><span class="token punctuation">(</span><span class="token string">&quot;hi&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>cs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Autobox int to Integer</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">CountedString</span> cstring <span class="token operator">:</span> cs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Looking up &quot;</span> <span class="token operator">+</span> cstring<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>cstring<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">/* Output:
{String: hi id: 4 hashCode(): 146450=3, String: hi id:
5 hashCode(): 146451=4, String: hi id: 2 hashCode():
146448=1, String: hi id: 3 hashCode(): 146449=2,
String: hi id: 1 hashCode(): 146447=0}
Looking up String: hi id: 1 hashCode(): 146447
0
Looking up String: hi id: 2 hashCode(): 146448
1
Looking up String: hi id: 3 hashCode(): 146449
2
Looking up String: hi id: 4 hashCode(): 146450
3
Looking up String: hi id: 5 hashCode(): 146451
4
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>CountedString\u7531\u4E00\u4E2AString\u548C\u4E00\u4E2Aid\u7EC4\u6210\uFF0C\u6B64id\u4EE3\u8868\u5305\u542B\u76F8\u540CString\u7684CountedString\u5BF9\u8C61\u7684\u7F16\u53F7\u3002\u6240\u6709\u7684String\u90FD\u88AB\u5B58\u50A8\u5728static ArrayList\u4E2D\uFF0C\u5728\u6784\u9020\u5668\u4E2D\u901A\u8FC7\u9009\u4EE3\u904D\u5386\u6B64ArrayList\u5B8C\u6210\u5BF9id\u7684\u8BA1\u7B97\u3002</p><p>hashCode()\u548Cequals() \u90FD\u57FA\u4E8ECountedString\u7684\u8FD9\u4E24\u4E2A\u5B57\u6BB5\u6765\u751F\u6210\u7ED3\u679C\uFF1B\u5982\u679C\u5B83\u4EEC\u53EA\u57FA\u4E8EString\u6216\u8005\u53EA\u57FA\u4E8Eid\uFF0C\u4E0D\u540C\u7684\u5BF9\u8C61\u5C31\u53EF\u80FD\u4EA7\u751F\u76F8\u540C\u7684\u503C\u3002</p><p>\u5728main\uFF09\u4E2D\uFF0C\u4F7F\u7528\u76F8\u540C\u7684String\u521B\u5EFA\u4E86\u591A\u4E2ACountedString\u5BF9\u8C61\u3002\u8FD9\u8BF4\u660E\uFF0C\u867D\u7136String\u76F8\u540C\uFF0C\u4F46\u662F\u7531\u4E8Eid\u4E0D\u540C\uFF0C\u6240\u4EE5\u4F7F\u5F97\u5B83\u4EEC\u7684\u6563\u5217\u7801\u5E76\u4E0D\u76F8\u540C\u3002\u5728\u7A0B\u5E8F\u4E2D\uFF0CHashMap\u88AB\u6253\u5370\u4E86\u51FA\u6765\uFF0C\u56E0\u6B64\u53EF\u4EE5\u770B\u5230\u5B83\u5185\u90E8\u662F\u5982\u4F55\u5B58\u50A8\u5143\u7D20\u7684\uFF08\u4EE5\u65E0\u6CD5\u8FA8\u522B\u7684\u6B21\u5E8F\uFF09\uFF0C\u7136\u540E\u5355\u72EC\u67E5\u8BE2\u6BCF\u4E00\u4E2A\u952E\uFF0C\u4EE5\u6B64\u8BC1\u660E\u67E5\u8BE2\u673A\u5236\u5DE5\u4F5C\u6B63\u5E38\u3002</p><p>\u4F5C\u4E3A\u7B2C\u4E8C\u4E2A\u793A\u4F8B\uFF0C\u8BF7\u8003\u8651Individual\u7C7B\uFF0C\u5B83\u88AB\u7528\u4F5C<a href="">\u7C7B\u578B\u4FE1\u606F</a>\u4E2D\u6240\u5B9A\u4E49\u7684typeinfo.pet\u7C7B\u5E93\u7684\u57FA\u7C7B\u3002Individual\u7C7B\u5728\u90A3\u4E00\u7AE0\u4E2D\u5C31\u7528\u5230\u4E86\uFF0C\u800C\u5B83\u7684\u5B9A\u4E49\u5219\u653E\u5230\u4E86\u672C\u7AE0\uFF0C\u56E0\u6B64\u4F60\u53EF\u4EE5\u6B63\u786E\u5730\u7406\u89E3\u5176\u5B9E\u73B0\u3002</p><p>\u5728\u8FD9\u91CC\u66FF\u6362\u4E86\u624B\u5DE5\u53BB\u8BA1\u7B97 <code>hashCode()</code>\uFF0C\u6211\u4EEC\u4F7F\u7528\u4E86\u66F4\u5408\u9002\u7684\u65B9\u5F0F <code>Objects.hash()</code>\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// typeinfo/pets/Individual.java</span>
<span class="token keyword">package</span> <span class="token namespace">typeinfo<span class="token punctuation">.</span>pets</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span>
<span class="token class-name">Individual</span> <span class="token keyword">implements</span> <span class="token class-name">Comparable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Individual</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">long</span> counter <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">long</span> id <span class="token operator">=</span> counter<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">Individual</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token comment">// &#39;name&#39; is optional:</span>
    <span class="token keyword">public</span> <span class="token class-name">Individual</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
                <span class="token punctuation">(</span>name <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token string">&quot;&quot;</span> <span class="token operator">:</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> id<span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> o <span class="token keyword">instanceof</span> <span class="token class-name">Individual</span> <span class="token operator">&amp;&amp;</span>
                <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Individual</span><span class="token punctuation">)</span>o<span class="token punctuation">)</span><span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">hash</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compareTo</span><span class="token punctuation">(</span><span class="token class-name">Individual</span> arg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Compare by class name first:</span>
        <span class="token class-name">String</span> first <span class="token operator">=</span> <span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> argFirst <span class="token operator">=</span> arg<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> firstCompare <span class="token operator">=</span> first<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>argFirst<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>firstCompare <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> firstCompare<span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>name <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> arg<span class="token punctuation">.</span>name <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> secondCompare <span class="token operator">=</span> name<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>secondCompare <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> secondCompare<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>arg<span class="token punctuation">.</span>id <span class="token operator">&lt;</span> id <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">:</span> <span class="token punctuation">(</span>arg<span class="token punctuation">.</span>id <span class="token operator">==</span> id <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>compareTo() \u65B9\u6CD5\u6709\u4E00\u4E2A\u6BD4\u8F83\u7ED3\u6784\uFF0C\u56E0\u6B64\u5B83\u4F1A\u4EA7\u751F\u4E00\u4E2A\u6392\u5E8F\u5E8F\u5217\uFF0C\u6392\u5E8F\u7684\u89C4\u5219\u9996\u5148\u6309\u7167\u5B9E\u9645\u7C7B\u578B\u6392\u5E8F\uFF0C\u7136\u540E\u5982\u679C\u6709\u540D\u5B57\u7684\u8BDD\uFF0C\u6309\u7167name\u6392\u5E8F\uFF0C\u6700\u540E\u6309\u7167\u521B\u5EFA\u7684\u987A\u5E8F\u6392\u5E8F\u3002\u4E0B\u9762\u7684\u793A\u4F8B\u8BF4\u660E\u4E86\u5B83\u662F\u5982\u4F55\u5DE5\u4F5C\u7684\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// equalshashcode/IndividualTest.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">collections<span class="token punctuation">.</span></span><span class="token class-name">MapOfList</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">typeinfo<span class="token punctuation">.</span>pets<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IndividualTest</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Individual</span><span class="token punctuation">&gt;</span></span> pets <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Pet</span><span class="token punctuation">&gt;</span></span> lp <span class="token operator">:</span>
                <span class="token class-name">MapOfList</span><span class="token punctuation">.</span>petPeople<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Pet</span> p <span class="token operator">:</span> lp<span class="token punctuation">)</span>
                pets<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
        pets<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">/* Output:
Cat Elsie May
Cat Pinkola
Cat Shackleton
Cat Stanford
Cymric Molly
Dog Margrett
Mutt Spot
Pug Louie aka Louis Snorkelstein Dupree
Rat Fizzy
Rat Freckly
Rat Fuzzy
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7531\u4E8E\u6240\u6709\u7684\u5BA0\u7269\u90FD\u6709\u540D\u5B57\uFF0C\u56E0\u6B64\u5B83\u4EEC\u9996\u5148\u6309\u7167\u7C7B\u578B\u6392\u5E8F\uFF0C\u7136\u540E\u5728\u540C\u7C7B\u578B\u4E2D\u6309\u7167\u540D\u5B57\u6392\u5E8F\u3002</p><h2 id="\u8C03\u4F18-hashmap" tabindex="-1"><a class="header-anchor" href="#\u8C03\u4F18-hashmap" aria-hidden="true">#</a> \u8C03\u4F18 HashMap</h2><p>\u6211\u4EEC\u6709\u53EF\u80FD\u624B\u52A8\u8C03\u4F18HashMap\u4EE5\u63D0\u9AD8\u5176\u5728\u7279\u5B9A\u5E94\u7528\u7A0B\u5E8F\u4E2D\u7684\u6027\u80FD\u3002\u4E3A\u4E86\u7406\u89E3\u8C03\u6574HashMap\u65F6\u7684\u6027\u80FD\u95EE\u9898\uFF0C\u4E00\u4E9B\u672F\u8BED\u662F\u5FC5\u8981\u7684\uFF1A</p><ul><li>\u5BB9\u91CF\uFF08Capacity\uFF09\uFF1A\u8868\u4E2D\u5B58\u50A8\u7684\u6876\u6570\u91CF\u3002</li><li>\u521D\u59CB\u5BB9\u91CF\uFF08Initial Capacity\uFF09\uFF1A\u5F53\u8868\u88AB\u521B\u5EFA\u65F6\uFF0C\u6876\u7684\u521D\u59CB\u4E2A\u6570\u3002 HashMap \u548C HashSet \u6709\u53EF\u4EE5\u8BA9\u4F60\u6307\u5B9A\u521D\u59CB\u5BB9\u91CF\u7684\u6784\u9020\u5668\u3002</li><li>\u4E2A\u6570\uFF08Size\uFF09\uFF1A\u76EE\u524D\u5B58\u50A8\u5728\u8868\u4E2D\u7684\u952E\u503C\u5BF9\u7684\u4E2A\u6570\u3002</li><li>\u8D1F\u8F7D\u56E0\u5B50\uFF08Load factor\uFF09\uFF1A\u901A\u5E38\u8868\u73B0\u4E3A $\\frac{size}{capacity}$\u3002\u5F53\u8D1F\u8F7D\u56E0\u5B50\u5927\u5C0F\u4E3A 0 \u7684\u65F6\u5019\u8868\u793A\u4E3A\u4E00\u4E2A\u7A7A\u8868\u3002\u5F53\u8D1F\u8F7D\u56E0\u5B50\u5927\u5C0F\u4E3A 0.5 \u8868\u793A\u4E3A\u4E00\u4E2A\u534A\u6EE1\u8868\uFF08half-full table\uFF09\uFF0C\u4EE5\u6B64\u7C7B\u63A8\u3002\u8F7B\u8D1F\u8F7D\u7684\u8868\u51E0\u4E4E\u6CA1\u6709\u51B2\u7A81\uFF0C\u56E0\u6B64\u662F\u63D2\u5165\u548C\u67E5\u627E\u7684\u6700\u4F73\u9009\u62E9\uFF08\u4F46\u4F1A\u51CF\u6162\u4F7F\u7528\u8FED\u4EE3\u5668\u8FDB\u884C\u904D\u5386\u7684\u8FC7\u7A0B\uFF09\u3002 HashMap \u548C HashSet \u6709\u53EF\u4EE5\u8BA9\u4F60\u6307\u5B9A\u8D1F\u8F7D\u56E0\u5B50\u7684\u6784\u9020\u5668\u3002\u5F53\u8868\u5185\u5BB9\u91CF\u8FBE\u5230\u4E86\u8D1F\u8F7D\u56E0\u5B50\uFF0C\u96C6\u5408\u5C31\u4F1A\u81EA\u52A8\u6269\u5145\u4E3A\u539F\u59CB\u5BB9\u91CF\uFF08\u6876\u7684\u6570\u91CF\uFF09\u7684\u4E24\u500D\uFF0C\u5E76\u4E14\u4F1A\u5C06\u539F\u59CB\u7684\u5BF9\u8C61\u5B58\u50A8\u5728\u65B0\u7684\u6876\u96C6\u5408\u4E2D\uFF08\u4E5F\u88AB\u79F0\u4E3A rehashing\uFF09</li></ul><p>HashMap \u4E2D\u8D1F\u8F7D\u56E0\u5B50\u7684\u5927\u5C0F\u4E3A 0.75\uFF08\u5F53\u8868\u5185\u5BB9\u91CF\u5927\u5C0F\u4E0D\u8DB3\u56DB\u5206\u4E4B\u4E09\u7684\u65F6\u5019\uFF0C\u4E0D\u4F1A\u53D1\u751F rehashing \u73B0\u8C61\uFF09\u3002\u8FD9\u770B\u8D77\u6765\u662F\u4E00\u4E2A\u975E\u5E38\u597D\u7684\u540C\u65F6\u8003\u8651\u5230\u65F6\u95F4\u548C\u7A7A\u95F4\u6D88\u8017\u7684\u5E73\u8861\u7B56\u7565\u3002\u66F4\u9AD8\u7684\u8D1F\u8F7D\u56E0\u5B50\u4F1A\u51CF\u5C11\u7A7A\u95F4\u7684\u6D88\u8017\uFF0C\u4F46\u662F\u4F1A\u589E\u52A0\u67E5\u8BE2\u7684\u8017\u65F6\u3002\u91CD\u8981\u7684\u662F\uFF0C\u67E5\u8BE2\u64CD\u4F5C\u662F\u4F60\u4F7F\u7528\u7684\u6700\u9891\u7E41\u7684\u4E00\u4E2A\u64CD\u4F5C\uFF08\u5305\u62EC <code>get()</code> \u548C <code>put()</code> \u65B9\u6CD5\uFF09\u3002</p><p>\u5982\u679C\u4F60\u77E5\u9053\u5B58\u50A8\u5728 HashMap \u4E2D\u786E\u5207\u7684\u6761\u76EE\u4E2A\u6570\uFF0C\u76F4\u63A5\u521B\u5EFA\u4E00\u4E2A\u8DB3\u591F\u5BB9\u91CF\u5927\u5C0F\u7684 HashMap\uFF0C\u4EE5\u907F\u514D\u81EA\u52A8\u53D1\u751F\u7684 rehashing \u64CD\u4F5C\u3002</p><p>[^1]: [^2]: \u4E8B\u5B9E\u8BC1\u660E\uFF0C\u8D28\u6570\u5B9E\u9645\u4E0A\u5E76\u4E0D\u662F\u6563\u5217\u6876\u7684\u7406\u60F3\u5BB9\u91CF\u3002\u8FD1\u6765\uFF0C\uFF08\u7ECF\u8FC7\u5E7F\u6CDB\u7684\u6D4B\u8BD5\uFF09Java\u7684\u6563\u5217\u51FD\u6570\u90FD\u4F7F\u75282\u7684\u6574\u6570\u6B21\u65B9\u3002\u5BF9\u73B0\u4EE3\u7684\u5904\u7406\u5668\u6765\u8BF4\uFF0C\u9664\u6CD5\u4E0E\u6C42\u4F59\u6570\u662F\u6700\u6162\u7684\u64CD\u4F5C\u3002\u4F7F\u75282\u7684\u6574\u6570\u6B21\u65B9\u957F\u5EA6\u7684\u6563\u5217\u8868\uFF0C\u53EF\u7528\u63A9\u7801\u4EE3\u66FF\u9664\u6CD5\u3002</p><div style="page-break-after:always;"></div>`,105),o=[e];function c(l,i){return s(),a("div",null,o)}var k=n(p,[["render",c],["__file","Appendix-Understanding-equals-and-hashCode.html.vue"]]);export{k as default};
