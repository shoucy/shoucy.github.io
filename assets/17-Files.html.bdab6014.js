import{_ as t,r as p,o as e,c as o,a as n,b as c,w as i,d as s,e as l}from"./app.205a3d76.js";const u={},k=n("p",null,"[TOC]",-1),r=n("h1",{id:"\u7B2C\u5341\u4E03\u7AE0-\u6587\u4EF6",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u7B2C\u5341\u4E03\u7AE0-\u6587\u4EF6","aria-hidden":"true"},"#"),s(" \u7B2C\u5341\u4E03\u7AE0 \u6587\u4EF6")],-1),d=n("blockquote",null,[n("p",null,"\u5728\u4E11\u964B\u7684 Java I/O \u7F16\u7A0B\u65B9\u5F0F\u8BDE\u751F\u591A\u5E74\u4EE5\u540E\uFF0CJava\u7EC8\u4E8E\u7B80\u5316\u4E86\u6587\u4EF6\u8BFB\u5199\u7684\u57FA\u672C\u64CD\u4F5C\u3002")],-1),v=s('\u8FD9\u79CD"\u56F0\u96BE\u65B9\u5F0F"\u7684\u5168\u90E8\u7EC6\u8282\u90FD\u5728 '),m=s("Appendix: I/O Streams"),b=s("\u3002\u5982\u679C\u4F60\u8BFB\u8FC7\u8FD9\u4E2A\u90E8\u5206\uFF0C\u5C31\u4F1A\u8BA4\u540C Java \u8BBE\u8BA1\u8005\u6BEB\u4E0D\u5728\u610F\u4ED6\u4EEC\u7684\u4F7F\u7528\u8005\u7684\u4F53\u9A8C\u8FD9\u4E00\u89C2\u5FF5\u3002\u6253\u5F00\u5E76\u8BFB\u53D6\u6587\u4EF6\u5BF9\u4E8E\u5927\u591A\u6570\u7F16\u7A0B\u8BED\u8A00\u6765\u8BF4\u662F\u975E\u5E38\u5E38\u7528\u7684\uFF0C\u7531\u4E8E I/O \u7CDF\u7CD5\u7684\u8BBE\u8BA1\u4EE5\u81F3\u4E8E \u5F88\u5C11\u6709\u4EBA\u80FD\u591F\u5728\u4E0D\u4F9D\u8D56\u5176\u4ED6\u53C2\u8003\u4EE3\u7801\u7684\u60C5\u51B5\u4E0B\u5B8C\u6210\u6253\u5F00\u6587\u4EF6\u7684\u64CD\u4F5C\u3002"),g=l(`<p>\u597D\u50CF Java \u8BBE\u8BA1\u8005\u7EC8\u4E8E\u610F\u8BC6\u5230\u4E86 Java \u4F7F\u7528\u8005\u591A\u5E74\u6765\u7684\u75DB\u82E6\uFF0C\u5728 Java7 \u4E2D\u5BF9\u6B64\u5F15\u5165\u4E86\u5DE8\u5927\u7684\u6539\u8FDB\u3002\u8FD9\u4E9B\u65B0\u5143\u7D20\u88AB\u653E\u5728 <strong>java.nio.file</strong> \u5305\u4E0B\u9762\uFF0C\u8FC7\u53BB\u4EBA\u4EEC\u901A\u5E38\u628A <strong>nio</strong> \u4E2D\u7684 <strong>n</strong> \u7406\u89E3\u4E3A <strong>new</strong> \u5373\u65B0\u7684 <strong>io</strong>\uFF0C\u73B0\u5728\u66F4\u5E94\u8BE5\u5F53\u6210\u662F <strong>non-blocking</strong> \u975E\u963B\u585E <strong>io</strong>(<strong>io</strong>\u5C31\u662F<em>input/output\u8F93\u5165/\u8F93\u51FA</em>)\u3002<strong>java.nio.file</strong> \u5E93\u7EC8\u4E8E\u5C06 Java \u6587\u4EF6\u64CD\u4F5C\u5E26\u5230\u4E0E\u5176\u4ED6\u7F16\u7A0B\u8BED\u8A00\u76F8\u540C\u7684\u6C34\u5E73\u3002\u6700\u91CD\u8981\u7684\u662F Java8 \u65B0\u589E\u7684 streams \u4E0E\u6587\u4EF6\u7ED3\u5408\u4F7F\u5F97\u6587\u4EF6\u64CD\u4F5C\u7F16\u7A0B\u53D8\u5F97\u66F4\u52A0\u4F18\u96C5\u3002\u6211\u4EEC\u5C06\u770B\u4E00\u4E0B\u6587\u4EF6\u64CD\u4F5C\u7684\u4E24\u4E2A\u57FA\u672C\u7EC4\u4EF6\uFF1A</p><ol><li>\u6587\u4EF6\u6216\u8005\u76EE\u5F55\u7684\u8DEF\u5F84\uFF1B</li><li>\u6587\u4EF6\u672C\u8EAB\u3002</li></ol><h2 id="\u6587\u4EF6\u548C\u76EE\u5F55\u8DEF\u5F84" tabindex="-1"><a class="header-anchor" href="#\u6587\u4EF6\u548C\u76EE\u5F55\u8DEF\u5F84" aria-hidden="true">#</a> \u6587\u4EF6\u548C\u76EE\u5F55\u8DEF\u5F84</h2><p>\u4E00\u4E2A <strong>Path</strong> \u5BF9\u8C61\u8868\u793A\u4E00\u4E2A\u6587\u4EF6\u6216\u8005\u76EE\u5F55\u7684\u8DEF\u5F84\uFF0C\u662F\u4E00\u4E2A\u8DE8\u64CD\u4F5C\u7CFB\u7EDF\uFF08OS\uFF09\u548C\u6587\u4EF6\u7CFB\u7EDF\u7684\u62BD\u8C61\uFF0C\u76EE\u7684\u662F\u5728\u6784\u9020\u8DEF\u5F84\u65F6\u4E0D\u5FC5\u5173\u6CE8\u5E95\u5C42\u64CD\u4F5C\u7CFB\u7EDF\uFF0C\u4EE3\u7801\u53EF\u4EE5\u5728\u4E0D\u8FDB\u884C\u4FEE\u6539\u7684\u60C5\u51B5\u4E0B\u8FD0\u884C\u5728\u4E0D\u540C\u7684\u64CD\u4F5C\u7CFB\u7EDF\u4E0A\u3002<strong>java.nio.file.Paths</strong> \u7C7B\u5305\u542B\u4E00\u4E2A\u91CD\u8F7D\u65B9\u6CD5 <strong>static get()</strong>\uFF0C\u8BE5\u65B9\u6CD5\u63A5\u53D7\u4E00\u7CFB\u5217 <strong>String</strong> \u5B57\u7B26\u4E32\u6216\u4E00\u4E2A<em>\u7EDF\u4E00\u8D44\u6E90\u6807\u8BC6\u7B26</em>(URI)\u4F5C\u4E3A\u53C2\u6570\uFF0C\u5E76\u4E14\u8FDB\u884C\u8F6C\u6362\u8FD4\u56DE\u4E00\u4E2A <strong>Path</strong> \u5BF9\u8C61\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// files/PathInfo.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">URI</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">File</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PathInfo</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token class-name">String</span> id<span class="token punctuation">,</span> <span class="token class-name">Object</span> p<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>id <span class="token operator">+</span> <span class="token string">&quot;: &quot;</span> <span class="token operator">+</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">info</span><span class="token punctuation">(</span><span class="token class-name">Path</span> p<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">show</span><span class="token punctuation">(</span><span class="token string">&quot;toString&quot;</span><span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">show</span><span class="token punctuation">(</span><span class="token string">&quot;Exists&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">show</span><span class="token punctuation">(</span><span class="token string">&quot;RegularFile&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">isRegularFile</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">show</span><span class="token punctuation">(</span><span class="token string">&quot;Directory&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">isDirectory</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">show</span><span class="token punctuation">(</span><span class="token string">&quot;Absolute&quot;</span><span class="token punctuation">,</span> p<span class="token punctuation">.</span><span class="token function">isAbsolute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">show</span><span class="token punctuation">(</span><span class="token string">&quot;FileName&quot;</span><span class="token punctuation">,</span> p<span class="token punctuation">.</span><span class="token function">getFileName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">show</span><span class="token punctuation">(</span><span class="token string">&quot;Parent&quot;</span><span class="token punctuation">,</span> p<span class="token punctuation">.</span><span class="token function">getParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">show</span><span class="token punctuation">(</span><span class="token string">&quot;Root&quot;</span><span class="token punctuation">,</span> p<span class="token punctuation">.</span><span class="token function">getRoot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;******************&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;os.name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">info</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;C:&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;path&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;to&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;nowhere&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;NoFile.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Path</span> p <span class="token operator">=</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;PathInfo.java&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">info</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Path</span> ap <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">toAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">info</span><span class="token punctuation">(</span>ap<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">info</span><span class="token punctuation">(</span>ap<span class="token punctuation">.</span><span class="token function">getParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token function">info</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span><span class="token function">toRealPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">URI</span> u <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">toUri</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;URI: &quot;</span> <span class="token operator">+</span> u<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Path</span> puri <span class="token operator">=</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span>puri<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">File</span> f <span class="token operator">=</span> ap<span class="token punctuation">.</span><span class="token function">toFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Don&#39;t be fooled</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">/* \u8F93\u51FA:
Windows 10
toString: C:\\path\\to\\nowhere\\NoFile.txt
Exists: false
RegularFile: false
Directory: false
Absolute: true
FileName: NoFile.txt
Parent: C:\\path\\to\\nowhere
Root: C:\\
******************
toString: PathInfo.java
Exists: true
RegularFile: true
Directory: false
Absolute: false
FileName: PathInfo.java
Parent: null
Root: null
******************
toString: C:\\Users\\Bruce\\Documents\\GitHub\\onjava\\
ExtractedExamples\\files\\PathInfo.java
Exists: true
RegularFile: true
Directory: false
Absolute: true
FileName: PathInfo.java
Parent: C:\\Users\\Bruce\\Documents\\GitHub\\onjava\\
ExtractedExamples\\files
Root: C:\\
******************
toString: C:\\Users\\Bruce\\Documents\\GitHub\\onjava\\
ExtractedExamples\\files
Exists: true
RegularFile: false
Directory: true
Absolute: true
FileName: files
Parent: C:\\Users\\Bruce\\Documents\\GitHub\\onjava\\
ExtractedExamples
Root: C:\\
******************
toString: C:\\Users\\Bruce\\Documents\\GitHub\\onjava\\
ExtractedExamples\\files\\PathInfo.java
Exists: true
RegularFile: true
Directory: false
Absolute: true
FileName: PathInfo.java
Parent: C:\\Users\\Bruce\\Documents\\GitHub\\onjava\\
ExtractedExamples\\files
Root: C:\\
******************
URI: file:///C:/Users/Bruce/Documents/GitHub/onjava/
ExtractedExamples/files/PathInfo.java
true
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u5DF2\u7ECF\u5728\u8FD9\u4E00\u7AE0\u7B2C\u4E00\u4E2A\u7A0B\u5E8F\u7684 <strong>main()</strong> \u65B9\u6CD5\u6DFB\u52A0\u4E86\u7B2C\u4E00\u884C\u7528\u4E8E\u5C55\u793A\u64CD\u4F5C\u7CFB\u7EDF\u7684\u540D\u79F0\uFF0C\u56E0\u6B64\u4F60\u53EF\u4EE5\u770B\u5230\u4E0D\u540C\u64CD\u4F5C\u7CFB\u7EDF\u4E4B\u95F4\u5B58\u5728\u54EA\u4E9B\u5DEE\u5F02\u3002\u7406\u60F3\u60C5\u51B5\u4E0B\uFF0C\u5DEE\u522B\u4F1A\u76F8\u5BF9\u8F83\u5C0F\uFF0C\u5E76\u4E14\u4F7F\u7528 <strong>/</strong> \u6216\u8005 <strong>\\</strong> \u8DEF\u5F84\u5206\u9694\u7B26\u8FDB\u884C\u5206\u9694\u3002\u4F60\u53EF\u4EE5\u770B\u5230\u6211\u8FD0\u884C\u5728Windows 10 \u4E0A\u7684\u7A0B\u5E8F\u8F93\u51FA\u3002</p><p>\u5F53 <strong>toString()</strong> \u65B9\u6CD5\u751F\u6210\u5B8C\u6574\u5F62\u5F0F\u7684\u8DEF\u5F84\uFF0C\u4F60\u53EF\u4EE5\u770B\u5230 <strong>getFileName()</strong> \u65B9\u6CD5\u603B\u662F\u8FD4\u56DE\u5F53\u524D\u6587\u4EF6\u540D\u3002 \u901A\u8FC7\u4F7F\u7528 <strong>Files</strong> \u5DE5\u5177\u7C7B(\u6211\u4EEC\u63A5\u4E0B\u6765\u5C06\u4F1A\u66F4\u591A\u5730\u4F7F\u7528\u5B83)\uFF0C\u53EF\u4EE5\u6D4B\u8BD5\u4E00\u4E2A\u6587\u4EF6\u662F\u5426\u5B58\u5728\uFF0C\u6D4B\u8BD5\u662F\u5426\u662F\u4E00\u4E2A&quot;\u666E\u901A&quot;\u6587\u4EF6\u8FD8\u662F\u4E00\u4E2A\u76EE\u5F55\u7B49\u7B49\u3002&quot;Nofile.txt&quot;\u8FD9\u4E2A\u793A\u4F8B\u5C55\u793A\u6211\u4EEC\u63CF\u8FF0\u7684\u6587\u4EF6\u53EF\u80FD\u5E76\u4E0D\u5728\u6307\u5B9A\u7684\u4F4D\u7F6E\uFF1B\u8FD9\u6837\u53EF\u4EE5\u5141\u8BB8\u4F60\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u8DEF\u5F84\u3002&quot;PathInfo.java&quot;\u5B58\u5728\u4E8E\u5F53\u524D\u76EE\u5F55\u4E2D\uFF0C\u6700\u521D\u5B83\u53EA\u662F\u6CA1\u6709\u8DEF\u5F84\u7684\u6587\u4EF6\u540D\uFF0C\u4F46\u5B83\u4ECD\u7136\u88AB\u68C0\u6D4B\u4E3A&quot;\u5B58\u5728&quot;\u3002\u4E00\u65E6\u6211\u4EEC\u5C06\u5176\u8F6C\u6362\u4E3A\u7EDD\u5BF9\u8DEF\u5F84\uFF0C\u6211\u4EEC\u5C06\u4F1A\u5F97\u5230\u4E00\u4E2A\u4ECE&quot;C:&quot;\u76D8(\u56E0\u4E3A\u6211\u4EEC\u662F\u5728Windows\u673A\u5668\u4E0B\u8FDB\u884C\u6D4B\u8BD5)\u5F00\u59CB\u7684\u5B8C\u6574\u8DEF\u5F84\uFF0C\u73B0\u5728\u5B83\u4E5F\u62E5\u6709\u4E00\u4E2A\u7236\u8DEF\u5F84\u3002\u201C\u771F\u5B9E\u201D\u8DEF\u5F84\u7684\u5B9A\u4E49\u5728\u6587\u6863\u4E2D\u6709\u70B9\u6A21\u7CCA\uFF0C\u56E0\u4E3A\u5B83\u53D6\u51B3\u4E8E\u5177\u4F53\u7684\u6587\u4EF6\u7CFB\u7EDF\u3002\u4F8B\u5982\uFF0C\u5982\u679C\u6587\u4EF6\u540D\u4E0D\u533A\u5206\u5927\u5C0F\u5199\uFF0C\u5373\u4F7F\u8DEF\u5F84\u7531\u4E8E\u5927\u5C0F\u5199\u7684\u7F18\u6545\u800C\u4E0D\u662F\u5B8C\u5168\u76F8\u540C\uFF0C\u4E5F\u53EF\u80FD\u5F97\u5230\u80AF\u5B9A\u7684\u5339\u914D\u7ED3\u679C\u3002\u5728\u8FD9\u6837\u7684\u5E73\u53F0\u4E0A\uFF0C<strong>toRealPath()</strong> \u5C06\u8FD4\u56DE\u5B9E\u9645\u60C5\u51B5\u4E0B\u7684 <strong>Path</strong>\uFF0C\u5E76\u4E14\u8FD8\u4F1A\u5220\u9664\u4EFB\u4F55\u5197\u4F59\u5143\u7D20\u3002</p><p>\u8FD9\u91CC\u4F60\u4F1A\u770B\u5230 <strong>URI</strong> \u770B\u8D77\u6765\u53EA\u80FD\u7528\u4E8E\u63CF\u8FF0\u6587\u4EF6\uFF0C\u5B9E\u9645\u4E0A <strong>URI</strong> \u53EF\u4EE5\u7528\u4E8E\u63CF\u8FF0\u66F4\u591A\u7684\u4E1C\u897F\uFF1B\u901A\u8FC7 <a href="https://en.wikipedia.org/wiki/Uniform_Resource_Identifier" target="_blank" rel="noopener noreferrer">\u7EF4\u57FA\u767E\u79D1</a> \u53EF\u4EE5\u4E86\u89E3\u66F4\u591A\u7EC6\u8282\u3002\u73B0\u5728\u6211\u4EEC\u6210\u529F\u5730\u5C06 <strong>URI</strong> \u8F6C\u4E3A\u4E00\u4E2A <strong>Path</strong> \u5BF9\u8C61\u3002</p><p>\u6700\u540E\uFF0C\u4F60\u4F1A\u5728 <strong>Path</strong> \u4E2D\u770B\u5230\u4E00\u4E9B\u6709\u70B9\u6B3A\u9A97\u7684\u4E1C\u897F\uFF0C\u8FD9\u5C31\u662F\u8C03\u7528 <strong>toFile()</strong> \u65B9\u6CD5\u4F1A\u751F\u6210\u4E00\u4E2A <strong>File</strong> \u5BF9\u8C61\u3002\u542C\u8D77\u6765\u4F3C\u4E4E\u53EF\u4EE5\u5F97\u5230\u4E00\u4E2A\u7C7B\u4F3C\u6587\u4EF6\u7684\u4E1C\u897F(\u6BD5\u7ADF\u88AB\u79F0\u4E3A <strong>File</strong> )\uFF0C\u4F46\u662F\u8FD9\u4E2A\u65B9\u6CD5\u7684\u5B58\u5728\u4EC5\u4EC5\u662F\u4E3A\u4E86\u5411\u540E\u517C\u5BB9\u3002\u867D\u7136\u770B\u4E0A\u53BB\u5E94\u8BE5\u88AB\u79F0\u4E3A&quot;\u8DEF\u5F84&quot;\uFF0C\u5B9E\u9645\u4E0A\u5374\u5E94\u8BE5\u8868\u793A\u76EE\u5F55\u6216\u8005\u6587\u4EF6\u672C\u8EAB\u3002\u8FD9\u662F\u4E2A\u975E\u5E38\u8349\u7387\u5E76\u4E14\u4EE4\u4EBA\u56F0\u60D1\u7684\u547D\u540D\uFF0C\u4F46\u662F\u7531\u4E8E <strong>java.nio.file</strong> \u7684\u5B58\u5728\u6211\u4EEC\u53EF\u4EE5\u5B89\u5168\u5730\u5FFD\u7565\u5B83\u7684\u5B58\u5728\u3002</p><h3 id="\u9009\u53D6\u8DEF\u5F84\u90E8\u5206\u7247\u6BB5" tabindex="-1"><a class="header-anchor" href="#\u9009\u53D6\u8DEF\u5F84\u90E8\u5206\u7247\u6BB5" aria-hidden="true">#</a> \u9009\u53D6\u8DEF\u5F84\u90E8\u5206\u7247\u6BB5</h3><p><strong>Path</strong> \u5BF9\u8C61\u53EF\u4EE5\u975E\u5E38\u5BB9\u6613\u5730\u751F\u6210\u8DEF\u5F84\u7684\u67D0\u4E00\u90E8\u5206\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// files/PartsOfPaths.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PartsOfPaths</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;os.name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Path</span> p <span class="token operator">=</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;PartsOfPaths.java&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> p<span class="token punctuation">.</span><span class="token function">getNameCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;ends with &#39;.java&#39;: &quot;</span> <span class="token operator">+</span>
        p<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&quot;.java&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Path</span> pp <span class="token operator">:</span> p<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>pp <span class="token operator">+</span> <span class="token string">&quot;: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span>pp<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; : &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span>pp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Starts with &quot;</span> <span class="token operator">+</span> p<span class="token punctuation">.</span><span class="token function">getRoot</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> p<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span><span class="token function">getRoot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">/* \u8F93\u51FA:
Windows 10
Users
Bruce
Documents
GitHub
on-java
ExtractedExamples
files
PartsOfPaths.java
ends with &#39;.java&#39;: false
Users: false : false
Bruce: false : false
Documents: false : false
GitHub: false : false
on-java: false : false
ExtractedExamples: false : false
files: false : false
PartsOfPaths.java: false : true
Starts with C:\\ true
*/</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u901A\u8FC7 <strong>getName()</strong> \u6765\u7D22\u5F15 <strong>Path</strong> \u7684\u5404\u4E2A\u90E8\u5206\uFF0C\u76F4\u5230\u8FBE\u5230\u4E0A\u9650 <strong>getNameCount()</strong>\u3002<strong>Path</strong> \u4E5F\u5B9E\u73B0\u4E86 <strong>Iterable</strong> \u63A5\u53E3\uFF0C\u56E0\u6B64\u6211\u4EEC\u4E5F\u53EF\u4EE5\u901A\u8FC7\u589E\u5F3A\u7684 for-each \u8FDB\u884C\u904D\u5386\u3002\u8BF7\u6CE8\u610F\uFF0C\u5373\u4F7F\u8DEF\u5F84\u4EE5 <strong>.java</strong> \u7ED3\u5C3E\uFF0C\u4F7F\u7528 <strong>endsWith()</strong> \u65B9\u6CD5\u4E5F\u4F1A\u8FD4\u56DE <strong>false</strong>\u3002\u8FD9\u662F\u56E0\u4E3A\u4F7F\u7528 <strong>endsWith()</strong> \u6BD4\u8F83\u7684\u662F\u6574\u4E2A\u8DEF\u5F84\u90E8\u5206\uFF0C\u800C\u4E0D\u4F1A\u5305\u542B\u6587\u4EF6\u8DEF\u5F84\u7684\u540E\u7F00\u3002\u901A\u8FC7\u4F7F\u7528 <strong>startsWith()</strong> \u548C <strong>endsWith()</strong> \u4E5F\u53EF\u4EE5\u5B8C\u6210\u8DEF\u5F84\u7684\u904D\u5386\u3002\u4F46\u662F\u6211\u4EEC\u53EF\u4EE5\u770B\u5230\uFF0C\u904D\u5386 <strong>Path</strong> \u5BF9\u8C61\u5E76\u4E0D\u5305\u542B\u6839\u8DEF\u5F84\uFF0C\u53EA\u6709\u4F7F\u7528 <strong>startsWith()</strong> \u68C0\u6D4B\u6839\u8DEF\u5F84\u65F6\u624D\u4F1A\u8FD4\u56DE <strong>true</strong>\u3002</p><h3 id="\u8DEF\u5F84\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#\u8DEF\u5F84\u5206\u6790" aria-hidden="true">#</a> \u8DEF\u5F84\u5206\u6790</h3><p><strong>Files</strong> \u5DE5\u5177\u7C7B\u5305\u542B\u4E00\u7CFB\u5217\u5B8C\u6574\u7684\u65B9\u6CD5\u7528\u4E8E\u83B7\u5F97 <strong>Path</strong> \u76F8\u5173\u7684\u4FE1\u606F\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// files/PathAnalysis.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PathAnalysis</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">say</span><span class="token punctuation">(</span><span class="token class-name">String</span> id<span class="token punctuation">,</span> <span class="token class-name">Object</span> result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>id <span class="token operator">+</span> <span class="token string">&quot;: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;os.name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Path</span> p <span class="token operator">=</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;PathAnalysis.java&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">say</span><span class="token punctuation">(</span><span class="token string">&quot;Exists&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">say</span><span class="token punctuation">(</span><span class="token string">&quot;Directory&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">isDirectory</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">say</span><span class="token punctuation">(</span><span class="token string">&quot;Executable&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">isExecutable</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">say</span><span class="token punctuation">(</span><span class="token string">&quot;Readable&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">isReadable</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">say</span><span class="token punctuation">(</span><span class="token string">&quot;RegularFile&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">isRegularFile</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">say</span><span class="token punctuation">(</span><span class="token string">&quot;Writable&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">isWritable</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">say</span><span class="token punctuation">(</span><span class="token string">&quot;notExists&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">notExists</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">say</span><span class="token punctuation">(</span><span class="token string">&quot;Hidden&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">isHidden</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">say</span><span class="token punctuation">(</span><span class="token string">&quot;size&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">say</span><span class="token punctuation">(</span><span class="token string">&quot;FileStore&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">getFileStore</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">say</span><span class="token punctuation">(</span><span class="token string">&quot;LastModified: &quot;</span><span class="token punctuation">,</span> <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">getLastModifiedTime</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">say</span><span class="token punctuation">(</span><span class="token string">&quot;Owner&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">getOwner</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">say</span><span class="token punctuation">(</span><span class="token string">&quot;ContentType&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">probeContentType</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">say</span><span class="token punctuation">(</span><span class="token string">&quot;SymbolicLink&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">isSymbolicLink</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">isSymbolicLink</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token function">say</span><span class="token punctuation">(</span><span class="token string">&quot;SymbolicLink&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">readSymbolicLink</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">FileSystems</span><span class="token punctuation">.</span><span class="token function">getDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">supportedFileAttributeViews</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;posix&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token function">say</span><span class="token punctuation">(</span><span class="token string">&quot;PosixFilePermissions&quot;</span><span class="token punctuation">,</span>
        <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">getPosixFilePermissions</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">/* \u8F93\u51FA:
Windows 10
Exists: true
Directory: false
Executable: true
Readable: true
RegularFile: true
Writable: true
notExists: false
Hidden: false
size: 1631
FileStore: SSD (C:)
LastModified: : 2017-05-09T12:07:00.428366Z
Owner: MINDVIEWTOSHIBA\\Bruce (User)
ContentType: null
SymbolicLink: false
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u8C03\u7528\u6700\u540E\u4E00\u4E2A\u6D4B\u8BD5\u65B9\u6CD5 <strong>getPosixFilePermissions()</strong> \u4E4B\u524D\u6211\u4EEC\u9700\u8981\u786E\u8BA4\u4E00\u4E0B\u5F53\u524D\u6587\u4EF6\u7CFB\u7EDF\u662F\u5426\u652F\u6301 <strong>Posix</strong> \u63A5\u53E3\uFF0C\u5426\u5219\u4F1A\u629B\u51FA\u8FD0\u884C\u65F6\u5F02\u5E38\u3002</p><h3 id="paths\u7684\u589E\u51CF\u4FEE\u6539" tabindex="-1"><a class="header-anchor" href="#paths\u7684\u589E\u51CF\u4FEE\u6539" aria-hidden="true">#</a> <strong>Paths</strong>\u7684\u589E\u51CF\u4FEE\u6539</h3><p>\u6211\u4EEC\u5FC5\u987B\u80FD\u901A\u8FC7\u5BF9 <strong>Path</strong> \u5BF9\u8C61\u589E\u52A0\u6216\u8005\u5220\u9664\u4E00\u90E8\u5206\u6765\u6784\u9020\u4E00\u4E2A\u65B0\u7684 <strong>Path</strong> \u5BF9\u8C61\u3002\u6211\u4EEC\u4F7F\u7528 <strong>relativize()</strong> \u79FB\u9664 <strong>Path</strong> \u7684\u6839\u8DEF\u5F84\uFF0C\u4F7F\u7528 <strong>resolve()</strong> \u6DFB\u52A0 <strong>Path</strong> \u7684\u5C3E\u8DEF\u5F84(\u4E0D\u4E00\u5B9A\u662F\u201C\u53EF\u53D1\u73B0\u201D\u7684\u540D\u79F0)\u3002</p><p>\u5BF9\u4E8E\u4E0B\u9762\u4EE3\u7801\u4E2D\u7684\u793A\u4F8B\uFF0C\u6211\u4F7F\u7528 <strong>relativize()</strong> \u65B9\u6CD5\u4ECE\u6240\u6709\u7684\u8F93\u51FA\u4E2D\u79FB\u9664\u6839\u8DEF\u5F84\uFF0C\u90E8\u5206\u539F\u56E0\u662F\u4E3A\u4E86\u793A\u8303\uFF0C\u90E8\u5206\u539F\u56E0\u662F\u4E3A\u4E86\u7B80\u5316\u8F93\u51FA\u7ED3\u679C\uFF0C\u8FD9\u8BF4\u660E\u4F60\u53EF\u4EE5\u4F7F\u7528\u8BE5\u65B9\u6CD5\u5C06\u7EDD\u5BF9\u8DEF\u5F84\u8F6C\u4E3A\u76F8\u5BF9\u8DEF\u5F84\u3002 \u8FD9\u4E2A\u7248\u672C\u7684\u4EE3\u7801\u4E2D\u5305\u542B <strong>id</strong>\uFF0C\u4EE5\u4FBF\u4E8E\u8DDF\u8E2A\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// files/AddAndSubtractPaths.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AddAndSubtractPaths</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token class-name">Path</span> base <span class="token operator">=</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;..&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;..&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;..&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">normalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">,</span> <span class="token class-name">Path</span> result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">isAbsolute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;(&quot;</span> <span class="token operator">+</span> id <span class="token operator">+</span> <span class="token string">&quot;)r &quot;</span> <span class="token operator">+</span> base<span class="token punctuation">.</span><span class="token function">relativize</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;(&quot;</span> <span class="token operator">+</span> id <span class="token operator">+</span> <span class="token string">&quot;) &quot;</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;RealPath: &quot;</span> <span class="token operator">+</span> result<span class="token punctuation">.</span><span class="token function">toRealPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;os.name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>base<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Path</span> p <span class="token operator">=</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;AddAndSubtractPaths.java&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">show</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Path</span> convoluted <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">getParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;strings&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;..&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span><span class="token function">getParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFileName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">show</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> convoluted<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">show</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> convoluted<span class="token punctuation">.</span><span class="token function">normalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Path</span> p2 <span class="token operator">=</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;..&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;..&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">show</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> p2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">show</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> p2<span class="token punctuation">.</span><span class="token function">normalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">show</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> p2<span class="token punctuation">.</span><span class="token function">toAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">normalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Path</span> p3 <span class="token operator">=</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Path</span> p4 <span class="token operator">=</span> p3<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>p2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">show</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> p4<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">show</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> p4<span class="token punctuation">.</span><span class="token function">normalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Path</span> p5 <span class="token operator">=</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">show</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> p5<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">show</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> p5<span class="token punctuation">.</span><span class="token function">resolveSibling</span><span class="token punctuation">(</span><span class="token string">&quot;strings&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">show</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;nonexistent&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">/* \u8F93\u51FA:
Windows 10
C:\\Users\\Bruce\\Documents\\GitHub
(1)r onjava\\
ExtractedExamples\\files\\AddAndSubtractPaths.java
RealPath: C:\\Users\\Bruce\\Documents\\GitHub\\onjava\\
ExtractedExamples\\files\\AddAndSubtractPaths.java
(2)r on-java\\ExtractedExamples\\strings\\..\\files
RealPath: C:\\Users\\Bruce\\Documents\\GitHub\\onjava\\
ExtractedExamples\\files
(3)r on-java\\ExtractedExamples\\files
RealPath: C:\\Users\\Bruce\\Documents\\GitHub\\onjava\\
ExtractedExamples\\files
(4) ..\\..
RealPath: C:\\Users\\Bruce\\Documents\\GitHub\\on-java
(5) ..\\..
RealPath: C:\\Users\\Bruce\\Documents\\GitHub\\on-java
(6)r on-java
RealPath: C:\\Users\\Bruce\\Documents\\GitHub\\on-java
(7)r on-java\\ExtractedExamples\\files\\.\\..\\..
RealPath: C:\\Users\\Bruce\\Documents\\GitHub\\on-java
(8)r on-java
RealPath: C:\\Users\\Bruce\\Documents\\GitHub\\on-java
(9)r on-java\\ExtractedExamples\\files
RealPath: C:\\Users\\Bruce\\Documents\\GitHub\\onjava\\
ExtractedExamples\\files
(10)r on-java\\ExtractedExamples\\strings
RealPath: C:\\Users\\Bruce\\Documents\\GitHub\\onjava\\
ExtractedExamples\\strings
(11) nonexistent
java.nio.file.NoSuchFileException:
C:\\Users\\Bruce\\Documents\\GitHub\\onjava\\
ExtractedExamples\\files\\nonexistent
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u8FD8\u4E3A <strong>toRealPath()</strong> \u6DFB\u52A0\u4E86\u66F4\u591A\u7684\u6D4B\u8BD5\uFF0C\u8FD9\u662F\u4E3A\u4E86\u6269\u5C55\u548C\u89C4\u5219\u5316\uFF0C\u9632\u6B62\u8DEF\u5F84\u4E0D\u5B58\u5728\u65F6\u629B\u51FA\u8FD0\u884C\u65F6\u5F02\u5E38\u3002</p><h2 id="\u76EE\u5F55" tabindex="-1"><a class="header-anchor" href="#\u76EE\u5F55" aria-hidden="true">#</a> \u76EE\u5F55</h2><p><strong>Files</strong> \u5DE5\u5177\u7C7B\u5305\u542B\u5927\u90E8\u5206\u6211\u4EEC\u9700\u8981\u7684\u76EE\u5F55\u64CD\u4F5C\u548C\u6587\u4EF6\u64CD\u4F5C\u65B9\u6CD5\u3002\u51FA\u4E8E\u67D0\u79CD\u539F\u56E0\uFF0C\u5B83\u4EEC\u6CA1\u6709\u5305\u542B\u5220\u9664\u76EE\u5F55\u6811\u76F8\u5173\u7684\u65B9\u6CD5\uFF0C\u56E0\u6B64\u6211\u4EEC\u5C06\u5B9E\u73B0\u5E76\u5C06\u5176\u6DFB\u52A0\u5230 <strong>onjava</strong> \u5E93\u4E2D\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// onjava/RmDir.java</span>
<span class="token keyword">package</span> <span class="token namespace">onjava</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span>attribute<span class="token punctuation">.</span></span><span class="token class-name">BasicFileAttributes</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RmDir</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">rmdir</span><span class="token punctuation">(</span><span class="token class-name">Path</span> dir<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">walkFileTree</span><span class="token punctuation">(</span>dir<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">SimpleFileVisitor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Path</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">FileVisitResult</span> <span class="token function">visitFile</span><span class="token punctuation">(</span><span class="token class-name">Path</span> file<span class="token punctuation">,</span> <span class="token class-name">BasicFileAttributes</span> attrs<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
                <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token class-name">FileVisitResult</span><span class="token punctuation">.</span>CONTINUE<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">FileVisitResult</span> <span class="token function">postVisitDirectory</span><span class="token punctuation">(</span><span class="token class-name">Path</span> dir<span class="token punctuation">,</span> <span class="token class-name">IOException</span> exc<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
                <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>dir<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token class-name">FileVisitResult</span><span class="token punctuation">.</span>CONTINUE<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5220\u9664\u76EE\u5F55\u6811\u7684\u65B9\u6CD5\u5B9E\u73B0\u4F9D\u8D56\u4E8E <strong>Files.walkFileTree()</strong>\uFF0C&quot;walking&quot; \u76EE\u5F55\u6811\u610F\u5473\u7740\u904D\u5386\u6BCF\u4E2A\u5B50\u76EE\u5F55\u548C\u6587\u4EF6\u3002<em>Visitor</em> \u8BBE\u8BA1\u6A21\u5F0F\u63D0\u4F9B\u4E86\u4E00\u79CD\u6807\u51C6\u673A\u5236\u6765\u8BBF\u95EE\u96C6\u5408\u4E2D\u7684\u6BCF\u4E2A\u5BF9\u8C61\uFF0C\u7136\u540E\u4F60\u9700\u8981\u63D0\u4F9B\u5728\u6BCF\u4E2A\u5BF9\u8C61\u4E0A\u6267\u884C\u7684\u64CD\u4F5C\u3002 \u6B64\u64CD\u4F5C\u7684\u5B9A\u4E49\u53D6\u51B3\u4E8E\u5B9E\u73B0\u7684 <strong>FileVisitor</strong> \u7684\u56DB\u4E2A\u62BD\u8C61\u65B9\u6CD5\uFF0C\u5305\u62EC\uFF1A</p><ol><li><strong>preVisitDirectory()</strong>\uFF1A\u5728\u8BBF\u95EE\u76EE\u5F55\u4E2D\u6761\u76EE\u4E4B\u524D\u5728\u76EE\u5F55\u4E0A\u8FD0\u884C\u3002</li><li><strong>visitFile()</strong>\uFF1A\u8FD0\u884C\u76EE\u5F55\u4E2D\u7684\u6BCF\u4E00\u4E2A\u6587\u4EF6\u3002</li><li><strong>visitFileFailed()</strong>\uFF1A\u8C03\u7528\u65E0\u6CD5\u8BBF\u95EE\u7684\u6587\u4EF6\u3002</li><li><strong>postVisitDirectory()</strong>\uFF1A\u5728\u8BBF\u95EE\u76EE\u5F55\u4E2D\u6761\u76EE\u4E4B\u540E\u5728\u76EE\u5F55\u4E0A\u8FD0\u884C\uFF0C\u5305\u62EC\u6240\u6709\u7684\u5B50\u76EE\u5F55\u3002</li></ol><p>\u4E3A\u4E86\u7B80\u5316\uFF0C<strong>java.nio.file.SimpleFileVisitor</strong> \u63D0\u4F9B\u4E86\u6240\u6709\u65B9\u6CD5\u7684\u9ED8\u8BA4\u5B9E\u73B0\u3002\u8FD9\u6837\uFF0C\u5728\u6211\u4EEC\u7684\u533F\u540D\u5185\u90E8\u7C7B\u4E2D\uFF0C\u6211\u4EEC\u53EA\u9700\u8981\u91CD\u5199\u975E\u6807\u51C6\u884C\u4E3A\u7684\u65B9\u6CD5\uFF1A<strong>visitFile()</strong> \u548C <strong>postVisitDirectory()</strong> \u5B9E\u73B0\u5220\u9664\u6587\u4EF6\u548C\u5220\u9664\u76EE\u5F55\u3002\u4E24\u8005\u90FD\u5E94\u8BE5\u8FD4\u56DE\u6807\u5FD7\u4F4D\u51B3\u5B9A\u662F\u5426\u7EE7\u7EED\u8BBF\u95EE(\u8FD9\u6837\u5C31\u53EF\u4EE5\u7EE7\u7EED\u8BBF\u95EE\uFF0C\u76F4\u5230\u627E\u5230\u6240\u9700\u8981\u7684)\u3002 \u4F5C\u4E3A\u63A2\u7D22\u76EE\u5F55\u64CD\u4F5C\u7684\u4E00\u90E8\u5206\uFF0C\u73B0\u5728\u6211\u4EEC\u53EF\u4EE5\u6709\u6761\u4EF6\u5730\u5220\u9664\u5DF2\u5B58\u5728\u7684\u76EE\u5F55\u3002\u5728\u4EE5\u4E0B\u4F8B\u5B50\u4E2D\uFF0C<strong>makeVariant()</strong> \u63A5\u53D7\u57FA\u672C\u76EE\u5F55\u6D4B\u8BD5\uFF0C\u5E76\u901A\u8FC7\u65CB\u8F6C\u90E8\u4EF6\u5217\u8868\u751F\u6210\u4E0D\u540C\u7684\u5B50\u76EE\u5F55\u8DEF\u5F84\u3002\u8FD9\u4E9B\u65CB\u8F6C\u4E0E\u8DEF\u5F84\u5206\u9694\u7B26 <strong>sep</strong> \u4F7F\u7528 <strong>String.join()</strong> \u8D34\u5728\u4E00\u8D77\uFF0C\u7136\u540E\u8FD4\u56DE\u4E00\u4E2A <strong>Path</strong> \u5BF9\u8C61\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// files/Directories.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">onjava<span class="token punctuation">.</span></span><span class="token class-name">RmDir</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Directories</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token class-name">Path</span> test <span class="token operator">=</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token class-name">String</span> sep <span class="token operator">=</span> <span class="token class-name">FileSystems</span><span class="token punctuation">.</span><span class="token function">getDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSeparator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> parts <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;baz&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;bag&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token keyword">static</span> <span class="token class-name">Path</span> <span class="token function">makeVariant</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span>parts<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>sep<span class="token punctuation">,</span> parts<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">refreshTestDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span>test<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token class-name">RmDir</span><span class="token punctuation">.</span><span class="token function">rmdir</span><span class="token punctuation">(</span>test<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span>test<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">createDirectory</span><span class="token punctuation">(</span>test<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token function">refreshTestDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">createFile</span><span class="token punctuation">(</span>test<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;Hello.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Path</span> variant <span class="token operator">=</span> <span class="token function">makeVariant</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Throws exception (too many levels):</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">createDirectory</span><span class="token punctuation">(</span>variant<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Nope, that doesn&#39;t work.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">populateTestDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Path</span> tempdir <span class="token operator">=</span> <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">createTempDirectory</span><span class="token punctuation">(</span>test<span class="token punctuation">,</span> <span class="token string">&quot;DIR_&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">createTempFile</span><span class="token punctuation">(</span>tempdir<span class="token punctuation">,</span> <span class="token string">&quot;pre&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;.non&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">newDirectoryStream</span><span class="token punctuation">(</span>test<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;*********&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">walk</span><span class="token punctuation">(</span>test<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">populateTestDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span>  <span class="token punctuation">{</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> parts<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Path</span> variant <span class="token operator">=</span> <span class="token function">makeVariant</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span>variant<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">createDirectories</span><span class="token punctuation">(</span>variant<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;Directories.java&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    variant<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;File.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">createTempFile</span><span class="token punctuation">(</span>variant<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">/* \u8F93\u51FA:
Nope, that doesn&#39;t work.
test\\bag
test\\bar
test\\baz
test\\DIR_5142667942049986036
test\\foo
test\\Hello.txt
*********
test
test\\bag
test\\bag\\foo
test\\bag\\foo\\bar
test\\bag\\foo\\bar\\baz
test\\bag\\foo\\bar\\baz\\8279660869874696036.tmp
test\\bag\\foo\\bar\\baz\\File.txt
test\\bar
test\\bar\\baz
test\\bar\\baz\\bag
test\\bar\\baz\\bag\\foo
test\\bar\\baz\\bag\\foo\\1274043134240426261.tmp
test\\bar\\baz\\bag\\foo\\File.txt
test\\baz
test\\baz\\bag
test\\baz\\bag\\foo
test\\baz\\bag\\foo\\bar
test\\baz\\bag\\foo\\bar\\6130572530014544105.tmp
test\\baz\\bag\\foo\\bar\\File.txt
test\\DIR_5142667942049986036
test\\DIR_5142667942049986036\\pre7704286843227113253.non
test\\foo
test\\foo\\bar
test\\foo\\bar\\baz
test\\foo\\bar\\baz\\bag
test\\foo\\bar\\baz\\bag\\5412864507741775436.tmp
test\\foo\\bar\\baz\\bag\\File.txt
test\\Hello.txt
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9996\u5148\uFF0C<strong>refreshTestDir()</strong> \u7528\u4E8E\u68C0\u6D4B <strong>test</strong> \u76EE\u5F55\u662F\u5426\u5DF2\u7ECF\u5B58\u5728\u3002\u82E5\u5B58\u5728\uFF0C\u5219\u4F7F\u7528\u6211\u4EEC\u65B0\u5DE5\u5177\u7C7B <strong>rmdir()</strong> \u5220\u9664\u5176\u6574\u4E2A\u76EE\u5F55\u3002\u68C0\u67E5\u662F\u5426 <strong>exists</strong> \u662F\u591A\u4F59\u7684\uFF0C\u4F46\u6211\u60F3\u8BF4\u660E\u4E00\u70B9\uFF0C\u56E0\u4E3A\u5982\u679C\u4F60\u5BF9\u4E8E\u5DF2\u7ECF\u5B58\u5728\u7684\u76EE\u5F55\u8C03\u7528 <strong>createDirectory()</strong> \u5C06\u4F1A\u629B\u51FA\u5F02\u5E38\u3002<strong>createFile()</strong> \u4F7F\u7528\u53C2\u6570 <strong>Path</strong> \u521B\u5EFA\u4E00\u4E2A\u7A7A\u6587\u4EF6; <strong>resolve()</strong> \u5C06\u6587\u4EF6\u540D\u6DFB\u52A0\u5230 <strong>test Path</strong> \u7684\u672B\u5C3E\u3002</p><p>\u6211\u4EEC\u5C1D\u8BD5\u4F7F\u7528 <strong>createDirectory()</strong> \u6765\u521B\u5EFA\u591A\u7EA7\u8DEF\u5F84\uFF0C\u4F46\u662F\u8FD9\u6837\u4F1A\u629B\u51FA\u5F02\u5E38\uFF0C\u56E0\u4E3A\u8FD9\u4E2A\u65B9\u6CD5\u53EA\u80FD\u521B\u5EFA\u5355\u7EA7\u8DEF\u5F84\u3002\u6211\u5DF2\u7ECF\u5C06 <strong>populateTestDir()</strong> \u4F5C\u4E3A\u4E00\u4E2A\u5355\u72EC\u7684\u65B9\u6CD5\uFF0C\u56E0\u4E3A\u5B83\u5C06\u5728\u540E\u9762\u7684\u4F8B\u5B50\u4E2D\u88AB\u91CD\u7528\u3002\u5BF9\u4E8E\u6BCF\u4E00\u4E2A\u53D8\u91CF <strong>variant</strong>\uFF0C\u6211\u4EEC\u90FD\u80FD\u4F7F\u7528 <strong>createDirectories()</strong> \u521B\u5EFA\u5B8C\u6574\u7684\u76EE\u5F55\u8DEF\u5F84\uFF0C\u7136\u540E\u4F7F\u7528\u6B64\u6587\u4EF6\u7684\u526F\u672C\u4EE5\u4E0D\u540C\u7684\u76EE\u6807\u540D\u79F0\u586B\u5145\u8BE5\u7EC8\u7AEF\u76EE\u5F55\u3002\u7136\u540E\u6211\u4EEC\u4F7F\u7528 <strong>createTempFile()</strong> \u751F\u6210\u4E00\u4E2A\u4E34\u65F6\u6587\u4EF6\u3002</p><p>\u5728\u8C03\u7528 <strong>populateTestDir()</strong> \u4E4B\u540E\uFF0C\u6211\u4EEC\u5728 <strong>test</strong> \u76EE\u5F55\u4E0B\u9762\u521B\u5EFA\u4E00\u4E2A\u4E34\u65F6\u76EE\u5F55\u3002\u8BF7\u6CE8\u610F\uFF0C<strong>createTempDirectory()</strong> \u53EA\u6709\u540D\u79F0\u7684\u524D\u7F00\u9009\u9879\u3002\u4E0E <strong>createTempFile()</strong> \u4E0D\u540C\uFF0C\u6211\u4EEC\u518D\u6B21\u4F7F\u7528\u5B83\u5C06\u4E34\u65F6\u6587\u4EF6\u653E\u5165\u65B0\u7684\u4E34\u65F6\u76EE\u5F55\u4E2D\u3002\u4F60\u53EF\u4EE5\u4ECE\u8F93\u51FA\u4E2D\u770B\u5230\uFF0C\u5982\u679C\u672A\u6307\u5B9A\u540E\u7F00\uFF0C\u5B83\u5C06\u9ED8\u8BA4\u4F7F\u7528&quot;.tmp&quot;\u4F5C\u4E3A\u540E\u7F00\u3002</p><p>\u4E3A\u4E86\u5C55\u793A\u7ED3\u679C\uFF0C\u6211\u4EEC\u9996\u6B21\u4F7F\u7528\u770B\u8D77\u6765\u5F88\u6709\u5E0C\u671B\u7684 <strong>newDirectoryStream()</strong>\uFF0C\u4F46\u4E8B\u5B9E\u8BC1\u660E\u8FD9\u4E2A\u65B9\u6CD5\u53EA\u662F\u8FD4\u56DE <strong>test</strong> \u76EE\u5F55\u5185\u5BB9\u7684 Stream \u6D41\uFF0C\u5E76\u6CA1\u6709\u66F4\u591A\u7684\u5185\u5BB9\u3002\u8981\u83B7\u53D6\u76EE\u5F55\u6811\u7684\u5168\u90E8\u5185\u5BB9\u7684\u6D41\uFF0C\u8BF7\u4F7F\u7528 <strong>Files.walk()</strong>\u3002</p><h2 id="\u6587\u4EF6\u7CFB\u7EDF" tabindex="-1"><a class="header-anchor" href="#\u6587\u4EF6\u7CFB\u7EDF" aria-hidden="true">#</a> \u6587\u4EF6\u7CFB\u7EDF</h2><p>\u4E3A\u4E86\u5B8C\u6574\u8D77\u89C1\uFF0C\u6211\u4EEC\u9700\u8981\u4E00\u79CD\u65B9\u6CD5\u67E5\u627E\u6587\u4EF6\u7CFB\u7EDF\u76F8\u5173\u7684\u5176\u4ED6\u4FE1\u606F\u3002\u5728\u8FD9\u91CC\uFF0C\u6211\u4EEC\u4F7F\u7528\u9759\u6001\u7684 <strong>FileSystems</strong> \u5DE5\u5177\u7C7B\u83B7\u53D6&quot;\u9ED8\u8BA4&quot;\u7684\u6587\u4EF6\u7CFB\u7EDF\uFF0C\u4F46\u4F60\u540C\u6837\u4E5F\u53EF\u4EE5\u5728 <strong>Path</strong> \u5BF9\u8C61\u4E0A\u8C03\u7528 <strong>getFileSystem()</strong> \u4EE5\u83B7\u53D6\u521B\u5EFA\u8BE5 <strong>Path</strong> \u7684\u6587\u4EF6\u7CFB\u7EDF\u3002\u4F60\u53EF\u4EE5\u83B7\u5F97\u7ED9\u5B9A <em>URI</em> \u7684\u6587\u4EF6\u7CFB\u7EDF\uFF0C\u8FD8\u53EF\u4EE5\u6784\u5EFA\u65B0\u7684\u6587\u4EF6\u7CFB\u7EDF(\u5BF9\u4E8E\u652F\u6301\u5B83\u7684\u64CD\u4F5C\u7CFB\u7EDF)\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// files/FileSystemDemo.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FileSystemDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token class-name">String</span> id<span class="token punctuation">,</span> <span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>id <span class="token operator">+</span> <span class="token string">&quot;: &quot;</span> <span class="token operator">+</span> o<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;os.name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">FileSystem</span> fsys <span class="token operator">=</span> <span class="token class-name">FileSystems</span><span class="token punctuation">.</span><span class="token function">getDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">FileStore</span> fs <span class="token operator">:</span> fsys<span class="token punctuation">.</span><span class="token function">getFileStores</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token function">show</span><span class="token punctuation">(</span><span class="token string">&quot;File Store&quot;</span><span class="token punctuation">,</span> fs<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Path</span> rd <span class="token operator">:</span> fsys<span class="token punctuation">.</span><span class="token function">getRootDirectories</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token function">show</span><span class="token punctuation">(</span><span class="token string">&quot;Root Directory&quot;</span><span class="token punctuation">,</span> rd<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">show</span><span class="token punctuation">(</span><span class="token string">&quot;Separator&quot;</span><span class="token punctuation">,</span> fsys<span class="token punctuation">.</span><span class="token function">getSeparator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">show</span><span class="token punctuation">(</span><span class="token string">&quot;UserPrincipalLookupService&quot;</span><span class="token punctuation">,</span>
            fsys<span class="token punctuation">.</span><span class="token function">getUserPrincipalLookupService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">show</span><span class="token punctuation">(</span><span class="token string">&quot;isOpen&quot;</span><span class="token punctuation">,</span> fsys<span class="token punctuation">.</span><span class="token function">isOpen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">show</span><span class="token punctuation">(</span><span class="token string">&quot;isReadOnly&quot;</span><span class="token punctuation">,</span> fsys<span class="token punctuation">.</span><span class="token function">isReadOnly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">show</span><span class="token punctuation">(</span><span class="token string">&quot;FileSystemProvider&quot;</span><span class="token punctuation">,</span> fsys<span class="token punctuation">.</span><span class="token function">provider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">show</span><span class="token punctuation">(</span><span class="token string">&quot;File Attribute Views&quot;</span><span class="token punctuation">,</span>
        fsys<span class="token punctuation">.</span><span class="token function">supportedFileAttributeViews</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">/* \u8F93\u51FA:
Windows 10
File Store: SSD (C:)
Root Directory: C:\\
Root Directory: D:\\
Separator: \\
UserPrincipalLookupService:
sun.nio.fs.WindowsFileSystem$LookupService$1@15db9742
isOpen: true
isReadOnly: false
FileSystemProvider:
sun.nio.fs.WindowsFileSystemProvider@6d06d69c
File Attribute Views: [owner, dos, acl, basic, user]
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E00\u4E2A <strong>FileSystem</strong> \u5BF9\u8C61\u4E5F\u80FD\u751F\u6210 <strong>WatchService</strong> \u548C <strong>PathMatcher</strong> \u5BF9\u8C61\uFF0C\u5C06\u4F1A\u5728\u63A5\u4E0B\u6765\u4E24\u7AE0\u4E2D\u8BE6\u7EC6\u8BB2\u89E3\u3002</p><h2 id="\u8DEF\u5F84\u76D1\u542C" tabindex="-1"><a class="header-anchor" href="#\u8DEF\u5F84\u76D1\u542C" aria-hidden="true">#</a> \u8DEF\u5F84\u76D1\u542C</h2><p>\u901A\u8FC7 <strong>WatchService</strong> \u53EF\u4EE5\u8BBE\u7F6E\u4E00\u4E2A\u8FDB\u7A0B\u5BF9\u76EE\u5F55\u4E2D\u7684\u66F4\u6539\u505A\u51FA\u54CD\u5E94\u3002\u5728\u8FD9\u4E2A\u4F8B\u5B50\u4E2D\uFF0C<strong>delTxtFiles()</strong> \u4F5C\u4E3A\u4E00\u4E2A\u5355\u72EC\u7684\u4EFB\u52A1\u6267\u884C\uFF0C\u8BE5\u4EFB\u52A1\u5C06\u904D\u5386\u6574\u4E2A\u76EE\u5F55\u5E76\u5220\u9664\u4EE5 <strong>.txt</strong> \u7ED3\u5C3E\u7684\u6240\u6709\u6587\u4EF6\uFF0C<strong>WatchService</strong> \u4F1A\u5BF9\u6587\u4EF6\u5220\u9664\u64CD\u4F5C\u505A\u51FA\u53CD\u5E94\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// files/PathWatcher.java</span>
<span class="token comment">// {ExcludeFromGradle}</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token import static"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token class-name">StandardWatchEventKinds</span><span class="token punctuation">.</span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PathWatcher</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token class-name">Path</span> test <span class="token operator">=</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">delTxtFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">walk</span><span class="token punctuation">(</span>test<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>f <span class="token operator">-&gt;</span>
                f<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&quot;.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>f <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;deleting &quot;</span> <span class="token operator">+</span> f<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">Directories</span><span class="token punctuation">.</span><span class="token function">refreshTestDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Directories</span><span class="token punctuation">.</span><span class="token function">populateTestDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">createFile</span><span class="token punctuation">(</span>test<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;Hello.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">WatchService</span> watcher <span class="token operator">=</span> <span class="token class-name">FileSystems</span><span class="token punctuation">.</span><span class="token function">getDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newWatchService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        test<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>watcher<span class="token punctuation">,</span> ENTRY_DELETE<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newSingleThreadScheduledExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">schedule</span><span class="token punctuation">(</span><span class="token class-name">PathWatcher</span><span class="token operator">::</span><span class="token function">delTxtFiles</span><span class="token punctuation">,</span>
        <span class="token number">250</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>MILLISECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">WatchKey</span> key <span class="token operator">=</span> watcher<span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">WatchEvent</span> evt <span class="token operator">:</span> key<span class="token punctuation">.</span><span class="token function">pollEvents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;evt.context(): &quot;</span> <span class="token operator">+</span> evt<span class="token punctuation">.</span><span class="token function">context</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
            <span class="token string">&quot;\\nevt.count(): &quot;</span> <span class="token operator">+</span> evt<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
            <span class="token string">&quot;\\nevt.kind(): &quot;</span> <span class="token operator">+</span> evt<span class="token punctuation">.</span><span class="token function">kind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">/* Output:
deleting test\\bag\\foo\\bar\\baz\\File.txt
deleting test\\bar\\baz\\bag\\foo\\File.txt
deleting test\\baz\\bag\\foo\\bar\\File.txt
deleting test\\foo\\bar\\baz\\bag\\File.txt
deleting test\\Hello.txt
evt.context(): Hello.txt
evt.count(): 1
evt.kind(): ENTRY_DELETE
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>delTxtFiles()</strong> \u4E2D\u7684 <strong>try</strong> \u4EE3\u7801\u5757\u770B\u8D77\u6765\u6709\u4E9B\u591A\u4F59\uFF0C\u56E0\u4E3A\u5B83\u4EEC\u6355\u83B7\u7684\u662F\u540C\u4E00\u79CD\u7C7B\u578B\u7684\u5F02\u5E38\uFF0C\u5916\u90E8\u7684 <strong>try</strong> \u8BED\u53E5\u4F3C\u4E4E\u5DF2\u7ECF\u8DB3\u591F\u4E86\u3002\u7136\u800C\u51FA\u4E8E\u67D0\u79CD\u539F\u56E0\uFF0CJava \u8981\u6C42\u4E24\u8005\u90FD\u5FC5\u987B\u5B58\u5728(\u8FD9\u4E5F\u53EF\u80FD\u662F\u4E00\u4E2A bug)\u3002\u8FD8\u8981\u6CE8\u610F\u7684\u662F\u5728 <strong>filter()</strong> \u4E2D\uFF0C\u6211\u4EEC\u5FC5\u987B\u663E\u5F0F\u5730\u4F7F\u7528 <strong>f.toString()</strong> \u8F6C\u4E3A\u5B57\u7B26\u4E32\uFF0C\u5426\u5219\u6211\u4EEC\u8C03\u7528 <strong>endsWith()</strong> \u5C06\u4F1A\u4E0E\u6574\u4E2A <strong>Path</strong> \u5BF9\u8C61\u8FDB\u884C\u6BD4\u8F83\uFF0C\u800C\u4E0D\u662F\u8DEF\u5F84\u540D\u79F0\u5B57\u7B26\u4E32\u7684\u4E00\u90E8\u5206\u8FDB\u884C\u6BD4\u8F83\u3002</p><p>\u4E00\u65E6\u6211\u4EEC\u4ECE <strong>FileSystem</strong> \u4E2D\u5F97\u5230\u4E86 <strong>WatchService</strong> \u5BF9\u8C61\uFF0C\u6211\u4EEC\u5C06\u5176\u6CE8\u518C\u5230 <strong>test</strong> \u8DEF\u5F84\u4EE5\u53CA\u6211\u4EEC\u611F\u5174\u8DA3\u7684\u9879\u76EE\u7684\u53D8\u91CF\u53C2\u6570\u5217\u8868\u4E2D\uFF0C\u53EF\u4EE5\u9009\u62E9 <strong>ENTRY_CREATE</strong>\uFF0C<strong>ENTRY_DELETE</strong> \u6216 <strong>ENTRY_MODIFY</strong>(\u5176\u4E2D\u521B\u5EFA\u548C\u5220\u9664\u4E0D\u5C5E\u4E8E\u4FEE\u6539)\u3002</p><p>\u56E0\u4E3A\u63A5\u4E0B\u6765\u5BF9 <strong>watcher.take()</strong> \u7684\u8C03\u7528\u4F1A\u5728\u53D1\u751F\u67D0\u4E9B\u4E8B\u60C5\u4E4B\u524D\u505C\u6B62\u6240\u6709\u64CD\u4F5C\uFF0C\u6240\u4EE5\u6211\u4EEC\u5E0C\u671B <strong>deltxtfiles()</strong> \u80FD\u591F\u5E76\u884C\u8FD0\u884C\u4EE5\u4FBF\u751F\u6210\u6211\u4EEC\u611F\u5174\u8DA3\u7684\u4E8B\u4EF6\u3002\u4E3A\u4E86\u5B9E\u73B0\u8FD9\u4E2A\u76EE\u7684\uFF0C\u6211\u901A\u8FC7\u8C03\u7528 <strong>Executors.newSingleThreadScheduledExecutor()</strong> \u4EA7\u751F\u4E00\u4E2A <strong>ScheduledExecutorService</strong> \u5BF9\u8C61\uFF0C\u7136\u540E\u8C03\u7528 <strong>schedule()</strong> \u65B9\u6CD5\u4F20\u9012\u6240\u9700\u51FD\u6570\u7684\u65B9\u6CD5\u5F15\u7528\uFF0C\u5E76\u4E14\u8BBE\u7F6E\u5728\u8FD0\u884C\u4E4B\u524D\u5E94\u8BE5\u7B49\u5F85\u7684\u65F6\u95F4\u3002</p><p>\u6B64\u65F6\uFF0C<strong>watcher.take()</strong> \u5C06\u7B49\u5F85\u5E76\u963B\u585E\u5728\u8FD9\u91CC\u3002\u5F53\u76EE\u6807\u4E8B\u4EF6\u53D1\u751F\u65F6\uFF0C\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u5305\u542B <strong>WatchEvent</strong> \u7684 <strong>Watchkey</strong> \u5BF9\u8C61\u3002\u5C55\u793A\u7684\u8FD9\u4E09\u79CD\u65B9\u6CD5\u662F\u80FD\u5BF9 <strong>WatchEvent</strong> \u6267\u884C\u7684\u5168\u90E8\u64CD\u4F5C\u3002</p><p>\u67E5\u770B\u8F93\u51FA\u7684\u5177\u4F53\u5185\u5BB9\u3002\u5373\u4F7F\u6211\u4EEC\u6B63\u5728\u5220\u9664\u4EE5 <strong>.txt</strong> \u7ED3\u5C3E\u7684\u6587\u4EF6\uFF0C\u5728 <strong>Hello.txt</strong> \u88AB\u5220\u9664\u4E4B\u524D\uFF0C<strong>WatchService</strong> \u4E5F\u4E0D\u4F1A\u88AB\u89E6\u53D1\u3002\u4F60\u53EF\u80FD\u8BA4\u4E3A\uFF0C\u5982\u679C\u8BF4&quot;\u76D1\u89C6\u8FD9\u4E2A\u76EE\u5F55&quot;\uFF0C\u81EA\u7136\u4F1A\u5305\u542B\u6574\u4E2A\u76EE\u5F55\u548C\u4E0B\u9762\u5B50\u76EE\u5F55\uFF0C\u4F46\u5B9E\u9645\u4E0A\uFF1A\u53EA\u4F1A\u76D1\u89C6\u7ED9\u5B9A\u7684\u76EE\u5F55\uFF0C\u800C\u4E0D\u662F\u4E0B\u9762\u7684\u6240\u6709\u5185\u5BB9\u3002\u5982\u679C\u9700\u8981\u76D1\u89C6\u6574\u4E2A\u6811\u76EE\u5F55\uFF0C\u5FC5\u987B\u5728\u6574\u4E2A\u6811\u7684\u6BCF\u4E2A\u5B50\u76EE\u5F55\u4E0A\u653E\u7F6E\u4E00\u4E2A <strong>Watchservice</strong>\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// files/TreeWatcher.java</span>
<span class="token comment">// {ExcludeFromGradle}</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token import static"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token class-name">StandardWatchEventKinds</span><span class="token punctuation">.</span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TreeWatcher</span> <span class="token punctuation">{</span>

    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">watchDir</span><span class="token punctuation">(</span><span class="token class-name">Path</span> dir<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">WatchService</span> watcher <span class="token operator">=</span>
            <span class="token class-name">FileSystems</span><span class="token punctuation">.</span><span class="token function">getDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newWatchService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            dir<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span>watcher<span class="token punctuation">,</span> ENTRY_DELETE<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newSingleThreadExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token class-name">WatchKey</span> key <span class="token operator">=</span> watcher<span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">WatchEvent</span> evt <span class="token operator">:</span> key<span class="token punctuation">.</span><span class="token function">pollEvents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
                        <span class="token string">&quot;evt.context(): &quot;</span> <span class="token operator">+</span> evt<span class="token punctuation">.</span><span class="token function">context</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
                        <span class="token string">&quot;\\nevt.count(): &quot;</span> <span class="token operator">+</span> evt<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
                        <span class="token string">&quot;\\nevt.kind(): &quot;</span> <span class="token operator">+</span> evt<span class="token punctuation">.</span><span class="token function">kind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">Directories</span><span class="token punctuation">.</span><span class="token function">refreshTestDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Directories</span><span class="token punctuation">.</span><span class="token function">populateTestDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">walk</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token class-name">Files</span><span class="token operator">::</span><span class="token function">isDirectory</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">TreeWatcher</span><span class="token operator">::</span><span class="token function">watchDir</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">PathWatcher</span><span class="token punctuation">.</span><span class="token function">delTxtFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">/* Output:
deleting test\\bag\\foo\\bar\\baz\\File.txt
deleting test\\bar\\baz\\bag\\foo\\File.txt
evt.context(): File.txt
evt.count(): 1
evt.kind(): ENTRY_DELETE
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728 <strong>watchDir()</strong> \u65B9\u6CD5\u4E2D\u7ED9 <strong>WatchSevice</strong> \u63D0\u4F9B\u53C2\u6570 <strong>ENTRY_DELETE</strong>\uFF0C\u5E76\u542F\u52A8\u4E00\u4E2A\u72EC\u7ACB\u7684\u7EBF\u7A0B\u6765\u76D1\u89C6\u8BE5<strong>Watchservice</strong>\u3002\u8FD9\u91CC\u6211\u4EEC\u6CA1\u6709\u4F7F\u7528 <strong>schedule()</strong> \u8FDB\u884C\u542F\u52A8\uFF0C\u800C\u662F\u4F7F\u7528 <strong>submit()</strong> \u542F\u52A8\u7EBF\u7A0B\u3002\u6211\u4EEC\u904D\u5386\u6574\u4E2A\u76EE\u5F55\u6811\uFF0C\u5E76\u5C06 <strong>watchDir()</strong> \u5E94\u7528\u4E8E\u6BCF\u4E2A\u5B50\u76EE\u5F55\u3002\u73B0\u5728\uFF0C\u5F53\u6211\u4EEC\u8FD0\u884C <strong>deltxtfiles()</strong> \u65F6\uFF0C\u5176\u4E2D\u4E00\u4E2A <strong>Watchservice</strong> \u4F1A\u68C0\u6D4B\u5230\u6BCF\u4E00\u6B21\u6587\u4EF6\u5220\u9664\u3002</p><h2 id="\u6587\u4EF6\u67E5\u627E" tabindex="-1"><a class="header-anchor" href="#\u6587\u4EF6\u67E5\u627E" aria-hidden="true">#</a> \u6587\u4EF6\u67E5\u627E</h2><p>\u5230\u76EE\u524D\u4E3A\u6B62\uFF0C\u4E3A\u4E86\u627E\u5230\u6587\u4EF6\uFF0C\u6211\u4EEC\u4E00\u76F4\u4F7F\u7528\u76F8\u5F53\u7C97\u7CD9\u7684\u65B9\u6CD5\uFF0C\u5728 <code>path</code> \u4E0A\u8C03\u7528 <code>toString()</code>\uFF0C\u7136\u540E\u4F7F\u7528 <code>string</code> \u64CD\u4F5C\u67E5\u770B\u7ED3\u679C\u3002\u4E8B\u5B9E\u8BC1\u660E\uFF0C<code>java.nio.file</code> \u6709\u66F4\u597D\u7684\u89E3\u51B3\u65B9\u6848\uFF1A\u901A\u8FC7\u5728 <code>FileSystem</code> \u5BF9\u8C61\u4E0A\u8C03\u7528 <code>getPathMatcher()</code> \u83B7\u5F97\u4E00\u4E2A <code>PathMatcher</code>\uFF0C\u7136\u540E\u4F20\u5165\u60A8\u611F\u5174\u8DA3\u7684\u6A21\u5F0F\u3002\u6A21\u5F0F\u6709\u4E24\u4E2A\u9009\u9879\uFF1A<code>glob</code> \u548C <code>regex</code>\u3002<code>glob</code> \u6BD4\u8F83\u7B80\u5355\uFF0C\u5B9E\u9645\u4E0A\u529F\u80FD\u975E\u5E38\u5F3A\u5927\uFF0C\u56E0\u6B64\u60A8\u53EF\u4EE5\u4F7F\u7528 <code>glob</code> \u89E3\u51B3\u8BB8\u591A\u95EE\u9898\u3002\u5982\u679C\u60A8\u7684\u95EE\u9898\u66F4\u590D\u6742\uFF0C\u53EF\u4EE5\u4F7F\u7528 <code>regex</code>\uFF0C\u8FD9\u5C06\u5728\u63A5\u4E0B\u6765\u7684 <code>Strings</code> \u4E00\u7AE0\u4E2D\u89E3\u91CA\u3002</p><p>\u5728\u8FD9\u91CC\uFF0C\u6211\u4EEC\u4F7F\u7528 <code>glob</code> \u67E5\u627E\u4EE5 <code>.tmp</code> \u6216 <code>.txt</code> \u7ED3\u5C3E\u7684\u6240\u6709 <code>Path</code>\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// files/Find.java</span>
<span class="token comment">// {ExcludeFromGradle}</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Find</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">Path</span> test <span class="token operator">=</span> <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Directories</span><span class="token punctuation">.</span><span class="token function">refreshTestDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Directories</span><span class="token punctuation">.</span><span class="token function">populateTestDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Creating a *directory*, not a file:</span>
        <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">createDirectory</span><span class="token punctuation">(</span>test<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;dir.tmp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">PathMatcher</span> matcher <span class="token operator">=</span> <span class="token class-name">FileSystems</span><span class="token punctuation">.</span><span class="token function">getDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">getPathMatcher</span><span class="token punctuation">(</span><span class="token string">&quot;glob:**/*.{tmp,txt}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">walk</span><span class="token punctuation">(</span>test<span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>matcher<span class="token operator">::</span><span class="token function">matches</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;***************&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">PathMatcher</span> matcher2 <span class="token operator">=</span> <span class="token class-name">FileSystems</span><span class="token punctuation">.</span><span class="token function">getDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">getPathMatcher</span><span class="token punctuation">(</span><span class="token string">&quot;glob:*.tmp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">walk</span><span class="token punctuation">(</span>test<span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">Path</span><span class="token operator">::</span><span class="token function">getFileName</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>matcher2<span class="token operator">::</span><span class="token function">matches</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;***************&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">walk</span><span class="token punctuation">(</span>test<span class="token punctuation">)</span> <span class="token comment">// Only look for files</span>
          <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token class-name">Files</span><span class="token operator">::</span><span class="token function">isRegularFile</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">Path</span><span class="token operator">::</span><span class="token function">getFileName</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>matcher2<span class="token operator">::</span><span class="token function">matches</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">/* Output:
test\\bag\\foo\\bar\\baz\\5208762845883213974.tmp
test\\bag\\foo\\bar\\baz\\File.txt
test\\bar\\baz\\bag\\foo\\7918367201207778677.tmp
test\\bar\\baz\\bag\\foo\\File.txt
test\\baz\\bag\\foo\\bar\\8016595521026696632.tmp
test\\baz\\bag\\foo\\bar\\File.txt
test\\dir.tmp
test\\foo\\bar\\baz\\bag\\5832319279813617280.tmp
test\\foo\\bar\\baz\\bag\\File.txt
***************
5208762845883213974.tmp
7918367201207778677.tmp
8016595521026696632.tmp
dir.tmp
5832319279813617280.tmp
***************
5208762845883213974.tmp
7918367201207778677.tmp
8016595521026696632.tmp
5832319279813617280.tmp
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728 <code>matcher</code> \u4E2D\uFF0C<code>glob</code> \u8868\u8FBE\u5F0F\u5F00\u5934\u7684 <code>**/</code> \u8868\u793A\u201C\u5F53\u524D\u76EE\u5F55\u53CA\u6240\u6709\u5B50\u76EE\u5F55\u201D\uFF0C\u8FD9\u5728\u5F53\u4F60\u4E0D\u4EC5\u4EC5\u8981\u5339\u914D\u5F53\u524D\u76EE\u5F55\u4E0B\u7279\u5B9A\u7ED3\u5C3E\u7684 <code>Path</code> \u65F6\u975E\u5E38\u6709\u7528\u3002\u5355 <code>*</code> \u8868\u793A\u201C\u4EFB\u4F55\u4E1C\u897F\u201D\uFF0C\u7136\u540E\u662F\u4E00\u4E2A\u70B9\uFF0C\u7136\u540E\u5927\u62EC\u53F7\u8868\u793A\u4E00\u7CFB\u5217\u7684\u53EF\u80FD\u6027---\u6211\u4EEC\u6B63\u5728\u5BFB\u627E\u4EE5 <code>.tmp</code> \u6216 <code>.txt</code> \u7ED3\u5C3E\u7684\u4E1C\u897F\u3002\u60A8\u53EF\u4EE5\u5728 <code>getPathMatcher()</code> \u6587\u6863\u4E2D\u627E\u5230\u66F4\u591A\u8BE6\u7EC6\u4FE1\u606F\u3002</p><p><code>matcher2</code> \u53EA\u4F7F\u7528 <code>*.tmp</code>\uFF0C\u901A\u5E38\u4E0D\u5339\u914D\u4EFB\u4F55\u5185\u5BB9\uFF0C\u4F46\u662F\u6DFB\u52A0 <code>map()</code> \u64CD\u4F5C\u4F1A\u5C06\u5B8C\u6574\u8DEF\u5F84\u51CF\u5C11\u5230\u672B\u5C3E\u7684\u540D\u79F0\u3002</p><p>\u6CE8\u610F\uFF0C\u5728\u8FD9\u4E24\u79CD\u60C5\u51B5\u4E0B\uFF0C\u8F93\u51FA\u4E2D\u90FD\u4F1A\u51FA\u73B0 <code>dir.tmp</code>\uFF0C\u5373\u4F7F\u5B83\u662F\u4E00\u4E2A\u76EE\u5F55\u800C\u4E0D\u662F\u4E00\u4E2A\u6587\u4EF6\u3002\u8981\u53EA\u67E5\u627E\u6587\u4EF6\uFF0C\u5FC5\u987B\u50CF\u5728\u6700\u540E <code>files.walk()</code> \u4E2D\u90A3\u6837\u5BF9\u5176\u8FDB\u884C\u7B5B\u9009\u3002</p><h2 id="\u6587\u4EF6\u8BFB\u5199" tabindex="-1"><a class="header-anchor" href="#\u6587\u4EF6\u8BFB\u5199" aria-hidden="true">#</a> \u6587\u4EF6\u8BFB\u5199</h2><p>\u6B64\u65F6\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5BF9\u8DEF\u5F84\u548C\u76EE\u5F55\u505A\u4EFB\u4F55\u4E8B\u60C5\u3002 \u73B0\u5728\u8BA9\u6211\u4EEC\u770B\u4E00\u4E0B\u64CD\u7EB5\u6587\u4EF6\u672C\u8EAB\u7684\u5185\u5BB9\u3002</p><p>\u5982\u679C\u4E00\u4E2A\u6587\u4EF6\u5F88\u201C\u5C0F\u201D\uFF0C\u4E5F\u5C31\u662F\u8BF4\u201C\u5B83\u8FD0\u884C\u5F97\u8DB3\u591F\u5FEB\u4E14\u5360\u7528\u5185\u5B58\u5C0F\u201D\uFF0C\u90A3\u4E48 <code>java.nio.file.Files</code> \u7C7B\u4E2D\u7684\u5B9E\u7528\u7A0B\u5E8F\u5C06\u5E2E\u52A9\u4F60\u8F7B\u677E\u8BFB\u5199\u6587\u672C\u548C\u4E8C\u8FDB\u5236\u6587\u4EF6\u3002</p><p><code>Files.readAllLines()</code> \u4E00\u6B21\u8BFB\u53D6\u6574\u4E2A\u6587\u4EF6\uFF08\u56E0\u6B64\uFF0C\u201C\u5C0F\u201D\u6587\u4EF6\u5F88\u6709\u5FC5\u8981\uFF09\uFF0C\u4EA7\u751F\u4E00\u4E2A<code>List&lt;String&gt;</code>\u3002 \u5BF9\u4E8E\u793A\u4F8B\u6587\u4EF6\uFF0C\u6211\u4EEC\u5C06\u91CD\u7528<code>streams/Cheese.dat</code>\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// files/ListOfLines.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ListOfLines</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">readAllLines</span><span class="token punctuation">(</span>
        <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;../streams/Cheese.dat&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>line <span class="token operator">-&gt;</span> <span class="token operator">!</span>line<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;//&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>line <span class="token operator">-&gt;</span>
            line<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> line<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">/* Output:
Not much of a cheese
Finest in the
And what leads you
Well, it&#39;s
It&#39;s certainly uncon
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8DF3\u8FC7\u6CE8\u91CA\u884C\uFF0C\u5176\u4F59\u7684\u5185\u5BB9\u6BCF\u884C\u53EA\u6253\u5370\u4E00\u534A\u3002 \u8FD9\u5B9E\u73B0\u8D77\u6765\u5F88\u7B80\u5355\uFF1A\u4F60\u53EA\u9700\u5C06 <code>Path</code> \u4F20\u9012\u7ED9 <code>readAllLines()</code> \uFF08\u4EE5\u524D\u7684 java \u5B9E\u73B0\u8FD9\u4E2A\u529F\u80FD\u5F88\u590D\u6742\uFF09\u3002<code>readAllLines()</code> \u6709\u4E00\u4E2A\u91CD\u8F7D\u7248\u672C\uFF0C\u5305\u542B\u4E00\u4E2A <code>Charset</code> \u53C2\u6570\u6765\u5B58\u50A8\u6587\u4EF6\u7684 Unicode \u7F16\u7801\u3002</p><p><code>Files.write()</code> \u88AB\u91CD\u8F7D\u4EE5\u5199\u5165 <code>byte</code> \u6570\u7EC4\u6216\u4EFB\u4F55 <code>Iterable</code> \u5BF9\u8C61\uFF08\u5B83\u4E5F\u6709 <code>Charset</code> \u9009\u9879\uFF09\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// files/Writing.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Writing</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token class-name">Random</span> rand <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token number">47</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> SIZE <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span>
    
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token comment">// Write bytes to a file:</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span>SIZE<span class="token punctuation">]</span><span class="token punctuation">;</span>
        rand<span class="token punctuation">.</span><span class="token function">nextBytes</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;bytes.dat&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> bytes<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;bytes.dat: &quot;</span> <span class="token operator">+</span> <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;bytes.dat&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Write an iterable to a file:</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> lines <span class="token operator">=</span> <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">readAllLines</span><span class="token punctuation">(</span>
          <span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;../streams/Cheese.dat&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;Cheese.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> lines<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Cheese.txt: &quot;</span> <span class="token operator">+</span> <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;Cheese.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">/* Output:
bytes.dat: 1000
Cheese.txt: 199
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u4F7F\u7528 <code>Random</code> \u6765\u521B\u5EFA\u4E00\u4E2A\u968F\u673A\u7684 <code>byte</code> \u6570\u7EC4; \u4F60\u53EF\u4EE5\u770B\u5230\u751F\u6210\u7684\u6587\u4EF6\u5927\u5C0F\u662F 1000\u3002</p><p>\u4E00\u4E2A <code>List</code> \u88AB\u5199\u5165\u6587\u4EF6\uFF0C\u4EFB\u4F55 <code>Iterable</code> \u5BF9\u8C61\u4E5F\u53EF\u4EE5\u8FD9\u4E48\u505A\u3002</p><p>\u5982\u679C\u6587\u4EF6\u5927\u5C0F\u6709\u95EE\u9898\u600E\u4E48\u529E\uFF1F \u6BD4\u5982\u8BF4\uFF1A</p><ol><li><p>\u6587\u4EF6\u592A\u5927\uFF0C\u5982\u679C\u4F60\u4E00\u6B21\u6027\u8BFB\u5B8C\u6574\u4E2A\u6587\u4EF6\uFF0C\u4F60\u53EF\u80FD\u4F1A\u8017\u5C3D\u5185\u5B58\u3002</p></li><li><p>\u60A8\u53EA\u9700\u8981\u5728\u6587\u4EF6\u7684\u4E2D\u9014\u5DE5\u4F5C\u4EE5\u83B7\u5F97\u6240\u9700\u7684\u7ED3\u679C\uFF0C\u56E0\u6B64\u8BFB\u53D6\u6574\u4E2A\u6587\u4EF6\u4F1A\u6D6A\u8D39\u65F6\u95F4\u3002</p></li></ol><p><code>Files.lines()</code> \u65B9\u4FBF\u5730\u5C06\u6587\u4EF6\u8F6C\u6362\u4E3A\u884C\u7684 <code>Stream</code>\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// files/ReadLineStream.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ReadLineStream</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">lines</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;PathInfo.java&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">findFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">ifPresent</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">/* Output:
    show(&quot;RegularFile&quot;, Files.isRegularFile(p));
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u5BF9\u672C\u7AE0\u4E2D\u7B2C\u4E00\u4E2A\u793A\u4F8B\u4EE3\u7801\u505A\u4E86\u6D41\u5F0F\u5904\u7406\uFF0C\u8DF3\u8FC7 13 \u884C\uFF0C\u7136\u540E\u9009\u62E9\u4E0B\u4E00\u884C\u5E76\u5C06\u5176\u6253\u5370\u51FA\u6765\u3002</p><p><code>Files.lines()</code> \u5BF9\u4E8E\u628A\u6587\u4EF6\u5904\u7406\u884C\u7684\u4F20\u5165\u6D41\u65F6\u975E\u5E38\u6709\u7528\uFF0C\u4F46\u662F\u5982\u679C\u4F60\u60F3\u5728 <code>Stream</code> \u4E2D\u8BFB\u53D6\uFF0C\u5904\u7406\u6216\u5199\u5165\u600E\u4E48\u529E\uFF1F\u8FD9\u5C31\u9700\u8981\u7A0D\u5FAE\u590D\u6742\u7684\u4EE3\u7801\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// files/StreamInAndOut.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StreamInAndOut</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span><span class="token punctuation">(</span>
          <span class="token class-name">Stream</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> input <span class="token operator">=</span>
            <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">lines</span><span class="token punctuation">(</span><span class="token class-name">Paths</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;StreamInAndOut.java&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token class-name">PrintWriter</span> output <span class="token operator">=</span>
            <span class="token keyword">new</span> <span class="token class-name">PrintWriter</span><span class="token punctuation">(</span><span class="token string">&quot;StreamInAndOut.txt&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            input<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token operator">::</span><span class="token function">toUpperCase</span><span class="token punctuation">)</span>
              <span class="token punctuation">.</span><span class="token function">forEachOrdered</span><span class="token punctuation">(</span>output<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56E0\u4E3A\u6211\u4EEC\u5728\u540C\u4E00\u4E2A\u5757\u4E2D\u6267\u884C\u6240\u6709\u64CD\u4F5C\uFF0C\u6240\u4EE5\u8FD9\u4E24\u4E2A\u6587\u4EF6\u90FD\u53EF\u4EE5\u5728\u76F8\u540C\u7684 try-with-resources \u8BED\u53E5\u4E2D\u6253\u5F00\u3002<code>PrintWriter</code> \u662F\u4E00\u4E2A\u65E7\u5F0F\u7684 <code>java.io</code> \u7C7B\uFF0C\u5141\u8BB8\u4F60\u201C\u6253\u5370\u201D\u5230\u4E00\u4E2A\u6587\u4EF6\uFF0C\u6240\u4EE5\u5B83\u662F\u8FD9\u4E2A\u5E94\u7528\u7684\u7406\u60F3\u9009\u62E9\u3002\u5982\u679C\u4F60\u770B\u4E00\u4E0B <code>StreamInAndOut.txt</code>\uFF0C\u4F60\u4F1A\u53D1\u73B0\u5B83\u91CC\u9762\u7684\u5185\u5BB9\u786E\u5B9E\u662F\u5927\u5199\u7684\u3002</p><h2 id="\u672C\u7AE0\u5C0F\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u672C\u7AE0\u5C0F\u7ED3" aria-hidden="true">#</a> \u672C\u7AE0\u5C0F\u7ED3</h2><p>\u867D\u7136\u672C\u7AE0\u5BF9\u6587\u4EF6\u548C\u76EE\u5F55\u64CD\u4F5C\u505A\u4E86\u76F8\u5F53\u5168\u9762\u7684\u4ECB\u7ECD\uFF0C\u4F46\u662F\u4ECD\u7136\u6709\u6CA1\u88AB\u4ECB\u7ECD\u7684\u7C7B\u5E93\u4E2D\u7684\u529F\u80FD\u2014\u2014\u4E00\u5B9A\u8981\u7814\u7A76 <code>java.nio.file</code> \u7684 Javadocs\uFF0C\u5C24\u5176\u662F <code>java.nio.file.Files</code> \u8FD9\u4E2A\u7C7B\u3002</p><p>Java 7 \u548C 8 \u5BF9\u4E8E\u5904\u7406\u6587\u4EF6\u548C\u76EE\u5F55\u7684\u7C7B\u5E93\u505A\u4E86\u5927\u91CF\u6539\u8FDB\u3002\u5982\u679C\u60A8\u521A\u521A\u5F00\u59CB\u4F7F\u7528 Java\uFF0C\u90A3\u4E48\u60A8\u5F88\u5E78\u8FD0\u3002\u5728\u8FC7\u53BB\uFF0C\u5B83\u4EE4\u4EBA\u975E\u5E38\u4E0D\u6109\u5FEB\uFF0C\u6211\u786E\u4FE1 Java \u8BBE\u8BA1\u8005\u4EE5\u524D\u5BF9\u4E8E\u6587\u4EF6\u64CD\u4F5C\u4E0D\u591F\u91CD\u89C6\u624D\u6CA1\u505A\u7B80\u5316\u3002\u5BF9\u4E8E\u521D\u5B66\u8005\u6765\u8BF4\u8FD9\u662F\u4E00\u4EF6\u5F88\u68D2\u7684\u4E8B\uFF0C\u5BF9\u4E8E\u6559\u5B66\u8005\u6765\u8BF4\u4E5F\u4E00\u6837\u3002\u6211\u4E0D\u660E\u767D\u4E3A\u4EC0\u4E48\u82B1\u4E86\u8FD9\u4E48\u957F\u65F6\u95F4\u6765\u89E3\u51B3\u8FD9\u4E2A\u660E\u663E\u7684\u95EE\u9898\uFF0C\u4F46\u4E0D\u7BA1\u600E\u4E48\u8BF4\u5B83\u88AB\u89E3\u51B3\u4E86\uFF0C\u6211\u5F88\u9AD8\u5174\u3002\u4F7F\u7528\u6587\u4EF6\u73B0\u5728\u5F88\u7B80\u5355\uFF0C\u751A\u81F3\u5F88\u6709\u8DA3\uFF0C\u8FD9\u662F\u4F60\u4EE5\u524D\u6C38\u8FDC\u60F3\u4E0D\u5230\u7684\u3002</p><div style="page-break-after:always;"></div>`,76);function f(h,y){const a=p("RouterLink");return e(),o("div",null,[k,r,d,n("p",null,[v,c(a,{to:"/docs/reprint/onjava8/book/Appendix-IO-Streams.html"},{default:i(()=>[m]),_:1}),b]),g])}var q=t(u,[["render",f],["__file","17-Files.html.vue"]]);export{q as default};
